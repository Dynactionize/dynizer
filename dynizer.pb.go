// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dynizer.proto

package dynizer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//ComponentType
type ComponentType int32

const (
	ComponentType_InvalidComponentType ComponentType = 0
	//subject data category
	ComponentType_Who ComponentType = 1
	//object data category
	ComponentType_What ComponentType = 2
	//spatial data category
	ComponentType_Where ComponentType = 3
	//temporal data category
	ComponentType_When ComponentType = 4
)

var ComponentType_name = map[int32]string{
	0: "InvalidComponentType",
	1: "Who",
	2: "What",
	3: "Where",
	4: "When",
}

var ComponentType_value = map[string]int32{
	"InvalidComponentType": 0,
	"Who":                  1,
	"What":                 2,
	"Where":                3,
	"When":                 4,
}

func (x ComponentType) String() string {
	return proto.EnumName(ComponentType_name, int32(x))
}

func (ComponentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{0}
}

//DataType
type DataType int32

const (
	DataType_InvalidDataType DataType = 0
	//Integer
	DataType_DT_Integer DataType = 1
	//String
	DataType_DT_String DataType = 2
	//Boolean
	DataType_DT_Boolean DataType = 3
	//Decimal fixed
	DataType_DT_Decimal DataType = 4
	//Timestamp
	DataType_DT_Timestamp DataType = 5
	//URI
	DataType_DT_Uri DataType = 6
	//VOID is a designated DataType to indicate no value
	DataType_DT_Void DataType = 7
	//Float
	DataType_DT_Float DataType = 8
	//UInt
	DataType_DT_UnsignedInteger DataType = 9
	//Byte Array
	DataType_DT_Binary DataType = 10
	//UUID
	DataType_DT_Uuid DataType = 11
	//FullTextIndex large object
	DataType_DT_Text DataType = 12
	//Binary large object
	DataType_DT_Blob DataType = 13
	//Character large object
	DataType_DT_Clob DataType = 14
	// DT_Date = 16;
	// DT_Time = 17;
	//special flag to indiacte all DataTypes, to be used in AlternativeDataTypes for ActionLabels and MetaDataKeys
	DataType_DT_Any DataType = 100000
	//special flag to indiacte thet the value is to be removed
	DataType_DT_Delete DataType = 100001
)

var DataType_name = map[int32]string{
	0:      "InvalidDataType",
	1:      "DT_Integer",
	2:      "DT_String",
	3:      "DT_Boolean",
	4:      "DT_Decimal",
	5:      "DT_Timestamp",
	6:      "DT_Uri",
	7:      "DT_Void",
	8:      "DT_Float",
	9:      "DT_UnsignedInteger",
	10:     "DT_Binary",
	11:     "DT_Uuid",
	12:     "DT_Text",
	13:     "DT_Blob",
	14:     "DT_Clob",
	100000: "DT_Any",
	100001: "DT_Delete",
}

var DataType_value = map[string]int32{
	"InvalidDataType":    0,
	"DT_Integer":         1,
	"DT_String":          2,
	"DT_Boolean":         3,
	"DT_Decimal":         4,
	"DT_Timestamp":       5,
	"DT_Uri":             6,
	"DT_Void":            7,
	"DT_Float":           8,
	"DT_UnsignedInteger": 9,
	"DT_Binary":          10,
	"DT_Uuid":            11,
	"DT_Text":            12,
	"DT_Blob":            13,
	"DT_Clob":            14,
	"DT_Any":             100000,
	"DT_Delete":          100001,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}

func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{1}
}

//ObjectDataType
type ObjectDataType int32

const (
	ObjectDataType_InvalidObjectDataType ObjectDataType = 0
	//object is of type TEXT, which can be indexed by the FullTextIndex (if enabled)
	ObjectDataType_ODT_Text ObjectDataType = 12
	//object is of type binary
	ObjectDataType_ODT_Blob ObjectDataType = 13
	//object is of type character
	ObjectDataType_ODT_Clob ObjectDataType = 14
)

var ObjectDataType_name = map[int32]string{
	0:  "InvalidObjectDataType",
	12: "ODT_Text",
	13: "ODT_Blob",
	14: "ODT_Clob",
}

var ObjectDataType_value = map[string]int32{
	"InvalidObjectDataType": 0,
	"ODT_Text":              12,
	"ODT_Blob":              13,
	"ODT_Clob":              14,
}

func (x ObjectDataType) String() string {
	return proto.EnumName(ObjectDataType_name, int32(x))
}

func (ObjectDataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{2}
}

//SortOrder
type SortOrder int32

const (
	// order ascending
	SortOrder_Asc SortOrder = 0
	//order descending
	SortOrder_Desc SortOrder = 1
)

var SortOrder_name = map[int32]string{
	0: "Asc",
	1: "Desc",
}

var SortOrder_value = map[string]int32{
	"Asc":  0,
	"Desc": 1,
}

func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}

func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{3}
}

//OrderField
type OrderField int32

const (
	//order by created
	OrderField_Created OrderField = 0
	//order by name
	OrderField_Name OrderField = 1
)

var OrderField_name = map[int32]string{
	0: "Created",
	1: "Name",
}

var OrderField_value = map[string]int32{
	"Created": 0,
	"Name":    1,
}

func (x OrderField) String() string {
	return proto.EnumName(OrderField_name, int32(x))
}

func (OrderField) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{4}
}

// ErrorMeta metadata holds an encoded gRPC error metadata.
type ErrorMeta struct {
	// Dynizer error code.
	DynizerCode int64 `protobuf:"varint,1,opt,name=dynizer_code,json=dynizerCode,proto3" json:"dynizer_code,omitempty"`
	// Error UUID.
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Original error.
	OriginalError string `protobuf:"bytes,3,opt,name=original_error,json=originalError,proto3" json:"original_error,omitempty"`
	// Error meta args
	Args                 []*ErrorArg `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ErrorMeta) Reset()         { *m = ErrorMeta{} }
func (m *ErrorMeta) String() string { return proto.CompactTextString(m) }
func (*ErrorMeta) ProtoMessage()    {}
func (*ErrorMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{0}
}

func (m *ErrorMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMeta.Unmarshal(m, b)
}
func (m *ErrorMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMeta.Marshal(b, m, deterministic)
}
func (m *ErrorMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMeta.Merge(m, src)
}
func (m *ErrorMeta) XXX_Size() int {
	return xxx_messageInfo_ErrorMeta.Size(m)
}
func (m *ErrorMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMeta proto.InternalMessageInfo

func (m *ErrorMeta) GetDynizerCode() int64 {
	if m != nil {
		return m.DynizerCode
	}
	return 0
}

func (m *ErrorMeta) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ErrorMeta) GetOriginalError() string {
	if m != nil {
		return m.OriginalError
	}
	return ""
}

func (m *ErrorMeta) GetArgs() []*ErrorArg {
	if m != nil {
		return m.Args
	}
	return nil
}

// ErrorArg holds an argument of an encoded gRPC error metadata
type ErrorArg struct {
	// Types that are valid to be assigned to Arg:
	//	*ErrorArg_IntArg
	//	*ErrorArg_BoolArg
	//	*ErrorArg_StringArg
	//	*ErrorArg_DoubleArg
	//	*ErrorArg_BytesArg
	Arg                  isErrorArg_Arg `protobuf_oneof:"arg"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ErrorArg) Reset()         { *m = ErrorArg{} }
func (m *ErrorArg) String() string { return proto.CompactTextString(m) }
func (*ErrorArg) ProtoMessage()    {}
func (*ErrorArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{1}
}

func (m *ErrorArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorArg.Unmarshal(m, b)
}
func (m *ErrorArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorArg.Marshal(b, m, deterministic)
}
func (m *ErrorArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorArg.Merge(m, src)
}
func (m *ErrorArg) XXX_Size() int {
	return xxx_messageInfo_ErrorArg.Size(m)
}
func (m *ErrorArg) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorArg.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorArg proto.InternalMessageInfo

type isErrorArg_Arg interface {
	isErrorArg_Arg()
}

type ErrorArg_IntArg struct {
	IntArg int64 `protobuf:"varint,1,opt,name=int_arg,json=intArg,proto3,oneof"`
}

type ErrorArg_BoolArg struct {
	BoolArg bool `protobuf:"varint,2,opt,name=bool_arg,json=boolArg,proto3,oneof"`
}

type ErrorArg_StringArg struct {
	StringArg string `protobuf:"bytes,3,opt,name=string_arg,json=stringArg,proto3,oneof"`
}

type ErrorArg_DoubleArg struct {
	DoubleArg float64 `protobuf:"fixed64,4,opt,name=double_arg,json=doubleArg,proto3,oneof"`
}

type ErrorArg_BytesArg struct {
	BytesArg []byte `protobuf:"bytes,5,opt,name=bytes_arg,json=bytesArg,proto3,oneof"`
}

func (*ErrorArg_IntArg) isErrorArg_Arg() {}

func (*ErrorArg_BoolArg) isErrorArg_Arg() {}

func (*ErrorArg_StringArg) isErrorArg_Arg() {}

func (*ErrorArg_DoubleArg) isErrorArg_Arg() {}

func (*ErrorArg_BytesArg) isErrorArg_Arg() {}

func (m *ErrorArg) GetArg() isErrorArg_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *ErrorArg) GetIntArg() int64 {
	if x, ok := m.GetArg().(*ErrorArg_IntArg); ok {
		return x.IntArg
	}
	return 0
}

func (m *ErrorArg) GetBoolArg() bool {
	if x, ok := m.GetArg().(*ErrorArg_BoolArg); ok {
		return x.BoolArg
	}
	return false
}

func (m *ErrorArg) GetStringArg() string {
	if x, ok := m.GetArg().(*ErrorArg_StringArg); ok {
		return x.StringArg
	}
	return ""
}

func (m *ErrorArg) GetDoubleArg() float64 {
	if x, ok := m.GetArg().(*ErrorArg_DoubleArg); ok {
		return x.DoubleArg
	}
	return 0
}

func (m *ErrorArg) GetBytesArg() []byte {
	if x, ok := m.GetArg().(*ErrorArg_BytesArg); ok {
		return x.BytesArg
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ErrorArg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ErrorArg_IntArg)(nil),
		(*ErrorArg_BoolArg)(nil),
		(*ErrorArg_StringArg)(nil),
		(*ErrorArg_DoubleArg)(nil),
		(*ErrorArg_BytesArg)(nil),
	}
}

//ErrorResponse
type ErrorResponse struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Detail               string   `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	Reference            string   `protobuf:"bytes,5,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{2}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ErrorResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ErrorResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ErrorResponse) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *ErrorResponse) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

//LoginRequest
type LoginReq struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{3}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *LoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

//ServiceLoginReq
type ServiceLoginReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceLoginReq) Reset()         { *m = ServiceLoginReq{} }
func (m *ServiceLoginReq) String() string { return proto.CompactTextString(m) }
func (*ServiceLoginReq) ProtoMessage()    {}
func (*ServiceLoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{4}
}

func (m *ServiceLoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLoginReq.Unmarshal(m, b)
}
func (m *ServiceLoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLoginReq.Marshal(b, m, deterministic)
}
func (m *ServiceLoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLoginReq.Merge(m, src)
}
func (m *ServiceLoginReq) XXX_Size() int {
	return xxx_messageInfo_ServiceLoginReq.Size(m)
}
func (m *ServiceLoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLoginReq proto.InternalMessageInfo

func (m *ServiceLoginReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//TokenRequest
type TokenReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenReq) Reset()         { *m = TokenReq{} }
func (m *TokenReq) String() string { return proto.CompactTextString(m) }
func (*TokenReq) ProtoMessage()    {}
func (*TokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{5}
}

func (m *TokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenReq.Unmarshal(m, b)
}
func (m *TokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenReq.Marshal(b, m, deterministic)
}
func (m *TokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenReq.Merge(m, src)
}
func (m *TokenReq) XXX_Size() int {
	return xxx_messageInfo_TokenReq.Size(m)
}
func (m *TokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_TokenReq proto.InternalMessageInfo

func (m *TokenReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//AddUserRequest
type AddUserReq struct {
	User                 string         `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password             string         `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Roles                []*DynizerRole `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Disabled             bool           `protobuf:"varint,4,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddUserReq) Reset()         { *m = AddUserReq{} }
func (m *AddUserReq) String() string { return proto.CompactTextString(m) }
func (*AddUserReq) ProtoMessage()    {}
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{6}
}

func (m *AddUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserReq.Unmarshal(m, b)
}
func (m *AddUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserReq.Marshal(b, m, deterministic)
}
func (m *AddUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserReq.Merge(m, src)
}
func (m *AddUserReq) XXX_Size() int {
	return xxx_messageInfo_AddUserReq.Size(m)
}
func (m *AddUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserReq proto.InternalMessageInfo

func (m *AddUserReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *AddUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserReq) GetRoles() []*DynizerRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *AddUserReq) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

//UserRoleRequest
type UserRoleReq struct {
	User                 string       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Role                 *DynizerRole `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserRoleReq) Reset()         { *m = UserRoleReq{} }
func (m *UserRoleReq) String() string { return proto.CompactTextString(m) }
func (*UserRoleReq) ProtoMessage()    {}
func (*UserRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{7}
}

func (m *UserRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRoleReq.Unmarshal(m, b)
}
func (m *UserRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRoleReq.Marshal(b, m, deterministic)
}
func (m *UserRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRoleReq.Merge(m, src)
}
func (m *UserRoleReq) XXX_Size() int {
	return xxx_messageInfo_UserRoleReq.Size(m)
}
func (m *UserRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserRoleReq proto.InternalMessageInfo

func (m *UserRoleReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *UserRoleReq) GetRole() *DynizerRole {
	if m != nil {
		return m.Role
	}
	return nil
}

//UserRequest
type UserReq struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReq) Reset()         { *m = UserReq{} }
func (m *UserReq) String() string { return proto.CompactTextString(m) }
func (*UserReq) ProtoMessage()    {}
func (*UserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{8}
}

func (m *UserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReq.Unmarshal(m, b)
}
func (m *UserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReq.Marshal(b, m, deterministic)
}
func (m *UserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReq.Merge(m, src)
}
func (m *UserReq) XXX_Size() int {
	return xxx_messageInfo_UserReq.Size(m)
}
func (m *UserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserReq proto.InternalMessageInfo

func (m *UserReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

//CheckPasswordReq
type CheckPasswordReq struct {
	Password             string   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckPasswordReq) Reset()         { *m = CheckPasswordReq{} }
func (m *CheckPasswordReq) String() string { return proto.CompactTextString(m) }
func (*CheckPasswordReq) ProtoMessage()    {}
func (*CheckPasswordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{9}
}

func (m *CheckPasswordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPasswordReq.Unmarshal(m, b)
}
func (m *CheckPasswordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPasswordReq.Marshal(b, m, deterministic)
}
func (m *CheckPasswordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPasswordReq.Merge(m, src)
}
func (m *CheckPasswordReq) XXX_Size() int {
	return xxx_messageInfo_CheckPasswordReq.Size(m)
}
func (m *CheckPasswordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPasswordReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPasswordReq proto.InternalMessageInfo

func (m *CheckPasswordReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

//WindowRequest
type WindowReq struct {
	Window               *Window  `protobuf:"bytes,1,opt,name=window,proto3" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowReq) Reset()         { *m = WindowReq{} }
func (m *WindowReq) String() string { return proto.CompactTextString(m) }
func (*WindowReq) ProtoMessage()    {}
func (*WindowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{10}
}

func (m *WindowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowReq.Unmarshal(m, b)
}
func (m *WindowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowReq.Marshal(b, m, deterministic)
}
func (m *WindowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowReq.Merge(m, src)
}
func (m *WindowReq) XXX_Size() int {
	return xxx_messageInfo_WindowReq.Size(m)
}
func (m *WindowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowReq.DiscardUnknown(m)
}

var xxx_messageInfo_WindowReq proto.InternalMessageInfo

func (m *WindowReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

//ListActionNamesWindowReq
type ListActionNamesWindowReq struct {
	ActionTypeLabel      string     `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	Window               *Window    `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
	OrderField           OrderField `protobuf:"varint,3,opt,name=order_field,json=orderField,proto3,enum=OrderField" json:"order_field,omitempty"`
	OrderDirection       SortOrder  `protobuf:"varint,4,opt,name=order_direction,json=orderDirection,proto3,enum=SortOrder" json:"order_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListActionNamesWindowReq) Reset()         { *m = ListActionNamesWindowReq{} }
func (m *ListActionNamesWindowReq) String() string { return proto.CompactTextString(m) }
func (*ListActionNamesWindowReq) ProtoMessage()    {}
func (*ListActionNamesWindowReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{11}
}

func (m *ListActionNamesWindowReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActionNamesWindowReq.Unmarshal(m, b)
}
func (m *ListActionNamesWindowReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActionNamesWindowReq.Marshal(b, m, deterministic)
}
func (m *ListActionNamesWindowReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActionNamesWindowReq.Merge(m, src)
}
func (m *ListActionNamesWindowReq) XXX_Size() int {
	return xxx_messageInfo_ListActionNamesWindowReq.Size(m)
}
func (m *ListActionNamesWindowReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActionNamesWindowReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListActionNamesWindowReq proto.InternalMessageInfo

func (m *ListActionNamesWindowReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

func (m *ListActionNamesWindowReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

func (m *ListActionNamesWindowReq) GetOrderField() OrderField {
	if m != nil {
		return m.OrderField
	}
	return OrderField_Created
}

func (m *ListActionNamesWindowReq) GetOrderDirection() SortOrder {
	if m != nil {
		return m.OrderDirection
	}
	return SortOrder_Asc
}

//SetUserPasswordRequest
type SetUserPasswordReq struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUserPasswordReq) Reset()         { *m = SetUserPasswordReq{} }
func (m *SetUserPasswordReq) String() string { return proto.CompactTextString(m) }
func (*SetUserPasswordReq) ProtoMessage()    {}
func (*SetUserPasswordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{12}
}

func (m *SetUserPasswordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUserPasswordReq.Unmarshal(m, b)
}
func (m *SetUserPasswordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUserPasswordReq.Marshal(b, m, deterministic)
}
func (m *SetUserPasswordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUserPasswordReq.Merge(m, src)
}
func (m *SetUserPasswordReq) XXX_Size() int {
	return xxx_messageInfo_SetUserPasswordReq.Size(m)
}
func (m *SetUserPasswordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUserPasswordReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetUserPasswordReq proto.InternalMessageInfo

func (m *SetUserPasswordReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *SetUserPasswordReq) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

//ChangePasswordRequest
type ChangePasswordReq struct {
	OldPassword          string   `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordReq) Reset()         { *m = ChangePasswordReq{} }
func (m *ChangePasswordReq) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordReq) ProtoMessage()    {}
func (*ChangePasswordReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{13}
}

func (m *ChangePasswordReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordReq.Unmarshal(m, b)
}
func (m *ChangePasswordReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordReq.Marshal(b, m, deterministic)
}
func (m *ChangePasswordReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordReq.Merge(m, src)
}
func (m *ChangePasswordReq) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordReq.Size(m)
}
func (m *ChangePasswordReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordReq proto.InternalMessageInfo

func (m *ChangePasswordReq) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ChangePasswordReq) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

//CheckActionNameRequest
type CheckActionNameReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckActionNameReq) Reset()         { *m = CheckActionNameReq{} }
func (m *CheckActionNameReq) String() string { return proto.CompactTextString(m) }
func (*CheckActionNameReq) ProtoMessage()    {}
func (*CheckActionNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{14}
}

func (m *CheckActionNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckActionNameReq.Unmarshal(m, b)
}
func (m *CheckActionNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckActionNameReq.Marshal(b, m, deterministic)
}
func (m *CheckActionNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckActionNameReq.Merge(m, src)
}
func (m *CheckActionNameReq) XXX_Size() int {
	return xxx_messageInfo_CheckActionNameReq.Size(m)
}
func (m *CheckActionNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckActionNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckActionNameReq proto.InternalMessageInfo

func (m *CheckActionNameReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

//CreateActionRequest
type CreateActionReq struct {
	ActionName           string         `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	IfNotExists          bool           `protobuf:"varint,2,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	ActionLabels         []*ActionLabel `protobuf:"bytes,3,rep,name=action_labels,json=actionLabels,proto3" json:"action_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateActionReq) Reset()         { *m = CreateActionReq{} }
func (m *CreateActionReq) String() string { return proto.CompactTextString(m) }
func (*CreateActionReq) ProtoMessage()    {}
func (*CreateActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{15}
}

func (m *CreateActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateActionReq.Unmarshal(m, b)
}
func (m *CreateActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateActionReq.Marshal(b, m, deterministic)
}
func (m *CreateActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateActionReq.Merge(m, src)
}
func (m *CreateActionReq) XXX_Size() int {
	return xxx_messageInfo_CreateActionReq.Size(m)
}
func (m *CreateActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateActionReq proto.InternalMessageInfo

func (m *CreateActionReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *CreateActionReq) GetIfNotExists() bool {
	if m != nil {
		return m.IfNotExists
	}
	return false
}

func (m *CreateActionReq) GetActionLabels() []*ActionLabel {
	if m != nil {
		return m.ActionLabels
	}
	return nil
}

type ActionName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionName) Reset()         { *m = ActionName{} }
func (m *ActionName) String() string { return proto.CompactTextString(m) }
func (*ActionName) ProtoMessage()    {}
func (*ActionName) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{16}
}

func (m *ActionName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionName.Unmarshal(m, b)
}
func (m *ActionName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionName.Marshal(b, m, deterministic)
}
func (m *ActionName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionName.Merge(m, src)
}
func (m *ActionName) XXX_Size() int {
	return xxx_messageInfo_ActionName.Size(m)
}
func (m *ActionName) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionName.DiscardUnknown(m)
}

var xxx_messageInfo_ActionName proto.InternalMessageInfo

func (m *ActionName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//UpdateActionRequest
type UpdateActionReq struct {
	ActionName           string      `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	NewActionName        *ActionName `protobuf:"bytes,2,opt,name=new_action_name,json=newActionName,proto3" json:"new_action_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateActionReq) Reset()         { *m = UpdateActionReq{} }
func (m *UpdateActionReq) String() string { return proto.CompactTextString(m) }
func (*UpdateActionReq) ProtoMessage()    {}
func (*UpdateActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{17}
}

func (m *UpdateActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateActionReq.Unmarshal(m, b)
}
func (m *UpdateActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateActionReq.Marshal(b, m, deterministic)
}
func (m *UpdateActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateActionReq.Merge(m, src)
}
func (m *UpdateActionReq) XXX_Size() int {
	return xxx_messageInfo_UpdateActionReq.Size(m)
}
func (m *UpdateActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateActionReq proto.InternalMessageInfo

func (m *UpdateActionReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *UpdateActionReq) GetNewActionName() *ActionName {
	if m != nil {
		return m.NewActionName
	}
	return nil
}

//DeleteActionReq
type DeleteActionReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	Cascade              bool     `protobuf:"varint,2,opt,name=cascade,proto3" json:"cascade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteActionReq) Reset()         { *m = DeleteActionReq{} }
func (m *DeleteActionReq) String() string { return proto.CompactTextString(m) }
func (*DeleteActionReq) ProtoMessage()    {}
func (*DeleteActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{18}
}

func (m *DeleteActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteActionReq.Unmarshal(m, b)
}
func (m *DeleteActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteActionReq.Marshal(b, m, deterministic)
}
func (m *DeleteActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteActionReq.Merge(m, src)
}
func (m *DeleteActionReq) XXX_Size() int {
	return xxx_messageInfo_DeleteActionReq.Size(m)
}
func (m *DeleteActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteActionReq proto.InternalMessageInfo

func (m *DeleteActionReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *DeleteActionReq) GetCascade() bool {
	if m != nil {
		return m.Cascade
	}
	return false
}

//ActionRequest
type ActionReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionReq) Reset()         { *m = ActionReq{} }
func (m *ActionReq) String() string { return proto.CompactTextString(m) }
func (*ActionReq) ProtoMessage()    {}
func (*ActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{19}
}

func (m *ActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionReq.Unmarshal(m, b)
}
func (m *ActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionReq.Marshal(b, m, deterministic)
}
func (m *ActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionReq.Merge(m, src)
}
func (m *ActionReq) XXX_Size() int {
	return xxx_messageInfo_ActionReq.Size(m)
}
func (m *ActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActionReq proto.InternalMessageInfo

func (m *ActionReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

//ActionResponse
type ActionRes struct {
	Action               *Action  `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionRes) Reset()         { *m = ActionRes{} }
func (m *ActionRes) String() string { return proto.CompactTextString(m) }
func (*ActionRes) ProtoMessage()    {}
func (*ActionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{20}
}

func (m *ActionRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRes.Unmarshal(m, b)
}
func (m *ActionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRes.Marshal(b, m, deterministic)
}
func (m *ActionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRes.Merge(m, src)
}
func (m *ActionRes) XXX_Size() int {
	return xxx_messageInfo_ActionRes.Size(m)
}
func (m *ActionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRes proto.InternalMessageInfo

func (m *ActionRes) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

//CreateActionTypeRequest
type CreateActionTypeReq struct {
	ActionTypeLabel      string   `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	IfNotExists          bool     `protobuf:"varint,2,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateActionTypeReq) Reset()         { *m = CreateActionTypeReq{} }
func (m *CreateActionTypeReq) String() string { return proto.CompactTextString(m) }
func (*CreateActionTypeReq) ProtoMessage()    {}
func (*CreateActionTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{21}
}

func (m *CreateActionTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateActionTypeReq.Unmarshal(m, b)
}
func (m *CreateActionTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateActionTypeReq.Marshal(b, m, deterministic)
}
func (m *CreateActionTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateActionTypeReq.Merge(m, src)
}
func (m *CreateActionTypeReq) XXX_Size() int {
	return xxx_messageInfo_CreateActionTypeReq.Size(m)
}
func (m *CreateActionTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateActionTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateActionTypeReq proto.InternalMessageInfo

func (m *CreateActionTypeReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

func (m *CreateActionTypeReq) GetIfNotExists() bool {
	if m != nil {
		return m.IfNotExists
	}
	return false
}

type ActionTypeLabel struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionTypeLabel) Reset()         { *m = ActionTypeLabel{} }
func (m *ActionTypeLabel) String() string { return proto.CompactTextString(m) }
func (*ActionTypeLabel) ProtoMessage()    {}
func (*ActionTypeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{22}
}

func (m *ActionTypeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionTypeLabel.Unmarshal(m, b)
}
func (m *ActionTypeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionTypeLabel.Marshal(b, m, deterministic)
}
func (m *ActionTypeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionTypeLabel.Merge(m, src)
}
func (m *ActionTypeLabel) XXX_Size() int {
	return xxx_messageInfo_ActionTypeLabel.Size(m)
}
func (m *ActionTypeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionTypeLabel.DiscardUnknown(m)
}

var xxx_messageInfo_ActionTypeLabel proto.InternalMessageInfo

func (m *ActionTypeLabel) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

//UpdateActionTypeRequest
type UpdateActionTypeReq struct {
	ActionTypeLabel      string           `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	NewActionTypeLabel   *ActionTypeLabel `protobuf:"bytes,2,opt,name=new_action_type_label,json=newActionTypeLabel,proto3" json:"new_action_type_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateActionTypeReq) Reset()         { *m = UpdateActionTypeReq{} }
func (m *UpdateActionTypeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateActionTypeReq) ProtoMessage()    {}
func (*UpdateActionTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{23}
}

func (m *UpdateActionTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateActionTypeReq.Unmarshal(m, b)
}
func (m *UpdateActionTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateActionTypeReq.Marshal(b, m, deterministic)
}
func (m *UpdateActionTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateActionTypeReq.Merge(m, src)
}
func (m *UpdateActionTypeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateActionTypeReq.Size(m)
}
func (m *UpdateActionTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateActionTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateActionTypeReq proto.InternalMessageInfo

func (m *UpdateActionTypeReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

func (m *UpdateActionTypeReq) GetNewActionTypeLabel() *ActionTypeLabel {
	if m != nil {
		return m.NewActionTypeLabel
	}
	return nil
}

//DeleteActionTypeRequest
type DeleteActionTypeReq struct {
	ActionTypeLabel      string   `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	Cascade              bool     `protobuf:"varint,2,opt,name=cascade,proto3" json:"cascade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteActionTypeReq) Reset()         { *m = DeleteActionTypeReq{} }
func (m *DeleteActionTypeReq) String() string { return proto.CompactTextString(m) }
func (*DeleteActionTypeReq) ProtoMessage()    {}
func (*DeleteActionTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{24}
}

func (m *DeleteActionTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteActionTypeReq.Unmarshal(m, b)
}
func (m *DeleteActionTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteActionTypeReq.Marshal(b, m, deterministic)
}
func (m *DeleteActionTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteActionTypeReq.Merge(m, src)
}
func (m *DeleteActionTypeReq) XXX_Size() int {
	return xxx_messageInfo_DeleteActionTypeReq.Size(m)
}
func (m *DeleteActionTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteActionTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteActionTypeReq proto.InternalMessageInfo

func (m *DeleteActionTypeReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

func (m *DeleteActionTypeReq) GetCascade() bool {
	if m != nil {
		return m.Cascade
	}
	return false
}

//ActionTypeRequest
type ActionTypeReq struct {
	ActionTypeLabel      string   `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionTypeReq) Reset()         { *m = ActionTypeReq{} }
func (m *ActionTypeReq) String() string { return proto.CompactTextString(m) }
func (*ActionTypeReq) ProtoMessage()    {}
func (*ActionTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{25}
}

func (m *ActionTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionTypeReq.Unmarshal(m, b)
}
func (m *ActionTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionTypeReq.Marshal(b, m, deterministic)
}
func (m *ActionTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionTypeReq.Merge(m, src)
}
func (m *ActionTypeReq) XXX_Size() int {
	return xxx_messageInfo_ActionTypeReq.Size(m)
}
func (m *ActionTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActionTypeReq proto.InternalMessageInfo

func (m *ActionTypeReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

//ActionTypeResponse
type ActionTypeRes struct {
	ActionType           int64    `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	ActionTypeLabel      string   `protobuf:"bytes,2,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionTypeRes) Reset()         { *m = ActionTypeRes{} }
func (m *ActionTypeRes) String() string { return proto.CompactTextString(m) }
func (*ActionTypeRes) ProtoMessage()    {}
func (*ActionTypeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{26}
}

func (m *ActionTypeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionTypeRes.Unmarshal(m, b)
}
func (m *ActionTypeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionTypeRes.Marshal(b, m, deterministic)
}
func (m *ActionTypeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionTypeRes.Merge(m, src)
}
func (m *ActionTypeRes) XXX_Size() int {
	return xxx_messageInfo_ActionTypeRes.Size(m)
}
func (m *ActionTypeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionTypeRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActionTypeRes proto.InternalMessageInfo

func (m *ActionTypeRes) GetActionType() int64 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *ActionTypeRes) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

//EmptyRequest
type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{27}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

//CheckActionLabelNameRequest
type CheckActionLabelNameReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckActionLabelNameReq) Reset()         { *m = CheckActionLabelNameReq{} }
func (m *CheckActionLabelNameReq) String() string { return proto.CompactTextString(m) }
func (*CheckActionLabelNameReq) ProtoMessage()    {}
func (*CheckActionLabelNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{28}
}

func (m *CheckActionLabelNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckActionLabelNameReq.Unmarshal(m, b)
}
func (m *CheckActionLabelNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckActionLabelNameReq.Marshal(b, m, deterministic)
}
func (m *CheckActionLabelNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckActionLabelNameReq.Merge(m, src)
}
func (m *CheckActionLabelNameReq) XXX_Size() int {
	return xxx_messageInfo_CheckActionLabelNameReq.Size(m)
}
func (m *CheckActionLabelNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckActionLabelNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckActionLabelNameReq proto.InternalMessageInfo

func (m *CheckActionLabelNameReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *CheckActionLabelNameReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

//AddActionLabelRequest
type AddActionLabelReq struct {
	ActionName           string        `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	IfNotExists          bool          `protobuf:"varint,2,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	ActionLabelName      string        `protobuf:"bytes,3,opt,name=action_label_name,json=actionLabelName,proto3" json:"action_label_name,omitempty"`
	Component            ComponentType `protobuf:"varint,4,opt,name=component,proto3,enum=ComponentType" json:"component,omitempty"`
	DefaultDataType      DataType      `protobuf:"varint,5,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MinOccurrence        uint32        `protobuf:"varint,6,opt,name=min_occurrence,json=minOccurrence,proto3" json:"min_occurrence,omitempty"`
	MaxOccurrence        uint32        `protobuf:"varint,7,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType    `protobuf:"varint,8,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddActionLabelReq) Reset()         { *m = AddActionLabelReq{} }
func (m *AddActionLabelReq) String() string { return proto.CompactTextString(m) }
func (*AddActionLabelReq) ProtoMessage()    {}
func (*AddActionLabelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{29}
}

func (m *AddActionLabelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddActionLabelReq.Unmarshal(m, b)
}
func (m *AddActionLabelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddActionLabelReq.Marshal(b, m, deterministic)
}
func (m *AddActionLabelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddActionLabelReq.Merge(m, src)
}
func (m *AddActionLabelReq) XXX_Size() int {
	return xxx_messageInfo_AddActionLabelReq.Size(m)
}
func (m *AddActionLabelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddActionLabelReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddActionLabelReq proto.InternalMessageInfo

func (m *AddActionLabelReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *AddActionLabelReq) GetIfNotExists() bool {
	if m != nil {
		return m.IfNotExists
	}
	return false
}

func (m *AddActionLabelReq) GetActionLabelName() string {
	if m != nil {
		return m.ActionLabelName
	}
	return ""
}

func (m *AddActionLabelReq) GetComponent() ComponentType {
	if m != nil {
		return m.Component
	}
	return ComponentType_InvalidComponentType
}

func (m *AddActionLabelReq) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *AddActionLabelReq) GetMinOccurrence() uint32 {
	if m != nil {
		return m.MinOccurrence
	}
	return 0
}

func (m *AddActionLabelReq) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *AddActionLabelReq) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//UpdateActionLabelReq
type UpdateActionLabelReq struct {
	ActionName           string     `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionLabel          string     `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	NewActionLabelName   string     `protobuf:"bytes,3,opt,name=new_action_label_name,json=newActionLabelName,proto3" json:"new_action_label_name,omitempty"`
	DefaultDataType      DataType   `protobuf:"varint,4,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MinOccurrence        uint32     `protobuf:"varint,5,opt,name=min_occurrence,json=minOccurrence,proto3" json:"min_occurrence,omitempty"`
	MaxOccurrence        uint32     `protobuf:"varint,6,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType `protobuf:"varint,7,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	Cascade              bool       `protobuf:"varint,8,opt,name=cascade,proto3" json:"cascade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateActionLabelReq) Reset()         { *m = UpdateActionLabelReq{} }
func (m *UpdateActionLabelReq) String() string { return proto.CompactTextString(m) }
func (*UpdateActionLabelReq) ProtoMessage()    {}
func (*UpdateActionLabelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{30}
}

func (m *UpdateActionLabelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateActionLabelReq.Unmarshal(m, b)
}
func (m *UpdateActionLabelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateActionLabelReq.Marshal(b, m, deterministic)
}
func (m *UpdateActionLabelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateActionLabelReq.Merge(m, src)
}
func (m *UpdateActionLabelReq) XXX_Size() int {
	return xxx_messageInfo_UpdateActionLabelReq.Size(m)
}
func (m *UpdateActionLabelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateActionLabelReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateActionLabelReq proto.InternalMessageInfo

func (m *UpdateActionLabelReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *UpdateActionLabelReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *UpdateActionLabelReq) GetNewActionLabelName() string {
	if m != nil {
		return m.NewActionLabelName
	}
	return ""
}

func (m *UpdateActionLabelReq) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *UpdateActionLabelReq) GetMinOccurrence() uint32 {
	if m != nil {
		return m.MinOccurrence
	}
	return 0
}

func (m *UpdateActionLabelReq) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *UpdateActionLabelReq) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

func (m *UpdateActionLabelReq) GetCascade() bool {
	if m != nil {
		return m.Cascade
	}
	return false
}

//ActionLabelRequest
type ActionLabelReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionLabelReq) Reset()         { *m = ActionLabelReq{} }
func (m *ActionLabelReq) String() string { return proto.CompactTextString(m) }
func (*ActionLabelReq) ProtoMessage()    {}
func (*ActionLabelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{31}
}

func (m *ActionLabelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelReq.Unmarshal(m, b)
}
func (m *ActionLabelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelReq.Marshal(b, m, deterministic)
}
func (m *ActionLabelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelReq.Merge(m, src)
}
func (m *ActionLabelReq) XXX_Size() int {
	return xxx_messageInfo_ActionLabelReq.Size(m)
}
func (m *ActionLabelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelReq proto.InternalMessageInfo

func (m *ActionLabelReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ActionLabelReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

//CreateObjectRequest
type CreateObjectReq struct {
	Type                 ObjectDataType `protobuf:"varint,1,opt,name=type,proto3,enum=ObjectDataType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateObjectReq) Reset()         { *m = CreateObjectReq{} }
func (m *CreateObjectReq) String() string { return proto.CompactTextString(m) }
func (*CreateObjectReq) ProtoMessage()    {}
func (*CreateObjectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{32}
}

func (m *CreateObjectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateObjectReq.Unmarshal(m, b)
}
func (m *CreateObjectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateObjectReq.Marshal(b, m, deterministic)
}
func (m *CreateObjectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateObjectReq.Merge(m, src)
}
func (m *CreateObjectReq) XXX_Size() int {
	return xxx_messageInfo_CreateObjectReq.Size(m)
}
func (m *CreateObjectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateObjectReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateObjectReq proto.InternalMessageInfo

func (m *CreateObjectReq) GetType() ObjectDataType {
	if m != nil {
		return m.Type
	}
	return ObjectDataType_InvalidObjectDataType
}

//ObjectResponse
type ObjectRes struct {
	ObjectRef            *ObjectRef `protobuf:"bytes,2,opt,name=object_ref,json=objectRef,proto3" json:"object_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ObjectRes) Reset()         { *m = ObjectRes{} }
func (m *ObjectRes) String() string { return proto.CompactTextString(m) }
func (*ObjectRes) ProtoMessage()    {}
func (*ObjectRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{33}
}

func (m *ObjectRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectRes.Unmarshal(m, b)
}
func (m *ObjectRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectRes.Marshal(b, m, deterministic)
}
func (m *ObjectRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectRes.Merge(m, src)
}
func (m *ObjectRes) XXX_Size() int {
	return xxx_messageInfo_ObjectRes.Size(m)
}
func (m *ObjectRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectRes.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectRes proto.InternalMessageInfo

func (m *ObjectRes) GetObjectRef() *ObjectRef {
	if m != nil {
		return m.ObjectRef
	}
	return nil
}

//ClearObjectDataRequest
type ClearObjectDataReq struct {
	Type                 ObjectDataType `protobuf:"varint,1,opt,name=type,proto3,enum=ObjectDataType" json:"type,omitempty"`
	RefUuid              string         `protobuf:"bytes,2,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClearObjectDataReq) Reset()         { *m = ClearObjectDataReq{} }
func (m *ClearObjectDataReq) String() string { return proto.CompactTextString(m) }
func (*ClearObjectDataReq) ProtoMessage()    {}
func (*ClearObjectDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{34}
}

func (m *ClearObjectDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearObjectDataReq.Unmarshal(m, b)
}
func (m *ClearObjectDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearObjectDataReq.Marshal(b, m, deterministic)
}
func (m *ClearObjectDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearObjectDataReq.Merge(m, src)
}
func (m *ClearObjectDataReq) XXX_Size() int {
	return xxx_messageInfo_ClearObjectDataReq.Size(m)
}
func (m *ClearObjectDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearObjectDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClearObjectDataReq proto.InternalMessageInfo

func (m *ClearObjectDataReq) GetType() ObjectDataType {
	if m != nil {
		return m.Type
	}
	return ObjectDataType_InvalidObjectDataType
}

func (m *ClearObjectDataReq) GetRefUuid() string {
	if m != nil {
		return m.RefUuid
	}
	return ""
}

//StreamObjectDataRequest
type StreamObjectDataInReq struct {
	ObjectRef            *ObjectRef `protobuf:"bytes,1,opt,name=object_ref,json=objectRef,proto3" json:"object_ref,omitempty"`
	Data                 []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StreamObjectDataInReq) Reset()         { *m = StreamObjectDataInReq{} }
func (m *StreamObjectDataInReq) String() string { return proto.CompactTextString(m) }
func (*StreamObjectDataInReq) ProtoMessage()    {}
func (*StreamObjectDataInReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{35}
}

func (m *StreamObjectDataInReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamObjectDataInReq.Unmarshal(m, b)
}
func (m *StreamObjectDataInReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamObjectDataInReq.Marshal(b, m, deterministic)
}
func (m *StreamObjectDataInReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamObjectDataInReq.Merge(m, src)
}
func (m *StreamObjectDataInReq) XXX_Size() int {
	return xxx_messageInfo_StreamObjectDataInReq.Size(m)
}
func (m *StreamObjectDataInReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamObjectDataInReq.DiscardUnknown(m)
}

var xxx_messageInfo_StreamObjectDataInReq proto.InternalMessageInfo

func (m *StreamObjectDataInReq) GetObjectRef() *ObjectRef {
	if m != nil {
		return m.ObjectRef
	}
	return nil
}

func (m *StreamObjectDataInReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//ObjectDataOutRequest
type StreamObjectDataOutReq struct {
	Type                 ObjectDataType `protobuf:"varint,1,opt,name=type,proto3,enum=ObjectDataType" json:"type,omitempty"`
	RefUuid              string         `protobuf:"bytes,2,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StreamObjectDataOutReq) Reset()         { *m = StreamObjectDataOutReq{} }
func (m *StreamObjectDataOutReq) String() string { return proto.CompactTextString(m) }
func (*StreamObjectDataOutReq) ProtoMessage()    {}
func (*StreamObjectDataOutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{36}
}

func (m *StreamObjectDataOutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamObjectDataOutReq.Unmarshal(m, b)
}
func (m *StreamObjectDataOutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamObjectDataOutReq.Marshal(b, m, deterministic)
}
func (m *StreamObjectDataOutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamObjectDataOutReq.Merge(m, src)
}
func (m *StreamObjectDataOutReq) XXX_Size() int {
	return xxx_messageInfo_StreamObjectDataOutReq.Size(m)
}
func (m *StreamObjectDataOutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamObjectDataOutReq.DiscardUnknown(m)
}

var xxx_messageInfo_StreamObjectDataOutReq proto.InternalMessageInfo

func (m *StreamObjectDataOutReq) GetType() ObjectDataType {
	if m != nil {
		return m.Type
	}
	return ObjectDataType_InvalidObjectDataType
}

func (m *StreamObjectDataOutReq) GetRefUuid() string {
	if m != nil {
		return m.RefUuid
	}
	return ""
}

//StreamObjectDataOutResponse
type StreamObjectDataOutRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamObjectDataOutRes) Reset()         { *m = StreamObjectDataOutRes{} }
func (m *StreamObjectDataOutRes) String() string { return proto.CompactTextString(m) }
func (*StreamObjectDataOutRes) ProtoMessage()    {}
func (*StreamObjectDataOutRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{37}
}

func (m *StreamObjectDataOutRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamObjectDataOutRes.Unmarshal(m, b)
}
func (m *StreamObjectDataOutRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamObjectDataOutRes.Marshal(b, m, deterministic)
}
func (m *StreamObjectDataOutRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamObjectDataOutRes.Merge(m, src)
}
func (m *StreamObjectDataOutRes) XXX_Size() int {
	return xxx_messageInfo_StreamObjectDataOutRes.Size(m)
}
func (m *StreamObjectDataOutRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamObjectDataOutRes.DiscardUnknown(m)
}

var xxx_messageInfo_StreamObjectDataOutRes proto.InternalMessageInfo

func (m *StreamObjectDataOutRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//DownloadObjectDataRequest
type DownloadObjectDataReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	RefUuid              string   `protobuf:"bytes,2,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadObjectDataReq) Reset()         { *m = DownloadObjectDataReq{} }
func (m *DownloadObjectDataReq) String() string { return proto.CompactTextString(m) }
func (*DownloadObjectDataReq) ProtoMessage()    {}
func (*DownloadObjectDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{38}
}

func (m *DownloadObjectDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadObjectDataReq.Unmarshal(m, b)
}
func (m *DownloadObjectDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadObjectDataReq.Marshal(b, m, deterministic)
}
func (m *DownloadObjectDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadObjectDataReq.Merge(m, src)
}
func (m *DownloadObjectDataReq) XXX_Size() int {
	return xxx_messageInfo_DownloadObjectDataReq.Size(m)
}
func (m *DownloadObjectDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadObjectDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadObjectDataReq proto.InternalMessageInfo

func (m *DownloadObjectDataReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DownloadObjectDataReq) GetRefUuid() string {
	if m != nil {
		return m.RefUuid
	}
	return ""
}

//DownloadObjectDataResponse
type DownloadObjectDataRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadObjectDataRes) Reset()         { *m = DownloadObjectDataRes{} }
func (m *DownloadObjectDataRes) String() string { return proto.CompactTextString(m) }
func (*DownloadObjectDataRes) ProtoMessage()    {}
func (*DownloadObjectDataRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{39}
}

func (m *DownloadObjectDataRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadObjectDataRes.Unmarshal(m, b)
}
func (m *DownloadObjectDataRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadObjectDataRes.Marshal(b, m, deterministic)
}
func (m *DownloadObjectDataRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadObjectDataRes.Merge(m, src)
}
func (m *DownloadObjectDataRes) XXX_Size() int {
	return xxx_messageInfo_DownloadObjectDataRes.Size(m)
}
func (m *DownloadObjectDataRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadObjectDataRes.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadObjectDataRes proto.InternalMessageInfo

func (m *DownloadObjectDataRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//UploadObjectDataRequest
type UploadObjectDataReq struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	RefUuid              string   `protobuf:"bytes,2,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadObjectDataReq) Reset()         { *m = UploadObjectDataReq{} }
func (m *UploadObjectDataReq) String() string { return proto.CompactTextString(m) }
func (*UploadObjectDataReq) ProtoMessage()    {}
func (*UploadObjectDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{40}
}

func (m *UploadObjectDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadObjectDataReq.Unmarshal(m, b)
}
func (m *UploadObjectDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadObjectDataReq.Marshal(b, m, deterministic)
}
func (m *UploadObjectDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadObjectDataReq.Merge(m, src)
}
func (m *UploadObjectDataReq) XXX_Size() int {
	return xxx_messageInfo_UploadObjectDataReq.Size(m)
}
func (m *UploadObjectDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadObjectDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadObjectDataReq proto.InternalMessageInfo

func (m *UploadObjectDataReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UploadObjectDataReq) GetRefUuid() string {
	if m != nil {
		return m.RefUuid
	}
	return ""
}

func (m *UploadObjectDataReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//CreateInstanceRequest
type CreateInstanceReq struct {
	ActionName           string              `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	InstanceElements     []*InstanceElement  `protobuf:"bytes,2,rep,name=instance_elements,json=instanceElements,proto3" json:"instance_elements,omitempty"`
	InstanceMetadata     []*MetaDataKeyValue `protobuf:"bytes,3,rep,name=instance_metadata,json=instanceMetadata,proto3" json:"instance_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateInstanceReq) Reset()         { *m = CreateInstanceReq{} }
func (m *CreateInstanceReq) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceReq) ProtoMessage()    {}
func (*CreateInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{41}
}

func (m *CreateInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInstanceReq.Unmarshal(m, b)
}
func (m *CreateInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInstanceReq.Marshal(b, m, deterministic)
}
func (m *CreateInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInstanceReq.Merge(m, src)
}
func (m *CreateInstanceReq) XXX_Size() int {
	return xxx_messageInfo_CreateInstanceReq.Size(m)
}
func (m *CreateInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInstanceReq proto.InternalMessageInfo

func (m *CreateInstanceReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *CreateInstanceReq) GetInstanceElements() []*InstanceElement {
	if m != nil {
		return m.InstanceElements
	}
	return nil
}

func (m *CreateInstanceReq) GetInstanceMetadata() []*MetaDataKeyValue {
	if m != nil {
		return m.InstanceMetadata
	}
	return nil
}

type StreamInstanceReq struct {
	UserReference        string             `protobuf:"bytes,1,opt,name=user_reference,json=userReference,proto3" json:"user_reference,omitempty"`
	Instance             *CreateInstanceReq `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StreamInstanceReq) Reset()         { *m = StreamInstanceReq{} }
func (m *StreamInstanceReq) String() string { return proto.CompactTextString(m) }
func (*StreamInstanceReq) ProtoMessage()    {}
func (*StreamInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{42}
}

func (m *StreamInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInstanceReq.Unmarshal(m, b)
}
func (m *StreamInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInstanceReq.Marshal(b, m, deterministic)
}
func (m *StreamInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInstanceReq.Merge(m, src)
}
func (m *StreamInstanceReq) XXX_Size() int {
	return xxx_messageInfo_StreamInstanceReq.Size(m)
}
func (m *StreamInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInstanceReq proto.InternalMessageInfo

func (m *StreamInstanceReq) GetUserReference() string {
	if m != nil {
		return m.UserReference
	}
	return ""
}

func (m *StreamInstanceReq) GetInstance() *CreateInstanceReq {
	if m != nil {
		return m.Instance
	}
	return nil
}

//UpdateInstanceRequest
type UpdateInstanceReq struct {
	InstanceId           string                       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceCellElements []*InstanceUpdateElementCell `protobuf:"bytes,2,rep,name=instance_cell_elements,json=instanceCellElements,proto3" json:"instance_cell_elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *UpdateInstanceReq) Reset()         { *m = UpdateInstanceReq{} }
func (m *UpdateInstanceReq) String() string { return proto.CompactTextString(m) }
func (*UpdateInstanceReq) ProtoMessage()    {}
func (*UpdateInstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{43}
}

func (m *UpdateInstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateInstanceReq.Unmarshal(m, b)
}
func (m *UpdateInstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateInstanceReq.Marshal(b, m, deterministic)
}
func (m *UpdateInstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInstanceReq.Merge(m, src)
}
func (m *UpdateInstanceReq) XXX_Size() int {
	return xxx_messageInfo_UpdateInstanceReq.Size(m)
}
func (m *UpdateInstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInstanceReq proto.InternalMessageInfo

func (m *UpdateInstanceReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *UpdateInstanceReq) GetInstanceCellElements() []*InstanceUpdateElementCell {
	if m != nil {
		return m.InstanceCellElements
	}
	return nil
}

//InstanceRequest
type InstanceReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceReq) Reset()         { *m = InstanceReq{} }
func (m *InstanceReq) String() string { return proto.CompactTextString(m) }
func (*InstanceReq) ProtoMessage()    {}
func (*InstanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{44}
}

func (m *InstanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceReq.Unmarshal(m, b)
}
func (m *InstanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceReq.Marshal(b, m, deterministic)
}
func (m *InstanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceReq.Merge(m, src)
}
func (m *InstanceReq) XXX_Size() int {
	return xxx_messageInfo_InstanceReq.Size(m)
}
func (m *InstanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceReq proto.InternalMessageInfo

func (m *InstanceReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

//ReadActionInstancesRequest
type ReadActionInstancesReq struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	Window               *Window  `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadActionInstancesReq) Reset()         { *m = ReadActionInstancesReq{} }
func (m *ReadActionInstancesReq) String() string { return proto.CompactTextString(m) }
func (*ReadActionInstancesReq) ProtoMessage()    {}
func (*ReadActionInstancesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{45}
}

func (m *ReadActionInstancesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadActionInstancesReq.Unmarshal(m, b)
}
func (m *ReadActionInstancesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadActionInstancesReq.Marshal(b, m, deterministic)
}
func (m *ReadActionInstancesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadActionInstancesReq.Merge(m, src)
}
func (m *ReadActionInstancesReq) XXX_Size() int {
	return xxx_messageInfo_ReadActionInstancesReq.Size(m)
}
func (m *ReadActionInstancesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadActionInstancesReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadActionInstancesReq proto.InternalMessageInfo

func (m *ReadActionInstancesReq) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ReadActionInstancesReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

type CountActionReq struct {
	ActionTypeLabel      string   `protobuf:"bytes,1,opt,name=action_type_label,json=actionTypeLabel,proto3" json:"action_type_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountActionReq) Reset()         { *m = CountActionReq{} }
func (m *CountActionReq) String() string { return proto.CompactTextString(m) }
func (*CountActionReq) ProtoMessage()    {}
func (*CountActionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{46}
}

func (m *CountActionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountActionReq.Unmarshal(m, b)
}
func (m *CountActionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountActionReq.Marshal(b, m, deterministic)
}
func (m *CountActionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountActionReq.Merge(m, src)
}
func (m *CountActionReq) XXX_Size() int {
	return xxx_messageInfo_CountActionReq.Size(m)
}
func (m *CountActionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CountActionReq.DiscardUnknown(m)
}

var xxx_messageInfo_CountActionReq proto.InternalMessageInfo

func (m *CountActionReq) GetActionTypeLabel() string {
	if m != nil {
		return m.ActionTypeLabel
	}
	return ""
}

//DynizerQueryLanguageRequest
type DQLReq struct {
	Dql                  string      `protobuf:"bytes,1,opt,name=dql,proto3" json:"dql,omitempty"`
	Parameters           []*DQLParam `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DQLReq) Reset()         { *m = DQLReq{} }
func (m *DQLReq) String() string { return proto.CompactTextString(m) }
func (*DQLReq) ProtoMessage()    {}
func (*DQLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{47}
}

func (m *DQLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DQLReq.Unmarshal(m, b)
}
func (m *DQLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DQLReq.Marshal(b, m, deterministic)
}
func (m *DQLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DQLReq.Merge(m, src)
}
func (m *DQLReq) XXX_Size() int {
	return xxx_messageInfo_DQLReq.Size(m)
}
func (m *DQLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DQLReq.DiscardUnknown(m)
}

var xxx_messageInfo_DQLReq proto.InternalMessageInfo

func (m *DQLReq) GetDql() string {
	if m != nil {
		return m.Dql
	}
	return ""
}

func (m *DQLReq) GetParameters() []*DQLParam {
	if m != nil {
		return m.Parameters
	}
	return nil
}

//QueryResultRequest
type QueryResultReq struct {
	ResultHandle         string   `protobuf:"bytes,1,opt,name=result_handle,json=resultHandle,proto3" json:"result_handle,omitempty"`
	Window               *Window  `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResultReq) Reset()         { *m = QueryResultReq{} }
func (m *QueryResultReq) String() string { return proto.CompactTextString(m) }
func (*QueryResultReq) ProtoMessage()    {}
func (*QueryResultReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{48}
}

func (m *QueryResultReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResultReq.Unmarshal(m, b)
}
func (m *QueryResultReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResultReq.Marshal(b, m, deterministic)
}
func (m *QueryResultReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResultReq.Merge(m, src)
}
func (m *QueryResultReq) XXX_Size() int {
	return xxx_messageInfo_QueryResultReq.Size(m)
}
func (m *QueryResultReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResultReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResultReq proto.InternalMessageInfo

func (m *QueryResultReq) GetResultHandle() string {
	if m != nil {
		return m.ResultHandle
	}
	return ""
}

func (m *QueryResultReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

//QueryCloseRequest
type QueryCloseReq struct {
	ResultHandle         string   `protobuf:"bytes,1,opt,name=result_handle,json=resultHandle,proto3" json:"result_handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryCloseReq) Reset()         { *m = QueryCloseReq{} }
func (m *QueryCloseReq) String() string { return proto.CompactTextString(m) }
func (*QueryCloseReq) ProtoMessage()    {}
func (*QueryCloseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{49}
}

func (m *QueryCloseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryCloseReq.Unmarshal(m, b)
}
func (m *QueryCloseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryCloseReq.Marshal(b, m, deterministic)
}
func (m *QueryCloseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCloseReq.Merge(m, src)
}
func (m *QueryCloseReq) XXX_Size() int {
	return xxx_messageInfo_QueryCloseReq.Size(m)
}
func (m *QueryCloseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCloseReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCloseReq proto.InternalMessageInfo

func (m *QueryCloseReq) GetResultHandle() string {
	if m != nil {
		return m.ResultHandle
	}
	return ""
}

//CheckMetaDataKeyNameRequest
type CheckMetaDataKeyNameReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckMetaDataKeyNameReq) Reset()         { *m = CheckMetaDataKeyNameReq{} }
func (m *CheckMetaDataKeyNameReq) String() string { return proto.CompactTextString(m) }
func (*CheckMetaDataKeyNameReq) ProtoMessage()    {}
func (*CheckMetaDataKeyNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{50}
}

func (m *CheckMetaDataKeyNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMetaDataKeyNameReq.Unmarshal(m, b)
}
func (m *CheckMetaDataKeyNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMetaDataKeyNameReq.Marshal(b, m, deterministic)
}
func (m *CheckMetaDataKeyNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMetaDataKeyNameReq.Merge(m, src)
}
func (m *CheckMetaDataKeyNameReq) XXX_Size() int {
	return xxx_messageInfo_CheckMetaDataKeyNameReq.Size(m)
}
func (m *CheckMetaDataKeyNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMetaDataKeyNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMetaDataKeyNameReq proto.InternalMessageInfo

func (m *CheckMetaDataKeyNameReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//CreateMetaDataKeyRequest
type CreateMetaDataKeyReq struct {
	KeyName              string     `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	DefaultDataType      DataType   `protobuf:"varint,2,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MaxOccurrence        uint32     `protobuf:"varint,3,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType `protobuf:"varint,4,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateMetaDataKeyReq) Reset()         { *m = CreateMetaDataKeyReq{} }
func (m *CreateMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*CreateMetaDataKeyReq) ProtoMessage()    {}
func (*CreateMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{51}
}

func (m *CreateMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMetaDataKeyReq.Unmarshal(m, b)
}
func (m *CreateMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *CreateMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMetaDataKeyReq.Merge(m, src)
}
func (m *CreateMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_CreateMetaDataKeyReq.Size(m)
}
func (m *CreateMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMetaDataKeyReq proto.InternalMessageInfo

func (m *CreateMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *CreateMetaDataKeyReq) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *CreateMetaDataKeyReq) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *CreateMetaDataKeyReq) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//DeactivateMetaDataKeyReq
type DeactivateMetaDataKeyReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateMetaDataKeyReq) Reset()         { *m = DeactivateMetaDataKeyReq{} }
func (m *DeactivateMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*DeactivateMetaDataKeyReq) ProtoMessage()    {}
func (*DeactivateMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{52}
}

func (m *DeactivateMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateMetaDataKeyReq.Unmarshal(m, b)
}
func (m *DeactivateMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *DeactivateMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateMetaDataKeyReq.Merge(m, src)
}
func (m *DeactivateMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_DeactivateMetaDataKeyReq.Size(m)
}
func (m *DeactivateMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateMetaDataKeyReq proto.InternalMessageInfo

func (m *DeactivateMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//UpdateMetaDataKeyRequest
type UpdateMetaDataKeyReq struct {
	KeyName              string     `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	NewKeyName           string     `protobuf:"bytes,2,opt,name=new_key_name,json=newKeyName,proto3" json:"new_key_name,omitempty"`
	DefaultDataType      DataType   `protobuf:"varint,3,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MaxOccurrence        uint32     `protobuf:"varint,4,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType `protobuf:"varint,5,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateMetaDataKeyReq) Reset()         { *m = UpdateMetaDataKeyReq{} }
func (m *UpdateMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*UpdateMetaDataKeyReq) ProtoMessage()    {}
func (*UpdateMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{53}
}

func (m *UpdateMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMetaDataKeyReq.Unmarshal(m, b)
}
func (m *UpdateMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *UpdateMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMetaDataKeyReq.Merge(m, src)
}
func (m *UpdateMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_UpdateMetaDataKeyReq.Size(m)
}
func (m *UpdateMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMetaDataKeyReq proto.InternalMessageInfo

func (m *UpdateMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *UpdateMetaDataKeyReq) GetNewKeyName() string {
	if m != nil {
		return m.NewKeyName
	}
	return ""
}

func (m *UpdateMetaDataKeyReq) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *UpdateMetaDataKeyReq) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *UpdateMetaDataKeyReq) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//MetaDataKeyRequest
type MetaDataKeyReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataKeyReq) Reset()         { *m = MetaDataKeyReq{} }
func (m *MetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*MetaDataKeyReq) ProtoMessage()    {}
func (*MetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{54}
}

func (m *MetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataKeyReq.Unmarshal(m, b)
}
func (m *MetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *MetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataKeyReq.Merge(m, src)
}
func (m *MetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_MetaDataKeyReq.Size(m)
}
func (m *MetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataKeyReq proto.InternalMessageInfo

func (m *MetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//DeleteMetaDataKeyRequest
type DeleteMetaDataKeyReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Cascade              bool     `protobuf:"varint,2,opt,name=cascade,proto3" json:"cascade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMetaDataKeyReq) Reset()         { *m = DeleteMetaDataKeyReq{} }
func (m *DeleteMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*DeleteMetaDataKeyReq) ProtoMessage()    {}
func (*DeleteMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{55}
}

func (m *DeleteMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMetaDataKeyReq.Unmarshal(m, b)
}
func (m *DeleteMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *DeleteMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMetaDataKeyReq.Merge(m, src)
}
func (m *DeleteMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_DeleteMetaDataKeyReq.Size(m)
}
func (m *DeleteMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMetaDataKeyReq proto.InternalMessageInfo

func (m *DeleteMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *DeleteMetaDataKeyReq) GetCascade() bool {
	if m != nil {
		return m.Cascade
	}
	return false
}

//ListMetaDataKeysRequest
type ListMetaDataKeysReq struct {
	Window               *Window  `protobuf:"bytes,1,opt,name=window,proto3" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetaDataKeysReq) Reset()         { *m = ListMetaDataKeysReq{} }
func (m *ListMetaDataKeysReq) String() string { return proto.CompactTextString(m) }
func (*ListMetaDataKeysReq) ProtoMessage()    {}
func (*ListMetaDataKeysReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{56}
}

func (m *ListMetaDataKeysReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetaDataKeysReq.Unmarshal(m, b)
}
func (m *ListMetaDataKeysReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetaDataKeysReq.Marshal(b, m, deterministic)
}
func (m *ListMetaDataKeysReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetaDataKeysReq.Merge(m, src)
}
func (m *ListMetaDataKeysReq) XXX_Size() int {
	return xxx_messageInfo_ListMetaDataKeysReq.Size(m)
}
func (m *ListMetaDataKeysReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetaDataKeysReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetaDataKeysReq proto.InternalMessageInfo

func (m *ListMetaDataKeysReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

//AddInstanceMetaDataRequest
type AddInstanceMetaDataReq struct {
	InstanceId           string       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	KeyName              string       `protobuf:"bytes,2,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Values               []string     `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	Specs                []*ValueSpec `protobuf:"bytes,4,rep,name=specs,proto3" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddInstanceMetaDataReq) Reset()         { *m = AddInstanceMetaDataReq{} }
func (m *AddInstanceMetaDataReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceMetaDataReq) ProtoMessage()    {}
func (*AddInstanceMetaDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{57}
}

func (m *AddInstanceMetaDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceMetaDataReq.Unmarshal(m, b)
}
func (m *AddInstanceMetaDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceMetaDataReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceMetaDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceMetaDataReq.Merge(m, src)
}
func (m *AddInstanceMetaDataReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceMetaDataReq.Size(m)
}
func (m *AddInstanceMetaDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceMetaDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceMetaDataReq proto.InternalMessageInfo

func (m *AddInstanceMetaDataReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceMetaDataReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceMetaDataReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *AddInstanceMetaDataReq) GetSpecs() []*ValueSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

//AddInstanceMetaDataValueRequest
type AddInstanceMetaDataValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	KeyName              string          `protobuf:"bytes,2,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddInstanceMetaDataValueReq) Reset()         { *m = AddInstanceMetaDataValueReq{} }
func (m *AddInstanceMetaDataValueReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceMetaDataValueReq) ProtoMessage()    {}
func (*AddInstanceMetaDataValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{58}
}

func (m *AddInstanceMetaDataValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceMetaDataValueReq.Unmarshal(m, b)
}
func (m *AddInstanceMetaDataValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceMetaDataValueReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceMetaDataValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceMetaDataValueReq.Merge(m, src)
}
func (m *AddInstanceMetaDataValueReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceMetaDataValueReq.Size(m)
}
func (m *AddInstanceMetaDataValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceMetaDataValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceMetaDataValueReq proto.InternalMessageInfo

func (m *AddInstanceMetaDataValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceMetaDataValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceMetaDataValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AddInstanceMetaDataValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//InstanceMetaDataKeyRequest
type InstanceMetaDataKeyReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	KeyName              string   `protobuf:"bytes,2,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceMetaDataKeyReq) Reset()         { *m = InstanceMetaDataKeyReq{} }
func (m *InstanceMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*InstanceMetaDataKeyReq) ProtoMessage()    {}
func (*InstanceMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{59}
}

func (m *InstanceMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceMetaDataKeyReq.Unmarshal(m, b)
}
func (m *InstanceMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *InstanceMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceMetaDataKeyReq.Merge(m, src)
}
func (m *InstanceMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_InstanceMetaDataKeyReq.Size(m)
}
func (m *InstanceMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceMetaDataKeyReq proto.InternalMessageInfo

func (m *InstanceMetaDataKeyReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//InstanceMetaDataKeyValueRequest
type InstanceMetaDataKeyValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	KeyName              string          `protobuf:"bytes,2,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstanceMetaDataKeyValueReq) Reset()         { *m = InstanceMetaDataKeyValueReq{} }
func (m *InstanceMetaDataKeyValueReq) String() string { return proto.CompactTextString(m) }
func (*InstanceMetaDataKeyValueReq) ProtoMessage()    {}
func (*InstanceMetaDataKeyValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{60}
}

func (m *InstanceMetaDataKeyValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceMetaDataKeyValueReq.Unmarshal(m, b)
}
func (m *InstanceMetaDataKeyValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceMetaDataKeyValueReq.Marshal(b, m, deterministic)
}
func (m *InstanceMetaDataKeyValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceMetaDataKeyValueReq.Merge(m, src)
}
func (m *InstanceMetaDataKeyValueReq) XXX_Size() int {
	return xxx_messageInfo_InstanceMetaDataKeyValueReq.Size(m)
}
func (m *InstanceMetaDataKeyValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceMetaDataKeyValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceMetaDataKeyValueReq proto.InternalMessageInfo

func (m *InstanceMetaDataKeyValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceMetaDataKeyValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *InstanceMetaDataKeyValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InstanceMetaDataKeyValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//AddInstanceActionLabelMetaDataRequest
type AddInstanceActionLabelMetaDataReq struct {
	InstanceId           string       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string       `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	KeyName              string       `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Values               []string     `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	Specs                []*ValueSpec `protobuf:"bytes,5,rep,name=specs,proto3" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddInstanceActionLabelMetaDataReq) Reset()         { *m = AddInstanceActionLabelMetaDataReq{} }
func (m *AddInstanceActionLabelMetaDataReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceActionLabelMetaDataReq) ProtoMessage()    {}
func (*AddInstanceActionLabelMetaDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{61}
}

func (m *AddInstanceActionLabelMetaDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataReq.Unmarshal(m, b)
}
func (m *AddInstanceActionLabelMetaDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceActionLabelMetaDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceActionLabelMetaDataReq.Merge(m, src)
}
func (m *AddInstanceActionLabelMetaDataReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataReq.Size(m)
}
func (m *AddInstanceActionLabelMetaDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceActionLabelMetaDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceActionLabelMetaDataReq proto.InternalMessageInfo

func (m *AddInstanceActionLabelMetaDataReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *AddInstanceActionLabelMetaDataReq) GetSpecs() []*ValueSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

//InstanceActionLabelMetaDataKeyRequest
type InstanceActionLabelMetaDataKeyReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	KeyName              string   `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceActionLabelMetaDataKeyReq) Reset()         { *m = InstanceActionLabelMetaDataKeyReq{} }
func (m *InstanceActionLabelMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*InstanceActionLabelMetaDataKeyReq) ProtoMessage()    {}
func (*InstanceActionLabelMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{62}
}

func (m *InstanceActionLabelMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceActionLabelMetaDataKeyReq.Unmarshal(m, b)
}
func (m *InstanceActionLabelMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceActionLabelMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *InstanceActionLabelMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceActionLabelMetaDataKeyReq.Merge(m, src)
}
func (m *InstanceActionLabelMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_InstanceActionLabelMetaDataKeyReq.Size(m)
}
func (m *InstanceActionLabelMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceActionLabelMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceActionLabelMetaDataKeyReq proto.InternalMessageInfo

func (m *InstanceActionLabelMetaDataKeyReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceActionLabelMetaDataKeyReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceActionLabelMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//InstanceActionLabelMetaDataRequest
type InstanceActionLabelMetaDataReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceActionLabelMetaDataReq) Reset()         { *m = InstanceActionLabelMetaDataReq{} }
func (m *InstanceActionLabelMetaDataReq) String() string { return proto.CompactTextString(m) }
func (*InstanceActionLabelMetaDataReq) ProtoMessage()    {}
func (*InstanceActionLabelMetaDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{63}
}

func (m *InstanceActionLabelMetaDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceActionLabelMetaDataReq.Unmarshal(m, b)
}
func (m *InstanceActionLabelMetaDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceActionLabelMetaDataReq.Marshal(b, m, deterministic)
}
func (m *InstanceActionLabelMetaDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceActionLabelMetaDataReq.Merge(m, src)
}
func (m *InstanceActionLabelMetaDataReq) XXX_Size() int {
	return xxx_messageInfo_InstanceActionLabelMetaDataReq.Size(m)
}
func (m *InstanceActionLabelMetaDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceActionLabelMetaDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceActionLabelMetaDataReq proto.InternalMessageInfo

func (m *InstanceActionLabelMetaDataReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceActionLabelMetaDataReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

//AddInstanceCellMetaDataRequest
type AddInstanceCellMetaDataReq struct {
	InstanceId           string       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string       `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32       `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	KeyName              string       `protobuf:"bytes,4,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Values               []string     `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`
	Specs                []*ValueSpec `protobuf:"bytes,6,rep,name=specs,proto3" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddInstanceCellMetaDataReq) Reset()         { *m = AddInstanceCellMetaDataReq{} }
func (m *AddInstanceCellMetaDataReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceCellMetaDataReq) ProtoMessage()    {}
func (*AddInstanceCellMetaDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{64}
}

func (m *AddInstanceCellMetaDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceCellMetaDataReq.Unmarshal(m, b)
}
func (m *AddInstanceCellMetaDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceCellMetaDataReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceCellMetaDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceCellMetaDataReq.Merge(m, src)
}
func (m *AddInstanceCellMetaDataReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceCellMetaDataReq.Size(m)
}
func (m *AddInstanceCellMetaDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceCellMetaDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceCellMetaDataReq proto.InternalMessageInfo

func (m *AddInstanceCellMetaDataReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceCellMetaDataReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *AddInstanceCellMetaDataReq) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *AddInstanceCellMetaDataReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceCellMetaDataReq) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *AddInstanceCellMetaDataReq) GetSpecs() []*ValueSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

//InstanceCellMetaDataKeyRequest
type InstanceCellMetaDataKeyReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32   `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	KeyName              string   `protobuf:"bytes,4,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceCellMetaDataKeyReq) Reset()         { *m = InstanceCellMetaDataKeyReq{} }
func (m *InstanceCellMetaDataKeyReq) String() string { return proto.CompactTextString(m) }
func (*InstanceCellMetaDataKeyReq) ProtoMessage()    {}
func (*InstanceCellMetaDataKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{65}
}

func (m *InstanceCellMetaDataKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceCellMetaDataKeyReq.Unmarshal(m, b)
}
func (m *InstanceCellMetaDataKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceCellMetaDataKeyReq.Marshal(b, m, deterministic)
}
func (m *InstanceCellMetaDataKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceCellMetaDataKeyReq.Merge(m, src)
}
func (m *InstanceCellMetaDataKeyReq) XXX_Size() int {
	return xxx_messageInfo_InstanceCellMetaDataKeyReq.Size(m)
}
func (m *InstanceCellMetaDataKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceCellMetaDataKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceCellMetaDataKeyReq proto.InternalMessageInfo

func (m *InstanceCellMetaDataKeyReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceCellMetaDataKeyReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceCellMetaDataKeyReq) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *InstanceCellMetaDataKeyReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//InstanceCellMetaDataRequest
type InstanceCellMetaDataReq struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32   `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceCellMetaDataReq) Reset()         { *m = InstanceCellMetaDataReq{} }
func (m *InstanceCellMetaDataReq) String() string { return proto.CompactTextString(m) }
func (*InstanceCellMetaDataReq) ProtoMessage()    {}
func (*InstanceCellMetaDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{66}
}

func (m *InstanceCellMetaDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceCellMetaDataReq.Unmarshal(m, b)
}
func (m *InstanceCellMetaDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceCellMetaDataReq.Marshal(b, m, deterministic)
}
func (m *InstanceCellMetaDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceCellMetaDataReq.Merge(m, src)
}
func (m *InstanceCellMetaDataReq) XXX_Size() int {
	return xxx_messageInfo_InstanceCellMetaDataReq.Size(m)
}
func (m *InstanceCellMetaDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceCellMetaDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceCellMetaDataReq proto.InternalMessageInfo

func (m *InstanceCellMetaDataReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceCellMetaDataReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceCellMetaDataReq) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

//StatsMetaDataKeyUsageRequest
type StatsMetaDataKeyUsageReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsMetaDataKeyUsageReq) Reset()         { *m = StatsMetaDataKeyUsageReq{} }
func (m *StatsMetaDataKeyUsageReq) String() string { return proto.CompactTextString(m) }
func (*StatsMetaDataKeyUsageReq) ProtoMessage()    {}
func (*StatsMetaDataKeyUsageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{67}
}

func (m *StatsMetaDataKeyUsageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsMetaDataKeyUsageReq.Unmarshal(m, b)
}
func (m *StatsMetaDataKeyUsageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsMetaDataKeyUsageReq.Marshal(b, m, deterministic)
}
func (m *StatsMetaDataKeyUsageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsMetaDataKeyUsageReq.Merge(m, src)
}
func (m *StatsMetaDataKeyUsageReq) XXX_Size() int {
	return xxx_messageInfo_StatsMetaDataKeyUsageReq.Size(m)
}
func (m *StatsMetaDataKeyUsageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsMetaDataKeyUsageReq.DiscardUnknown(m)
}

var xxx_messageInfo_StatsMetaDataKeyUsageReq proto.InternalMessageInfo

func (m *StatsMetaDataKeyUsageReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

//StatsMetaDataKeyValueUsageRequest
type StatsMetaDataKeyValueUsageReq struct {
	KeyName              string          `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatsMetaDataKeyValueUsageReq) Reset()         { *m = StatsMetaDataKeyValueUsageReq{} }
func (m *StatsMetaDataKeyValueUsageReq) String() string { return proto.CompactTextString(m) }
func (*StatsMetaDataKeyValueUsageReq) ProtoMessage()    {}
func (*StatsMetaDataKeyValueUsageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{68}
}

func (m *StatsMetaDataKeyValueUsageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsMetaDataKeyValueUsageReq.Unmarshal(m, b)
}
func (m *StatsMetaDataKeyValueUsageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsMetaDataKeyValueUsageReq.Marshal(b, m, deterministic)
}
func (m *StatsMetaDataKeyValueUsageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsMetaDataKeyValueUsageReq.Merge(m, src)
}
func (m *StatsMetaDataKeyValueUsageReq) XXX_Size() int {
	return xxx_messageInfo_StatsMetaDataKeyValueUsageReq.Size(m)
}
func (m *StatsMetaDataKeyValueUsageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsMetaDataKeyValueUsageReq.DiscardUnknown(m)
}

var xxx_messageInfo_StatsMetaDataKeyValueUsageReq proto.InternalMessageInfo

func (m *StatsMetaDataKeyValueUsageReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *StatsMetaDataKeyValueUsageReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *StatsMetaDataKeyValueUsageReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//ListMetaDataKeyLinksRequest
type ListMetaDataKeyLinksReq struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Window               *Window  `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetaDataKeyLinksReq) Reset()         { *m = ListMetaDataKeyLinksReq{} }
func (m *ListMetaDataKeyLinksReq) String() string { return proto.CompactTextString(m) }
func (*ListMetaDataKeyLinksReq) ProtoMessage()    {}
func (*ListMetaDataKeyLinksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{69}
}

func (m *ListMetaDataKeyLinksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMetaDataKeyLinksReq.Unmarshal(m, b)
}
func (m *ListMetaDataKeyLinksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMetaDataKeyLinksReq.Marshal(b, m, deterministic)
}
func (m *ListMetaDataKeyLinksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetaDataKeyLinksReq.Merge(m, src)
}
func (m *ListMetaDataKeyLinksReq) XXX_Size() int {
	return xxx_messageInfo_ListMetaDataKeyLinksReq.Size(m)
}
func (m *ListMetaDataKeyLinksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetaDataKeyLinksReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetaDataKeyLinksReq proto.InternalMessageInfo

func (m *ListMetaDataKeyLinksReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *ListMetaDataKeyLinksReq) GetWindow() *Window {
	if m != nil {
		return m.Window
	}
	return nil
}

//AddInstanceActionLabelMetaDataValueRequest
type AddInstanceActionLabelMetaDataValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string          `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	KeyName              string          `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddInstanceActionLabelMetaDataValueReq) Reset() {
	*m = AddInstanceActionLabelMetaDataValueReq{}
}
func (m *AddInstanceActionLabelMetaDataValueReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceActionLabelMetaDataValueReq) ProtoMessage()    {}
func (*AddInstanceActionLabelMetaDataValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{70}
}

func (m *AddInstanceActionLabelMetaDataValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq.Unmarshal(m, b)
}
func (m *AddInstanceActionLabelMetaDataValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceActionLabelMetaDataValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq.Merge(m, src)
}
func (m *AddInstanceActionLabelMetaDataValueReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq.Size(m)
}
func (m *AddInstanceActionLabelMetaDataValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceActionLabelMetaDataValueReq proto.InternalMessageInfo

func (m *AddInstanceActionLabelMetaDataValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataValueReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AddInstanceActionLabelMetaDataValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//InstanceActionLabelMetaDataValueRequest
type InstanceActionLabelMetaDataValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string          `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	KeyName              string          `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstanceActionLabelMetaDataValueReq) Reset()         { *m = InstanceActionLabelMetaDataValueReq{} }
func (m *InstanceActionLabelMetaDataValueReq) String() string { return proto.CompactTextString(m) }
func (*InstanceActionLabelMetaDataValueReq) ProtoMessage()    {}
func (*InstanceActionLabelMetaDataValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{71}
}

func (m *InstanceActionLabelMetaDataValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceActionLabelMetaDataValueReq.Unmarshal(m, b)
}
func (m *InstanceActionLabelMetaDataValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceActionLabelMetaDataValueReq.Marshal(b, m, deterministic)
}
func (m *InstanceActionLabelMetaDataValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceActionLabelMetaDataValueReq.Merge(m, src)
}
func (m *InstanceActionLabelMetaDataValueReq) XXX_Size() int {
	return xxx_messageInfo_InstanceActionLabelMetaDataValueReq.Size(m)
}
func (m *InstanceActionLabelMetaDataValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceActionLabelMetaDataValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceActionLabelMetaDataValueReq proto.InternalMessageInfo

func (m *InstanceActionLabelMetaDataValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceActionLabelMetaDataValueReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceActionLabelMetaDataValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *InstanceActionLabelMetaDataValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InstanceActionLabelMetaDataValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//InstanceCellMetaDataKeyValueRequest
type InstanceCellMetaDataKeyValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string          `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32          `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	KeyName              string          `protobuf:"bytes,4,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstanceCellMetaDataKeyValueReq) Reset()         { *m = InstanceCellMetaDataKeyValueReq{} }
func (m *InstanceCellMetaDataKeyValueReq) String() string { return proto.CompactTextString(m) }
func (*InstanceCellMetaDataKeyValueReq) ProtoMessage()    {}
func (*InstanceCellMetaDataKeyValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{72}
}

func (m *InstanceCellMetaDataKeyValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceCellMetaDataKeyValueReq.Unmarshal(m, b)
}
func (m *InstanceCellMetaDataKeyValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceCellMetaDataKeyValueReq.Marshal(b, m, deterministic)
}
func (m *InstanceCellMetaDataKeyValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceCellMetaDataKeyValueReq.Merge(m, src)
}
func (m *InstanceCellMetaDataKeyValueReq) XXX_Size() int {
	return xxx_messageInfo_InstanceCellMetaDataKeyValueReq.Size(m)
}
func (m *InstanceCellMetaDataKeyValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceCellMetaDataKeyValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceCellMetaDataKeyValueReq proto.InternalMessageInfo

func (m *InstanceCellMetaDataKeyValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceCellMetaDataKeyValueReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceCellMetaDataKeyValueReq) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *InstanceCellMetaDataKeyValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *InstanceCellMetaDataKeyValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InstanceCellMetaDataKeyValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//AddInstanceCellMetaDataValueRequest
type AddInstanceCellMetaDataValueReq struct {
	InstanceId           string          `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string          `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32          `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	KeyName              string          `protobuf:"bytes,4,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value                string          `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddInstanceCellMetaDataValueReq) Reset()         { *m = AddInstanceCellMetaDataValueReq{} }
func (m *AddInstanceCellMetaDataValueReq) String() string { return proto.CompactTextString(m) }
func (*AddInstanceCellMetaDataValueReq) ProtoMessage()    {}
func (*AddInstanceCellMetaDataValueReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{73}
}

func (m *AddInstanceCellMetaDataValueReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddInstanceCellMetaDataValueReq.Unmarshal(m, b)
}
func (m *AddInstanceCellMetaDataValueReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddInstanceCellMetaDataValueReq.Marshal(b, m, deterministic)
}
func (m *AddInstanceCellMetaDataValueReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddInstanceCellMetaDataValueReq.Merge(m, src)
}
func (m *AddInstanceCellMetaDataValueReq) XXX_Size() int {
	return xxx_messageInfo_AddInstanceCellMetaDataValueReq.Size(m)
}
func (m *AddInstanceCellMetaDataValueReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddInstanceCellMetaDataValueReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddInstanceCellMetaDataValueReq proto.InternalMessageInfo

func (m *AddInstanceCellMetaDataValueReq) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *AddInstanceCellMetaDataValueReq) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *AddInstanceCellMetaDataValueReq) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *AddInstanceCellMetaDataValueReq) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *AddInstanceCellMetaDataValueReq) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AddInstanceCellMetaDataValueReq) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

type MetaDataValue struct {
	Value                *MetaDataValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DataType             []DataType     `protobuf:"varint,4,rep,packed,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	Format               string         `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MetaDataValue) Reset()         { *m = MetaDataValue{} }
func (m *MetaDataValue) String() string { return proto.CompactTextString(m) }
func (*MetaDataValue) ProtoMessage()    {}
func (*MetaDataValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{74}
}

func (m *MetaDataValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataValue.Unmarshal(m, b)
}
func (m *MetaDataValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataValue.Marshal(b, m, deterministic)
}
func (m *MetaDataValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataValue.Merge(m, src)
}
func (m *MetaDataValue) XXX_Size() int {
	return xxx_messageInfo_MetaDataValue.Size(m)
}
func (m *MetaDataValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataValue.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataValue proto.InternalMessageInfo

func (m *MetaDataValue) GetValue() *MetaDataValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MetaDataValue) GetDataType() []DataType {
	if m != nil {
		return m.DataType
	}
	return nil
}

func (m *MetaDataValue) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

//InstanceElement
type InstanceElement struct {
	ActionLabel          string                     `protobuf:"bytes,1,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	Values               []string                   `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Specs                []*ValueSpec               `protobuf:"bytes,3,rep,name=specs,proto3" json:"specs,omitempty"`
	MetaData             []*InstanceElementMetaData `protobuf:"bytes,4,rep,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *InstanceElement) Reset()         { *m = InstanceElement{} }
func (m *InstanceElement) String() string { return proto.CompactTextString(m) }
func (*InstanceElement) ProtoMessage()    {}
func (*InstanceElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{75}
}

func (m *InstanceElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceElement.Unmarshal(m, b)
}
func (m *InstanceElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceElement.Marshal(b, m, deterministic)
}
func (m *InstanceElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceElement.Merge(m, src)
}
func (m *InstanceElement) XXX_Size() int {
	return xxx_messageInfo_InstanceElement.Size(m)
}
func (m *InstanceElement) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceElement.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceElement proto.InternalMessageInfo

func (m *InstanceElement) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceElement) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *InstanceElement) GetSpecs() []*ValueSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *InstanceElement) GetMetaData() []*InstanceElementMetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

//ValueSpec
type ValueSpec struct {
	Position             uint32          `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	Override             *DataTypeFormat `protobuf:"bytes,2,opt,name=override,proto3" json:"override,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ValueSpec) Reset()         { *m = ValueSpec{} }
func (m *ValueSpec) String() string { return proto.CompactTextString(m) }
func (*ValueSpec) ProtoMessage()    {}
func (*ValueSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{76}
}

func (m *ValueSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueSpec.Unmarshal(m, b)
}
func (m *ValueSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueSpec.Marshal(b, m, deterministic)
}
func (m *ValueSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueSpec.Merge(m, src)
}
func (m *ValueSpec) XXX_Size() int {
	return xxx_messageInfo_ValueSpec.Size(m)
}
func (m *ValueSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ValueSpec proto.InternalMessageInfo

func (m *ValueSpec) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *ValueSpec) GetOverride() *DataTypeFormat {
	if m != nil {
		return m.Override
	}
	return nil
}

//InstanceElementMetaData
type InstanceElementMetaData struct {
	Position             uint32            `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	MetaDataKeyValues    *MetaDataKeyValue `protobuf:"bytes,2,opt,name=meta_data_key_values,json=metaDataKeyValues,proto3" json:"meta_data_key_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InstanceElementMetaData) Reset()         { *m = InstanceElementMetaData{} }
func (m *InstanceElementMetaData) String() string { return proto.CompactTextString(m) }
func (*InstanceElementMetaData) ProtoMessage()    {}
func (*InstanceElementMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{77}
}

func (m *InstanceElementMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceElementMetaData.Unmarshal(m, b)
}
func (m *InstanceElementMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceElementMetaData.Marshal(b, m, deterministic)
}
func (m *InstanceElementMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceElementMetaData.Merge(m, src)
}
func (m *InstanceElementMetaData) XXX_Size() int {
	return xxx_messageInfo_InstanceElementMetaData.Size(m)
}
func (m *InstanceElementMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceElementMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceElementMetaData proto.InternalMessageInfo

func (m *InstanceElementMetaData) GetPosition() uint32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *InstanceElementMetaData) GetMetaDataKeyValues() *MetaDataKeyValue {
	if m != nil {
		return m.MetaDataKeyValues
	}
	return nil
}

//MetaDataKeyValue
type MetaDataKeyValue struct {
	KeyName string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Values  []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	// DataTypeFormat override = 3 [
	//     (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
	//         description: "overwrites the default_data_type from the MetaDataKey definition and/or provides a format string to parse the values"
	//     }
	// ];
	Specs                []*ValueSpec `protobuf:"bytes,4,rep,name=specs,proto3" json:"specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MetaDataKeyValue) Reset()         { *m = MetaDataKeyValue{} }
func (m *MetaDataKeyValue) String() string { return proto.CompactTextString(m) }
func (*MetaDataKeyValue) ProtoMessage()    {}
func (*MetaDataKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{78}
}

func (m *MetaDataKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataKeyValue.Unmarshal(m, b)
}
func (m *MetaDataKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataKeyValue.Marshal(b, m, deterministic)
}
func (m *MetaDataKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataKeyValue.Merge(m, src)
}
func (m *MetaDataKeyValue) XXX_Size() int {
	return xxx_messageInfo_MetaDataKeyValue.Size(m)
}
func (m *MetaDataKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataKeyValue proto.InternalMessageInfo

func (m *MetaDataKeyValue) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *MetaDataKeyValue) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *MetaDataKeyValue) GetSpecs() []*ValueSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

//DataTypeFormat
type DataTypeFormat struct {
	DataType             DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	Format               string   `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataTypeFormat) Reset()         { *m = DataTypeFormat{} }
func (m *DataTypeFormat) String() string { return proto.CompactTextString(m) }
func (*DataTypeFormat) ProtoMessage()    {}
func (*DataTypeFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{79}
}

func (m *DataTypeFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTypeFormat.Unmarshal(m, b)
}
func (m *DataTypeFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTypeFormat.Marshal(b, m, deterministic)
}
func (m *DataTypeFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTypeFormat.Merge(m, src)
}
func (m *DataTypeFormat) XXX_Size() int {
	return xxx_messageInfo_DataTypeFormat.Size(m)
}
func (m *DataTypeFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTypeFormat.DiscardUnknown(m)
}

var xxx_messageInfo_DataTypeFormat proto.InternalMessageInfo

func (m *DataTypeFormat) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_InvalidDataType
}

func (m *DataTypeFormat) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

//InstanceUpdateElementCell
type InstanceUpdateElementCell struct {
	ActionLabel          string          `protobuf:"bytes,1,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	Value                string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ValuePosition        uint32          `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	Override             *DataTypeFormat `protobuf:"bytes,4,opt,name=override,proto3" json:"override,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InstanceUpdateElementCell) Reset()         { *m = InstanceUpdateElementCell{} }
func (m *InstanceUpdateElementCell) String() string { return proto.CompactTextString(m) }
func (*InstanceUpdateElementCell) ProtoMessage()    {}
func (*InstanceUpdateElementCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{80}
}

func (m *InstanceUpdateElementCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceUpdateElementCell.Unmarshal(m, b)
}
func (m *InstanceUpdateElementCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceUpdateElementCell.Marshal(b, m, deterministic)
}
func (m *InstanceUpdateElementCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceUpdateElementCell.Merge(m, src)
}
func (m *InstanceUpdateElementCell) XXX_Size() int {
	return xxx_messageInfo_InstanceUpdateElementCell.Size(m)
}
func (m *InstanceUpdateElementCell) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceUpdateElementCell.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceUpdateElementCell proto.InternalMessageInfo

func (m *InstanceUpdateElementCell) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *InstanceUpdateElementCell) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *InstanceUpdateElementCell) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *InstanceUpdateElementCell) GetOverride() *DataTypeFormat {
	if m != nil {
		return m.Override
	}
	return nil
}

//EmptyResponse
type EmptyRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRes) Reset()         { *m = EmptyRes{} }
func (m *EmptyRes) String() string { return proto.CompactTextString(m) }
func (*EmptyRes) ProtoMessage()    {}
func (*EmptyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{81}
}

func (m *EmptyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRes.Unmarshal(m, b)
}
func (m *EmptyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRes.Marshal(b, m, deterministic)
}
func (m *EmptyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRes.Merge(m, src)
}
func (m *EmptyRes) XXX_Size() int {
	return xxx_messageInfo_EmptyRes.Size(m)
}
func (m *EmptyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRes.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRes proto.InternalMessageInfo

//LoginResponse
type LoginRes struct {
	Jwt                  string         `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Roles                []*DynizerRole `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LoginRes) Reset()         { *m = LoginRes{} }
func (m *LoginRes) String() string { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()    {}
func (*LoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{82}
}

func (m *LoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRes.Unmarshal(m, b)
}
func (m *LoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRes.Marshal(b, m, deterministic)
}
func (m *LoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRes.Merge(m, src)
}
func (m *LoginRes) XXX_Size() int {
	return xxx_messageInfo_LoginRes.Size(m)
}
func (m *LoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRes proto.InternalMessageInfo

func (m *LoginRes) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *LoginRes) GetRoles() []*DynizerRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

//ServiceTokenResponse
type ServiceTokenRes struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceTokenRes) Reset()         { *m = ServiceTokenRes{} }
func (m *ServiceTokenRes) String() string { return proto.CompactTextString(m) }
func (*ServiceTokenRes) ProtoMessage()    {}
func (*ServiceTokenRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{83}
}

func (m *ServiceTokenRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceTokenRes.Unmarshal(m, b)
}
func (m *ServiceTokenRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceTokenRes.Marshal(b, m, deterministic)
}
func (m *ServiceTokenRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceTokenRes.Merge(m, src)
}
func (m *ServiceTokenRes) XXX_Size() int {
	return xxx_messageInfo_ServiceTokenRes.Size(m)
}
func (m *ServiceTokenRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceTokenRes.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceTokenRes proto.InternalMessageInfo

func (m *ServiceTokenRes) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//UserResponse
type UserRes struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRes) Reset()         { *m = UserRes{} }
func (m *UserRes) String() string { return proto.CompactTextString(m) }
func (*UserRes) ProtoMessage()    {}
func (*UserRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{84}
}

func (m *UserRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRes.Unmarshal(m, b)
}
func (m *UserRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRes.Marshal(b, m, deterministic)
}
func (m *UserRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRes.Merge(m, src)
}
func (m *UserRes) XXX_Size() int {
	return xxx_messageInfo_UserRes.Size(m)
}
func (m *UserRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserRes proto.InternalMessageInfo

func (m *UserRes) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

//ListUsersResponse
type ListUsersRes struct {
	TotalUsers           int64    `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	Users                []*User  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRes) Reset()         { *m = ListUsersRes{} }
func (m *ListUsersRes) String() string { return proto.CompactTextString(m) }
func (*ListUsersRes) ProtoMessage()    {}
func (*ListUsersRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{85}
}

func (m *ListUsersRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRes.Unmarshal(m, b)
}
func (m *ListUsersRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRes.Marshal(b, m, deterministic)
}
func (m *ListUsersRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRes.Merge(m, src)
}
func (m *ListUsersRes) XXX_Size() int {
	return xxx_messageInfo_ListUsersRes.Size(m)
}
func (m *ListUsersRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRes proto.InternalMessageInfo

func (m *ListUsersRes) GetTotalUsers() int64 {
	if m != nil {
		return m.TotalUsers
	}
	return 0
}

func (m *ListUsersRes) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

//ActionNameArrayResponse
type ActionNameArrayRes struct {
	TotalActions         int64    `protobuf:"varint,1,opt,name=total_actions,json=totalActions,proto3" json:"total_actions,omitempty"`
	ActionNames          []string `protobuf:"bytes,2,rep,name=action_names,json=actionNames,proto3" json:"action_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionNameArrayRes) Reset()         { *m = ActionNameArrayRes{} }
func (m *ActionNameArrayRes) String() string { return proto.CompactTextString(m) }
func (*ActionNameArrayRes) ProtoMessage()    {}
func (*ActionNameArrayRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{86}
}

func (m *ActionNameArrayRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionNameArrayRes.Unmarshal(m, b)
}
func (m *ActionNameArrayRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionNameArrayRes.Marshal(b, m, deterministic)
}
func (m *ActionNameArrayRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionNameArrayRes.Merge(m, src)
}
func (m *ActionNameArrayRes) XXX_Size() int {
	return xxx_messageInfo_ActionNameArrayRes.Size(m)
}
func (m *ActionNameArrayRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionNameArrayRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActionNameArrayRes proto.InternalMessageInfo

func (m *ActionNameArrayRes) GetTotalActions() int64 {
	if m != nil {
		return m.TotalActions
	}
	return 0
}

func (m *ActionNameArrayRes) GetActionNames() []string {
	if m != nil {
		return m.ActionNames
	}
	return nil
}

//LabelResponse
type LabelRes struct {
	Action               string       `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	ActionLabel          *ActionLabel `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LabelRes) Reset()         { *m = LabelRes{} }
func (m *LabelRes) String() string { return proto.CompactTextString(m) }
func (*LabelRes) ProtoMessage()    {}
func (*LabelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{87}
}

func (m *LabelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelRes.Unmarshal(m, b)
}
func (m *LabelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelRes.Marshal(b, m, deterministic)
}
func (m *LabelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelRes.Merge(m, src)
}
func (m *LabelRes) XXX_Size() int {
	return xxx_messageInfo_LabelRes.Size(m)
}
func (m *LabelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelRes.DiscardUnknown(m)
}

var xxx_messageInfo_LabelRes proto.InternalMessageInfo

func (m *LabelRes) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *LabelRes) GetActionLabel() *ActionLabel {
	if m != nil {
		return m.ActionLabel
	}
	return nil
}

//InstanceIDResponse
type InstanceIDRes struct {
	InstanceId           string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceIDRes) Reset()         { *m = InstanceIDRes{} }
func (m *InstanceIDRes) String() string { return proto.CompactTextString(m) }
func (*InstanceIDRes) ProtoMessage()    {}
func (*InstanceIDRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{88}
}

func (m *InstanceIDRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceIDRes.Unmarshal(m, b)
}
func (m *InstanceIDRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceIDRes.Marshal(b, m, deterministic)
}
func (m *InstanceIDRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceIDRes.Merge(m, src)
}
func (m *InstanceIDRes) XXX_Size() int {
	return xxx_messageInfo_InstanceIDRes.Size(m)
}
func (m *InstanceIDRes) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceIDRes.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceIDRes proto.InternalMessageInfo

func (m *InstanceIDRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type StreamInstanceIDRes struct {
	UserReference        string         `protobuf:"bytes,1,opt,name=user_reference,json=userReference,proto3" json:"user_reference,omitempty"`
	InstanceId           string         `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Error                *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StreamInstanceIDRes) Reset()         { *m = StreamInstanceIDRes{} }
func (m *StreamInstanceIDRes) String() string { return proto.CompactTextString(m) }
func (*StreamInstanceIDRes) ProtoMessage()    {}
func (*StreamInstanceIDRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{89}
}

func (m *StreamInstanceIDRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInstanceIDRes.Unmarshal(m, b)
}
func (m *StreamInstanceIDRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInstanceIDRes.Marshal(b, m, deterministic)
}
func (m *StreamInstanceIDRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInstanceIDRes.Merge(m, src)
}
func (m *StreamInstanceIDRes) XXX_Size() int {
	return xxx_messageInfo_StreamInstanceIDRes.Size(m)
}
func (m *StreamInstanceIDRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInstanceIDRes.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInstanceIDRes proto.InternalMessageInfo

func (m *StreamInstanceIDRes) GetUserReference() string {
	if m != nil {
		return m.UserReference
	}
	return ""
}

func (m *StreamInstanceIDRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *StreamInstanceIDRes) GetError() *ErrorResponse {
	if m != nil {
		return m.Error
	}
	return nil
}

//InstanceRes response which returns one Action Instance row
type InstanceRes struct {
	InstanceId           string                                    `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabels         []*ResultLabel                            `protobuf:"bytes,2,rep,name=action_labels,json=actionLabels,proto3" json:"action_labels,omitempty"`
	InstanceCellValues   []string                                  `protobuf:"bytes,3,rep,name=instance_cell_values,json=instanceCellValues,proto3" json:"instance_cell_values,omitempty"`
	AlternativeDataTypes []*ResultValueAlternativeMetaDataPosition `protobuf:"bytes,4,rep,name=alternative_data_types,json=alternativeDataTypes,proto3" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *InstanceRes) Reset()         { *m = InstanceRes{} }
func (m *InstanceRes) String() string { return proto.CompactTextString(m) }
func (*InstanceRes) ProtoMessage()    {}
func (*InstanceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{90}
}

func (m *InstanceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceRes.Unmarshal(m, b)
}
func (m *InstanceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceRes.Marshal(b, m, deterministic)
}
func (m *InstanceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceRes.Merge(m, src)
}
func (m *InstanceRes) XXX_Size() int {
	return xxx_messageInfo_InstanceRes.Size(m)
}
func (m *InstanceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceRes.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceRes proto.InternalMessageInfo

func (m *InstanceRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *InstanceRes) GetActionLabels() []*ResultLabel {
	if m != nil {
		return m.ActionLabels
	}
	return nil
}

func (m *InstanceRes) GetInstanceCellValues() []string {
	if m != nil {
		return m.InstanceCellValues
	}
	return nil
}

func (m *InstanceRes) GetAlternativeDataTypes() []*ResultValueAlternativeMetaDataPosition {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//ActionInstanceResponse
type ActionInstanceRes struct {
	UserActionLabels     []*ResultLabel                            `protobuf:"bytes,1,rep,name=user_action_labels,json=userActionLabels,proto3" json:"user_action_labels,omitempty"`
	ResultRows           []*ActionInstanceRecord                   `protobuf:"bytes,2,rep,name=result_rows,json=resultRows,proto3" json:"result_rows,omitempty"`
	AlternativeDataTypes []*ResultValueAlternativeMetaDataPosition `protobuf:"bytes,3,rep,name=alternative_data_types,json=alternativeDataTypes,proto3" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ActionInstanceRes) Reset()         { *m = ActionInstanceRes{} }
func (m *ActionInstanceRes) String() string { return proto.CompactTextString(m) }
func (*ActionInstanceRes) ProtoMessage()    {}
func (*ActionInstanceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{91}
}

func (m *ActionInstanceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionInstanceRes.Unmarshal(m, b)
}
func (m *ActionInstanceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionInstanceRes.Marshal(b, m, deterministic)
}
func (m *ActionInstanceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionInstanceRes.Merge(m, src)
}
func (m *ActionInstanceRes) XXX_Size() int {
	return xxx_messageInfo_ActionInstanceRes.Size(m)
}
func (m *ActionInstanceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionInstanceRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActionInstanceRes proto.InternalMessageInfo

func (m *ActionInstanceRes) GetUserActionLabels() []*ResultLabel {
	if m != nil {
		return m.UserActionLabels
	}
	return nil
}

func (m *ActionInstanceRes) GetResultRows() []*ActionInstanceRecord {
	if m != nil {
		return m.ResultRows
	}
	return nil
}

func (m *ActionInstanceRes) GetAlternativeDataTypes() []*ResultValueAlternativeMetaDataPosition {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//CountResponse
type CountRes struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountRes) Reset()         { *m = CountRes{} }
func (m *CountRes) String() string { return proto.CompactTextString(m) }
func (*CountRes) ProtoMessage()    {}
func (*CountRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{92}
}

func (m *CountRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountRes.Unmarshal(m, b)
}
func (m *CountRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountRes.Marshal(b, m, deterministic)
}
func (m *CountRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountRes.Merge(m, src)
}
func (m *CountRes) XXX_Size() int {
	return xxx_messageInfo_CountRes.Size(m)
}
func (m *CountRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CountRes.DiscardUnknown(m)
}

var xxx_messageInfo_CountRes proto.InternalMessageInfo

func (m *CountRes) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

//User Count Response
type UserCountRes struct {
	ActiveUsers          int64    `protobuf:"varint,1,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	DisabledUsers        int64    `protobuf:"varint,2,opt,name=disabled_users,json=disabledUsers,proto3" json:"disabled_users,omitempty"`
	TotalUsers           int64    `protobuf:"varint,3,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCountRes) Reset()         { *m = UserCountRes{} }
func (m *UserCountRes) String() string { return proto.CompactTextString(m) }
func (*UserCountRes) ProtoMessage()    {}
func (*UserCountRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{93}
}

func (m *UserCountRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserCountRes.Unmarshal(m, b)
}
func (m *UserCountRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserCountRes.Marshal(b, m, deterministic)
}
func (m *UserCountRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCountRes.Merge(m, src)
}
func (m *UserCountRes) XXX_Size() int {
	return xxx_messageInfo_UserCountRes.Size(m)
}
func (m *UserCountRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCountRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserCountRes proto.InternalMessageInfo

func (m *UserCountRes) GetActiveUsers() int64 {
	if m != nil {
		return m.ActiveUsers
	}
	return 0
}

func (m *UserCountRes) GetDisabledUsers() int64 {
	if m != nil {
		return m.DisabledUsers
	}
	return 0
}

func (m *UserCountRes) GetTotalUsers() int64 {
	if m != nil {
		return m.TotalUsers
	}
	return 0
}

//DynizerQueryResponse
type DQLRes struct {
	// oneof KIND  // TODO: check this in the documentation...
	//
	// Types that are valid to be assigned to Kind:
	//	*DQLRes_SelectResult
	//	*DQLRes_RowsAffected
	Kind                 isDQLRes_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DQLRes) Reset()         { *m = DQLRes{} }
func (m *DQLRes) String() string { return proto.CompactTextString(m) }
func (*DQLRes) ProtoMessage()    {}
func (*DQLRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{94}
}

func (m *DQLRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DQLRes.Unmarshal(m, b)
}
func (m *DQLRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DQLRes.Marshal(b, m, deterministic)
}
func (m *DQLRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DQLRes.Merge(m, src)
}
func (m *DQLRes) XXX_Size() int {
	return xxx_messageInfo_DQLRes.Size(m)
}
func (m *DQLRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DQLRes.DiscardUnknown(m)
}

var xxx_messageInfo_DQLRes proto.InternalMessageInfo

type isDQLRes_Kind interface {
	isDQLRes_Kind()
}

type DQLRes_SelectResult struct {
	SelectResult *SelectDQLResult `protobuf:"bytes,1,opt,name=select_result,json=selectResult,proto3,oneof"`
}

type DQLRes_RowsAffected struct {
	RowsAffected int64 `protobuf:"varint,2,opt,name=rows_affected,json=rowsAffected,proto3,oneof"`
}

func (*DQLRes_SelectResult) isDQLRes_Kind() {}

func (*DQLRes_RowsAffected) isDQLRes_Kind() {}

func (m *DQLRes) GetKind() isDQLRes_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *DQLRes) GetSelectResult() *SelectDQLResult {
	if x, ok := m.GetKind().(*DQLRes_SelectResult); ok {
		return x.SelectResult
	}
	return nil
}

func (m *DQLRes) GetRowsAffected() int64 {
	if x, ok := m.GetKind().(*DQLRes_RowsAffected); ok {
		return x.RowsAffected
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DQLRes) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DQLRes_SelectResult)(nil),
		(*DQLRes_RowsAffected)(nil),
	}
}

//ListRolesResponse
type ListRolesRes struct {
	TotalRoles           int64          `protobuf:"varint,1,opt,name=total_roles,json=totalRoles,proto3" json:"total_roles,omitempty"`
	Roles                []*DynizerRole `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListRolesRes) Reset()         { *m = ListRolesRes{} }
func (m *ListRolesRes) String() string { return proto.CompactTextString(m) }
func (*ListRolesRes) ProtoMessage()    {}
func (*ListRolesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{95}
}

func (m *ListRolesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRolesRes.Unmarshal(m, b)
}
func (m *ListRolesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRolesRes.Marshal(b, m, deterministic)
}
func (m *ListRolesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRolesRes.Merge(m, src)
}
func (m *ListRolesRes) XXX_Size() int {
	return xxx_messageInfo_ListRolesRes.Size(m)
}
func (m *ListRolesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRolesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListRolesRes proto.InternalMessageInfo

func (m *ListRolesRes) GetTotalRoles() int64 {
	if m != nil {
		return m.TotalRoles
	}
	return 0
}

func (m *ListRolesRes) GetRoles() []*DynizerRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

//ListUserRolesResponse
type ListUserRolesRes struct {
	TotalRoles           int64          `protobuf:"varint,1,opt,name=total_roles,json=totalRoles,proto3" json:"total_roles,omitempty"`
	Roles                []*DynizerRole `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListUserRolesRes) Reset()         { *m = ListUserRolesRes{} }
func (m *ListUserRolesRes) String() string { return proto.CompactTextString(m) }
func (*ListUserRolesRes) ProtoMessage()    {}
func (*ListUserRolesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{96}
}

func (m *ListUserRolesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserRolesRes.Unmarshal(m, b)
}
func (m *ListUserRolesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserRolesRes.Marshal(b, m, deterministic)
}
func (m *ListUserRolesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserRolesRes.Merge(m, src)
}
func (m *ListUserRolesRes) XXX_Size() int {
	return xxx_messageInfo_ListUserRolesRes.Size(m)
}
func (m *ListUserRolesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserRolesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserRolesRes proto.InternalMessageInfo

func (m *ListUserRolesRes) GetTotalRoles() int64 {
	if m != nil {
		return m.TotalRoles
	}
	return 0
}

func (m *ListUserRolesRes) GetRoles() []*DynizerRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

//ReadActionInstancesResponse
type ReadActionInstancesRes struct {
	ResultLabels         []*ResultLabel                            `protobuf:"bytes,1,rep,name=result_labels,json=resultLabels,proto3" json:"result_labels,omitempty"`
	TotalInstances       int64                                     `protobuf:"varint,2,opt,name=total_instances,json=totalInstances,proto3" json:"total_instances,omitempty"`
	Rows                 []*ActionInstanceRecord                   `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	AlternativeDataTypes []*ResultValueAlternativeMetaDataPosition `protobuf:"bytes,4,rep,name=alternative_data_types,json=alternativeDataTypes,proto3" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ReadActionInstancesRes) Reset()         { *m = ReadActionInstancesRes{} }
func (m *ReadActionInstancesRes) String() string { return proto.CompactTextString(m) }
func (*ReadActionInstancesRes) ProtoMessage()    {}
func (*ReadActionInstancesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{97}
}

func (m *ReadActionInstancesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadActionInstancesRes.Unmarshal(m, b)
}
func (m *ReadActionInstancesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadActionInstancesRes.Marshal(b, m, deterministic)
}
func (m *ReadActionInstancesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadActionInstancesRes.Merge(m, src)
}
func (m *ReadActionInstancesRes) XXX_Size() int {
	return xxx_messageInfo_ReadActionInstancesRes.Size(m)
}
func (m *ReadActionInstancesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadActionInstancesRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadActionInstancesRes proto.InternalMessageInfo

func (m *ReadActionInstancesRes) GetResultLabels() []*ResultLabel {
	if m != nil {
		return m.ResultLabels
	}
	return nil
}

func (m *ReadActionInstancesRes) GetTotalInstances() int64 {
	if m != nil {
		return m.TotalInstances
	}
	return 0
}

func (m *ReadActionInstancesRes) GetRows() []*ActionInstanceRecord {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *ReadActionInstancesRes) GetAlternativeDataTypes() []*ResultValueAlternativeMetaDataPosition {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//MetaDataKeyResponse
type MetaDataKeyRes struct {
	MetaDataKey          *MetaDataKey `protobuf:"bytes,1,opt,name=meta_data_key,json=metaDataKey,proto3" json:"meta_data_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MetaDataKeyRes) Reset()         { *m = MetaDataKeyRes{} }
func (m *MetaDataKeyRes) String() string { return proto.CompactTextString(m) }
func (*MetaDataKeyRes) ProtoMessage()    {}
func (*MetaDataKeyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{98}
}

func (m *MetaDataKeyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataKeyRes.Unmarshal(m, b)
}
func (m *MetaDataKeyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataKeyRes.Marshal(b, m, deterministic)
}
func (m *MetaDataKeyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataKeyRes.Merge(m, src)
}
func (m *MetaDataKeyRes) XXX_Size() int {
	return xxx_messageInfo_MetaDataKeyRes.Size(m)
}
func (m *MetaDataKeyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataKeyRes.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataKeyRes proto.InternalMessageInfo

func (m *MetaDataKeyRes) GetMetaDataKey() *MetaDataKey {
	if m != nil {
		return m.MetaDataKey
	}
	return nil
}

//MetaDataKeyArrayResponse
type MetaDataKeyArrayRes struct {
	TotalMetaDataKeys    int64          `protobuf:"varint,1,opt,name=total_meta_data_keys,json=totalMetaDataKeys,proto3" json:"total_meta_data_keys,omitempty"`
	MetaDataKeys         []*MetaDataKey `protobuf:"bytes,2,rep,name=meta_data_keys,json=metaDataKeys,proto3" json:"meta_data_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MetaDataKeyArrayRes) Reset()         { *m = MetaDataKeyArrayRes{} }
func (m *MetaDataKeyArrayRes) String() string { return proto.CompactTextString(m) }
func (*MetaDataKeyArrayRes) ProtoMessage()    {}
func (*MetaDataKeyArrayRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{99}
}

func (m *MetaDataKeyArrayRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataKeyArrayRes.Unmarshal(m, b)
}
func (m *MetaDataKeyArrayRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataKeyArrayRes.Marshal(b, m, deterministic)
}
func (m *MetaDataKeyArrayRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataKeyArrayRes.Merge(m, src)
}
func (m *MetaDataKeyArrayRes) XXX_Size() int {
	return xxx_messageInfo_MetaDataKeyArrayRes.Size(m)
}
func (m *MetaDataKeyArrayRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataKeyArrayRes.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataKeyArrayRes proto.InternalMessageInfo

func (m *MetaDataKeyArrayRes) GetTotalMetaDataKeys() int64 {
	if m != nil {
		return m.TotalMetaDataKeys
	}
	return 0
}

func (m *MetaDataKeyArrayRes) GetMetaDataKeys() []*MetaDataKey {
	if m != nil {
		return m.MetaDataKeys
	}
	return nil
}

//ListInstanceMetaDataResponse
type ListInstanceMetaDataRes struct {
	InstanceId           string         `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	TotalMetaDataEntries int64          `protobuf:"varint,2,opt,name=total_meta_data_entries,json=totalMetaDataEntries,proto3" json:"total_meta_data_entries,omitempty"`
	MetaData             []*MetaDataOut `protobuf:"bytes,3,rep,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListInstanceMetaDataRes) Reset()         { *m = ListInstanceMetaDataRes{} }
func (m *ListInstanceMetaDataRes) String() string { return proto.CompactTextString(m) }
func (*ListInstanceMetaDataRes) ProtoMessage()    {}
func (*ListInstanceMetaDataRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{100}
}

func (m *ListInstanceMetaDataRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstanceMetaDataRes.Unmarshal(m, b)
}
func (m *ListInstanceMetaDataRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstanceMetaDataRes.Marshal(b, m, deterministic)
}
func (m *ListInstanceMetaDataRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstanceMetaDataRes.Merge(m, src)
}
func (m *ListInstanceMetaDataRes) XXX_Size() int {
	return xxx_messageInfo_ListInstanceMetaDataRes.Size(m)
}
func (m *ListInstanceMetaDataRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstanceMetaDataRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstanceMetaDataRes proto.InternalMessageInfo

func (m *ListInstanceMetaDataRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListInstanceMetaDataRes) GetTotalMetaDataEntries() int64 {
	if m != nil {
		return m.TotalMetaDataEntries
	}
	return 0
}

func (m *ListInstanceMetaDataRes) GetMetaData() []*MetaDataOut {
	if m != nil {
		return m.MetaData
	}
	return nil
}

//GetInstanceMetaDataKeyResponse
type GetInstanceMetaDataKeyRes struct {
	InstanceId           string       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	MetaData             *MetaDataOut `protobuf:"bytes,2,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetInstanceMetaDataKeyRes) Reset()         { *m = GetInstanceMetaDataKeyRes{} }
func (m *GetInstanceMetaDataKeyRes) String() string { return proto.CompactTextString(m) }
func (*GetInstanceMetaDataKeyRes) ProtoMessage()    {}
func (*GetInstanceMetaDataKeyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{101}
}

func (m *GetInstanceMetaDataKeyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstanceMetaDataKeyRes.Unmarshal(m, b)
}
func (m *GetInstanceMetaDataKeyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstanceMetaDataKeyRes.Marshal(b, m, deterministic)
}
func (m *GetInstanceMetaDataKeyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceMetaDataKeyRes.Merge(m, src)
}
func (m *GetInstanceMetaDataKeyRes) XXX_Size() int {
	return xxx_messageInfo_GetInstanceMetaDataKeyRes.Size(m)
}
func (m *GetInstanceMetaDataKeyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceMetaDataKeyRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceMetaDataKeyRes proto.InternalMessageInfo

func (m *GetInstanceMetaDataKeyRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GetInstanceMetaDataKeyRes) GetMetaData() *MetaDataOut {
	if m != nil {
		return m.MetaData
	}
	return nil
}

//ListInstanceCellMetaDataRes
type ListInstanceCellMetaDataRes struct {
	InstanceId           string         `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string         `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32         `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	TotalMetaDataEntries int64          `protobuf:"varint,4,opt,name=total_meta_data_entries,json=totalMetaDataEntries,proto3" json:"total_meta_data_entries,omitempty"`
	MetaData             []*MetaDataOut `protobuf:"bytes,5,rep,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListInstanceCellMetaDataRes) Reset()         { *m = ListInstanceCellMetaDataRes{} }
func (m *ListInstanceCellMetaDataRes) String() string { return proto.CompactTextString(m) }
func (*ListInstanceCellMetaDataRes) ProtoMessage()    {}
func (*ListInstanceCellMetaDataRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{102}
}

func (m *ListInstanceCellMetaDataRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstanceCellMetaDataRes.Unmarshal(m, b)
}
func (m *ListInstanceCellMetaDataRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstanceCellMetaDataRes.Marshal(b, m, deterministic)
}
func (m *ListInstanceCellMetaDataRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstanceCellMetaDataRes.Merge(m, src)
}
func (m *ListInstanceCellMetaDataRes) XXX_Size() int {
	return xxx_messageInfo_ListInstanceCellMetaDataRes.Size(m)
}
func (m *ListInstanceCellMetaDataRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstanceCellMetaDataRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstanceCellMetaDataRes proto.InternalMessageInfo

func (m *ListInstanceCellMetaDataRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ListInstanceCellMetaDataRes) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *ListInstanceCellMetaDataRes) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *ListInstanceCellMetaDataRes) GetTotalMetaDataEntries() int64 {
	if m != nil {
		return m.TotalMetaDataEntries
	}
	return 0
}

func (m *ListInstanceCellMetaDataRes) GetMetaData() []*MetaDataOut {
	if m != nil {
		return m.MetaData
	}
	return nil
}

//GetInstanceCellMetaDataKeyResponse
type GetInstanceCellMetaDataKeyRes struct {
	InstanceId           string       `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ActionLabel          string       `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	ValuePosition        uint32       `protobuf:"varint,3,opt,name=value_position,json=valuePosition,proto3" json:"value_position,omitempty"`
	MetaData             *MetaDataOut `protobuf:"bytes,4,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetInstanceCellMetaDataKeyRes) Reset()         { *m = GetInstanceCellMetaDataKeyRes{} }
func (m *GetInstanceCellMetaDataKeyRes) String() string { return proto.CompactTextString(m) }
func (*GetInstanceCellMetaDataKeyRes) ProtoMessage()    {}
func (*GetInstanceCellMetaDataKeyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{103}
}

func (m *GetInstanceCellMetaDataKeyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstanceCellMetaDataKeyRes.Unmarshal(m, b)
}
func (m *GetInstanceCellMetaDataKeyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstanceCellMetaDataKeyRes.Marshal(b, m, deterministic)
}
func (m *GetInstanceCellMetaDataKeyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceCellMetaDataKeyRes.Merge(m, src)
}
func (m *GetInstanceCellMetaDataKeyRes) XXX_Size() int {
	return xxx_messageInfo_GetInstanceCellMetaDataKeyRes.Size(m)
}
func (m *GetInstanceCellMetaDataKeyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceCellMetaDataKeyRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceCellMetaDataKeyRes proto.InternalMessageInfo

func (m *GetInstanceCellMetaDataKeyRes) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GetInstanceCellMetaDataKeyRes) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

func (m *GetInstanceCellMetaDataKeyRes) GetValuePosition() uint32 {
	if m != nil {
		return m.ValuePosition
	}
	return 0
}

func (m *GetInstanceCellMetaDataKeyRes) GetMetaData() *MetaDataOut {
	if m != nil {
		return m.MetaData
	}
	return nil
}

//StatsMetaUsageResponse
type StatsMetaUsageRes struct {
	InstanceCount        int64    `protobuf:"varint,1,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	CellCount            int64    `protobuf:"varint,2,opt,name=cell_count,json=cellCount,proto3" json:"cell_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsMetaUsageRes) Reset()         { *m = StatsMetaUsageRes{} }
func (m *StatsMetaUsageRes) String() string { return proto.CompactTextString(m) }
func (*StatsMetaUsageRes) ProtoMessage()    {}
func (*StatsMetaUsageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{104}
}

func (m *StatsMetaUsageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsMetaUsageRes.Unmarshal(m, b)
}
func (m *StatsMetaUsageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsMetaUsageRes.Marshal(b, m, deterministic)
}
func (m *StatsMetaUsageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsMetaUsageRes.Merge(m, src)
}
func (m *StatsMetaUsageRes) XXX_Size() int {
	return xxx_messageInfo_StatsMetaUsageRes.Size(m)
}
func (m *StatsMetaUsageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsMetaUsageRes.DiscardUnknown(m)
}

var xxx_messageInfo_StatsMetaUsageRes proto.InternalMessageInfo

func (m *StatsMetaUsageRes) GetInstanceCount() int64 {
	if m != nil {
		return m.InstanceCount
	}
	return 0
}

func (m *StatsMetaUsageRes) GetCellCount() int64 {
	if m != nil {
		return m.CellCount
	}
	return 0
}

//QueryResultResponse
type QueryResultRes struct {
	Rows                 []*ResultRow                              `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	AlternativeDataTypes []*ResultValueAlternativeMetaDataPosition `protobuf:"bytes,2,rep,name=alternative_data_types,json=alternativeDataTypes,proto3" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *QueryResultRes) Reset()         { *m = QueryResultRes{} }
func (m *QueryResultRes) String() string { return proto.CompactTextString(m) }
func (*QueryResultRes) ProtoMessage()    {}
func (*QueryResultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{105}
}

func (m *QueryResultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResultRes.Unmarshal(m, b)
}
func (m *QueryResultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResultRes.Marshal(b, m, deterministic)
}
func (m *QueryResultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResultRes.Merge(m, src)
}
func (m *QueryResultRes) XXX_Size() int {
	return xxx_messageInfo_QueryResultRes.Size(m)
}
func (m *QueryResultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResultRes.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResultRes proto.InternalMessageInfo

func (m *QueryResultRes) GetRows() []*ResultRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *QueryResultRes) GetAlternativeDataTypes() []*ResultValueAlternativeMetaDataPosition {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

// CheckPasswordRes
type CheckPasswordRes struct {
	Strength             uint32   `protobuf:"varint,1,opt,name=strength,proto3" json:"strength,omitempty"`
	CrackTime            string   `protobuf:"bytes,2,opt,name=crack_time,json=crackTime,proto3" json:"crack_time,omitempty"`
	Valid                bool     `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	FailReason           string   `protobuf:"bytes,4,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckPasswordRes) Reset()         { *m = CheckPasswordRes{} }
func (m *CheckPasswordRes) String() string { return proto.CompactTextString(m) }
func (*CheckPasswordRes) ProtoMessage()    {}
func (*CheckPasswordRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{106}
}

func (m *CheckPasswordRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPasswordRes.Unmarshal(m, b)
}
func (m *CheckPasswordRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPasswordRes.Marshal(b, m, deterministic)
}
func (m *CheckPasswordRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPasswordRes.Merge(m, src)
}
func (m *CheckPasswordRes) XXX_Size() int {
	return xxx_messageInfo_CheckPasswordRes.Size(m)
}
func (m *CheckPasswordRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPasswordRes.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPasswordRes proto.InternalMessageInfo

func (m *CheckPasswordRes) GetStrength() uint32 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *CheckPasswordRes) GetCrackTime() string {
	if m != nil {
		return m.CrackTime
	}
	return ""
}

func (m *CheckPasswordRes) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *CheckPasswordRes) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

//DynizerRole
type DynizerRole struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DynizerRole) Reset()         { *m = DynizerRole{} }
func (m *DynizerRole) String() string { return proto.CompactTextString(m) }
func (*DynizerRole) ProtoMessage()    {}
func (*DynizerRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{107}
}

func (m *DynizerRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynizerRole.Unmarshal(m, b)
}
func (m *DynizerRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynizerRole.Marshal(b, m, deterministic)
}
func (m *DynizerRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynizerRole.Merge(m, src)
}
func (m *DynizerRole) XXX_Size() int {
	return xxx_messageInfo_DynizerRole.Size(m)
}
func (m *DynizerRole) XXX_DiscardUnknown() {
	xxx_messageInfo_DynizerRole.DiscardUnknown(m)
}

var xxx_messageInfo_DynizerRole proto.InternalMessageInfo

func (m *DynizerRole) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//User
type User struct {
	UserName             string         `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Roles                []*DynizerRole `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Enabled              bool           `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{108}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetRoles() []*DynizerRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

//DDLResult
type DDLResult struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDLResult) Reset()         { *m = DDLResult{} }
func (m *DDLResult) String() string { return proto.CompactTextString(m) }
func (*DDLResult) ProtoMessage()    {}
func (*DDLResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{109}
}

func (m *DDLResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDLResult.Unmarshal(m, b)
}
func (m *DDLResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDLResult.Marshal(b, m, deterministic)
}
func (m *DDLResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDLResult.Merge(m, src)
}
func (m *DDLResult) XXX_Size() int {
	return xxx_messageInfo_DDLResult.Size(m)
}
func (m *DDLResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DDLResult.DiscardUnknown(m)
}

var xxx_messageInfo_DDLResult proto.InternalMessageInfo

//SelectDQLResult
type SelectDQLResult struct {
	ResultCount          int64          `protobuf:"varint,1,opt,name=result_count,json=resultCount,proto3" json:"result_count,omitempty"`
	ResultHandle         string         `protobuf:"bytes,2,opt,name=result_handle,json=resultHandle,proto3" json:"result_handle,omitempty"`
	ResultLabels         []*ResultLabel `protobuf:"bytes,3,rep,name=result_labels,json=resultLabels,proto3" json:"result_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SelectDQLResult) Reset()         { *m = SelectDQLResult{} }
func (m *SelectDQLResult) String() string { return proto.CompactTextString(m) }
func (*SelectDQLResult) ProtoMessage()    {}
func (*SelectDQLResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{110}
}

func (m *SelectDQLResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectDQLResult.Unmarshal(m, b)
}
func (m *SelectDQLResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectDQLResult.Marshal(b, m, deterministic)
}
func (m *SelectDQLResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectDQLResult.Merge(m, src)
}
func (m *SelectDQLResult) XXX_Size() int {
	return xxx_messageInfo_SelectDQLResult.Size(m)
}
func (m *SelectDQLResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectDQLResult.DiscardUnknown(m)
}

var xxx_messageInfo_SelectDQLResult proto.InternalMessageInfo

func (m *SelectDQLResult) GetResultCount() int64 {
	if m != nil {
		return m.ResultCount
	}
	return 0
}

func (m *SelectDQLResult) GetResultHandle() string {
	if m != nil {
		return m.ResultHandle
	}
	return ""
}

func (m *SelectDQLResult) GetResultLabels() []*ResultLabel {
	if m != nil {
		return m.ResultLabels
	}
	return nil
}

//ResultLabel
type ResultLabel struct {
	ActionName           string        `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ResultLabelName      string        `protobuf:"bytes,2,opt,name=result_label_name,json=resultLabelName,proto3" json:"result_label_name,omitempty"`
	ResultLabelIndex     uint32        `protobuf:"varint,3,opt,name=result_label_index,json=resultLabelIndex,proto3" json:"result_label_index,omitempty"`
	ComponentType        ComponentType `protobuf:"varint,4,opt,name=component_type,json=componentType,proto3,enum=ComponentType" json:"component_type,omitempty"`
	DefaultDataType      DataType      `protobuf:"varint,5,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ResultLabel) Reset()         { *m = ResultLabel{} }
func (m *ResultLabel) String() string { return proto.CompactTextString(m) }
func (*ResultLabel) ProtoMessage()    {}
func (*ResultLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{111}
}

func (m *ResultLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultLabel.Unmarshal(m, b)
}
func (m *ResultLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultLabel.Marshal(b, m, deterministic)
}
func (m *ResultLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultLabel.Merge(m, src)
}
func (m *ResultLabel) XXX_Size() int {
	return xxx_messageInfo_ResultLabel.Size(m)
}
func (m *ResultLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultLabel.DiscardUnknown(m)
}

var xxx_messageInfo_ResultLabel proto.InternalMessageInfo

func (m *ResultLabel) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ResultLabel) GetResultLabelName() string {
	if m != nil {
		return m.ResultLabelName
	}
	return ""
}

func (m *ResultLabel) GetResultLabelIndex() uint32 {
	if m != nil {
		return m.ResultLabelIndex
	}
	return 0
}

func (m *ResultLabel) GetComponentType() ComponentType {
	if m != nil {
		return m.ComponentType
	}
	return ComponentType_InvalidComponentType
}

func (m *ResultLabel) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

//ResultValueAlternativeMetaDataPosition
type ResultValueAlternativeMetaDataPosition struct {
	Row                  uint32   `protobuf:"varint,1,opt,name=row,proto3" json:"row,omitempty"`
	Col                  uint32   `protobuf:"varint,2,opt,name=col,proto3" json:"col,omitempty"`
	DataType             DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultValueAlternativeMetaDataPosition) Reset() {
	*m = ResultValueAlternativeMetaDataPosition{}
}
func (m *ResultValueAlternativeMetaDataPosition) String() string { return proto.CompactTextString(m) }
func (*ResultValueAlternativeMetaDataPosition) ProtoMessage()    {}
func (*ResultValueAlternativeMetaDataPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{112}
}

func (m *ResultValueAlternativeMetaDataPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultValueAlternativeMetaDataPosition.Unmarshal(m, b)
}
func (m *ResultValueAlternativeMetaDataPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultValueAlternativeMetaDataPosition.Marshal(b, m, deterministic)
}
func (m *ResultValueAlternativeMetaDataPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultValueAlternativeMetaDataPosition.Merge(m, src)
}
func (m *ResultValueAlternativeMetaDataPosition) XXX_Size() int {
	return xxx_messageInfo_ResultValueAlternativeMetaDataPosition.Size(m)
}
func (m *ResultValueAlternativeMetaDataPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultValueAlternativeMetaDataPosition.DiscardUnknown(m)
}

var xxx_messageInfo_ResultValueAlternativeMetaDataPosition proto.InternalMessageInfo

func (m *ResultValueAlternativeMetaDataPosition) GetRow() uint32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *ResultValueAlternativeMetaDataPosition) GetCol() uint32 {
	if m != nil {
		return m.Col
	}
	return 0
}

func (m *ResultValueAlternativeMetaDataPosition) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_InvalidDataType
}

//ResultRow
type ResultRow struct {
	InstanceCellValues   []string `protobuf:"bytes,1,rep,name=instance_cell_values,json=instanceCellValues,proto3" json:"instance_cell_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultRow) Reset()         { *m = ResultRow{} }
func (m *ResultRow) String() string { return proto.CompactTextString(m) }
func (*ResultRow) ProtoMessage()    {}
func (*ResultRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{113}
}

func (m *ResultRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultRow.Unmarshal(m, b)
}
func (m *ResultRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultRow.Marshal(b, m, deterministic)
}
func (m *ResultRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultRow.Merge(m, src)
}
func (m *ResultRow) XXX_Size() int {
	return xxx_messageInfo_ResultRow.Size(m)
}
func (m *ResultRow) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultRow.DiscardUnknown(m)
}

var xxx_messageInfo_ResultRow proto.InternalMessageInfo

func (m *ResultRow) GetInstanceCellValues() []string {
	if m != nil {
		return m.InstanceCellValues
	}
	return nil
}

//ActionInstanceRecord
type ActionInstanceRecord struct {
	InstanceId           string   `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceCellValues   []string `protobuf:"bytes,2,rep,name=instance_cell_values,json=instanceCellValues,proto3" json:"instance_cell_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionInstanceRecord) Reset()         { *m = ActionInstanceRecord{} }
func (m *ActionInstanceRecord) String() string { return proto.CompactTextString(m) }
func (*ActionInstanceRecord) ProtoMessage()    {}
func (*ActionInstanceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{114}
}

func (m *ActionInstanceRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionInstanceRecord.Unmarshal(m, b)
}
func (m *ActionInstanceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionInstanceRecord.Marshal(b, m, deterministic)
}
func (m *ActionInstanceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionInstanceRecord.Merge(m, src)
}
func (m *ActionInstanceRecord) XXX_Size() int {
	return xxx_messageInfo_ActionInstanceRecord.Size(m)
}
func (m *ActionInstanceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionInstanceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ActionInstanceRecord proto.InternalMessageInfo

func (m *ActionInstanceRecord) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ActionInstanceRecord) GetInstanceCellValues() []string {
	if m != nil {
		return m.InstanceCellValues
	}
	return nil
}

//Action
type Action struct {
	ActionName           string         `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionLabels         []*ActionLabel `protobuf:"bytes,3,rep,name=action_labels,json=actionLabels,proto3" json:"action_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{115}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *Action) GetActionLabels() []*ActionLabel {
	if m != nil {
		return m.ActionLabels
	}
	return nil
}

//ObjectReference
type ObjectRef struct {
	RefUri               string         `protobuf:"bytes,1,opt,name=ref_uri,json=refUri,proto3" json:"ref_uri,omitempty"`
	Type                 ObjectDataType `protobuf:"varint,2,opt,name=type,proto3,enum=ObjectDataType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ObjectRef) Reset()         { *m = ObjectRef{} }
func (m *ObjectRef) String() string { return proto.CompactTextString(m) }
func (*ObjectRef) ProtoMessage()    {}
func (*ObjectRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{116}
}

func (m *ObjectRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectRef.Unmarshal(m, b)
}
func (m *ObjectRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectRef.Marshal(b, m, deterministic)
}
func (m *ObjectRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectRef.Merge(m, src)
}
func (m *ObjectRef) XXX_Size() int {
	return xxx_messageInfo_ObjectRef.Size(m)
}
func (m *ObjectRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectRef.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectRef proto.InternalMessageInfo

func (m *ObjectRef) GetRefUri() string {
	if m != nil {
		return m.RefUri
	}
	return ""
}

func (m *ObjectRef) GetType() ObjectDataType {
	if m != nil {
		return m.Type
	}
	return ObjectDataType_InvalidObjectDataType
}

//ActionLabel
type ActionLabel struct {
	ActionLabelName      string        `protobuf:"bytes,1,opt,name=action_label_name,json=actionLabelName,proto3" json:"action_label_name,omitempty"`
	Component            ComponentType `protobuf:"varint,2,opt,name=component,proto3,enum=ComponentType" json:"component,omitempty"`
	DefaultDataType      DataType      `protobuf:"varint,3,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MinOccurrence        uint32        `protobuf:"varint,4,opt,name=min_occurrence,json=minOccurrence,proto3" json:"min_occurrence,omitempty"`
	MaxOccurrence        uint32        `protobuf:"varint,5,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType    `protobuf:"varint,6,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ActionLabel) Reset()         { *m = ActionLabel{} }
func (m *ActionLabel) String() string { return proto.CompactTextString(m) }
func (*ActionLabel) ProtoMessage()    {}
func (*ActionLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{117}
}

func (m *ActionLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabel.Unmarshal(m, b)
}
func (m *ActionLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabel.Marshal(b, m, deterministic)
}
func (m *ActionLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabel.Merge(m, src)
}
func (m *ActionLabel) XXX_Size() int {
	return xxx_messageInfo_ActionLabel.Size(m)
}
func (m *ActionLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabel.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabel proto.InternalMessageInfo

func (m *ActionLabel) GetActionLabelName() string {
	if m != nil {
		return m.ActionLabelName
	}
	return ""
}

func (m *ActionLabel) GetComponent() ComponentType {
	if m != nil {
		return m.Component
	}
	return ComponentType_InvalidComponentType
}

func (m *ActionLabel) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *ActionLabel) GetMinOccurrence() uint32 {
	if m != nil {
		return m.MinOccurrence
	}
	return 0
}

func (m *ActionLabel) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *ActionLabel) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//MetaDataKey
type MetaDataKey struct {
	KeyName              string     `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	DefaultDataType      DataType   `protobuf:"varint,3,opt,name=default_data_type,json=defaultDataType,proto3,enum=DataType" json:"default_data_type,omitempty"`
	MaxOccurrence        uint32     `protobuf:"varint,4,opt,name=max_occurrence,json=maxOccurrence,proto3" json:"max_occurrence,omitempty"`
	AlternativeDataTypes []DataType `protobuf:"varint,5,rep,packed,name=alternative_data_types,json=alternativeDataTypes,proto3,enum=DataType" json:"alternative_data_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MetaDataKey) Reset()         { *m = MetaDataKey{} }
func (m *MetaDataKey) String() string { return proto.CompactTextString(m) }
func (*MetaDataKey) ProtoMessage()    {}
func (*MetaDataKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{118}
}

func (m *MetaDataKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataKey.Unmarshal(m, b)
}
func (m *MetaDataKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataKey.Marshal(b, m, deterministic)
}
func (m *MetaDataKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataKey.Merge(m, src)
}
func (m *MetaDataKey) XXX_Size() int {
	return xxx_messageInfo_MetaDataKey.Size(m)
}
func (m *MetaDataKey) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataKey.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataKey proto.InternalMessageInfo

func (m *MetaDataKey) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *MetaDataKey) GetDefaultDataType() DataType {
	if m != nil {
		return m.DefaultDataType
	}
	return DataType_InvalidDataType
}

func (m *MetaDataKey) GetMaxOccurrence() uint32 {
	if m != nil {
		return m.MaxOccurrence
	}
	return 0
}

func (m *MetaDataKey) GetAlternativeDataTypes() []DataType {
	if m != nil {
		return m.AlternativeDataTypes
	}
	return nil
}

//MetaDataOut
type MetaDataOut struct {
	MetaDataKeyValue     *MetaDataRecord `protobuf:"bytes,1,opt,name=meta_data_key_value,json=metaDataKeyValue,proto3" json:"meta_data_key_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetaDataOut) Reset()         { *m = MetaDataOut{} }
func (m *MetaDataOut) String() string { return proto.CompactTextString(m) }
func (*MetaDataOut) ProtoMessage()    {}
func (*MetaDataOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{119}
}

func (m *MetaDataOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataOut.Unmarshal(m, b)
}
func (m *MetaDataOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataOut.Marshal(b, m, deterministic)
}
func (m *MetaDataOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataOut.Merge(m, src)
}
func (m *MetaDataOut) XXX_Size() int {
	return xxx_messageInfo_MetaDataOut.Size(m)
}
func (m *MetaDataOut) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataOut.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataOut proto.InternalMessageInfo

func (m *MetaDataOut) GetMetaDataKeyValue() *MetaDataRecord {
	if m != nil {
		return m.MetaDataKeyValue
	}
	return nil
}

//MetaDataRecord
type MetaDataRecord struct {
	KeyName              string   `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	DataType             DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataRecord) Reset()         { *m = MetaDataRecord{} }
func (m *MetaDataRecord) String() string { return proto.CompactTextString(m) }
func (*MetaDataRecord) ProtoMessage()    {}
func (*MetaDataRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{120}
}

func (m *MetaDataRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataRecord.Unmarshal(m, b)
}
func (m *MetaDataRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataRecord.Marshal(b, m, deterministic)
}
func (m *MetaDataRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataRecord.Merge(m, src)
}
func (m *MetaDataRecord) XXX_Size() int {
	return xxx_messageInfo_MetaDataRecord.Size(m)
}
func (m *MetaDataRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataRecord proto.InternalMessageInfo

func (m *MetaDataRecord) GetKeyName() string {
	if m != nil {
		return m.KeyName
	}
	return ""
}

func (m *MetaDataRecord) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *MetaDataRecord) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_InvalidDataType
}

//Window
type Window struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Window) Reset()         { *m = Window{} }
func (m *Window) String() string { return proto.CompactTextString(m) }
func (*Window) ProtoMessage()    {}
func (*Window) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{121}
}

func (m *Window) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Window.Unmarshal(m, b)
}
func (m *Window) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Window.Marshal(b, m, deterministic)
}
func (m *Window) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Window.Merge(m, src)
}
func (m *Window) XXX_Size() int {
	return xxx_messageInfo_Window.Size(m)
}
func (m *Window) XXX_DiscardUnknown() {
	xxx_messageInfo_Window.DiscardUnknown(m)
}

var xxx_messageInfo_Window proto.InternalMessageInfo

func (m *Window) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Window) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

//DynizerQueryParameter
type DQLParam struct {
	NameAlias            string          `protobuf:"bytes,1,opt,name=name_alias,json=nameAlias,proto3" json:"name_alias,omitempty"`
	Value                string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Spec                 *DataTypeFormat `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DQLParam) Reset()         { *m = DQLParam{} }
func (m *DQLParam) String() string { return proto.CompactTextString(m) }
func (*DQLParam) ProtoMessage()    {}
func (*DQLParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{122}
}

func (m *DQLParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DQLParam.Unmarshal(m, b)
}
func (m *DQLParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DQLParam.Marshal(b, m, deterministic)
}
func (m *DQLParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DQLParam.Merge(m, src)
}
func (m *DQLParam) XXX_Size() int {
	return xxx_messageInfo_DQLParam.Size(m)
}
func (m *DQLParam) XXX_DiscardUnknown() {
	xxx_messageInfo_DQLParam.DiscardUnknown(m)
}

var xxx_messageInfo_DQLParam proto.InternalMessageInfo

func (m *DQLParam) GetNameAlias() string {
	if m != nil {
		return m.NameAlias
	}
	return ""
}

func (m *DQLParam) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DQLParam) GetSpec() *DataTypeFormat {
	if m != nil {
		return m.Spec
	}
	return nil
}

//SessionID
type SessionID struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionID) Reset()         { *m = SessionID{} }
func (m *SessionID) String() string { return proto.CompactTextString(m) }
func (*SessionID) ProtoMessage()    {}
func (*SessionID) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{123}
}

func (m *SessionID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionID.Unmarshal(m, b)
}
func (m *SessionID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionID.Marshal(b, m, deterministic)
}
func (m *SessionID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionID.Merge(m, src)
}
func (m *SessionID) XXX_Size() int {
	return xxx_messageInfo_SessionID.Size(m)
}
func (m *SessionID) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionID.DiscardUnknown(m)
}

var xxx_messageInfo_SessionID proto.InternalMessageInfo

func (m *SessionID) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

//ConfigKV
type ConfigKV struct {
	ConfigKey string `protobuf:"bytes,1,opt,name=config_key,json=configKey,proto3" json:"config_key,omitempty"`
	// Types that are valid to be assigned to ConfigValue:
	//	*ConfigKV_NumericValue
	//	*ConfigKV_StringValue
	ConfigValue          isConfigKV_ConfigValue `protobuf_oneof:"config_value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ConfigKV) Reset()         { *m = ConfigKV{} }
func (m *ConfigKV) String() string { return proto.CompactTextString(m) }
func (*ConfigKV) ProtoMessage()    {}
func (*ConfigKV) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{124}
}

func (m *ConfigKV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigKV.Unmarshal(m, b)
}
func (m *ConfigKV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigKV.Marshal(b, m, deterministic)
}
func (m *ConfigKV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigKV.Merge(m, src)
}
func (m *ConfigKV) XXX_Size() int {
	return xxx_messageInfo_ConfigKV.Size(m)
}
func (m *ConfigKV) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigKV.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigKV proto.InternalMessageInfo

func (m *ConfigKV) GetConfigKey() string {
	if m != nil {
		return m.ConfigKey
	}
	return ""
}

type isConfigKV_ConfigValue interface {
	isConfigKV_ConfigValue()
}

type ConfigKV_NumericValue struct {
	NumericValue float32 `protobuf:"fixed32,2,opt,name=numeric_value,json=numericValue,proto3,oneof"`
}

type ConfigKV_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*ConfigKV_NumericValue) isConfigKV_ConfigValue() {}

func (*ConfigKV_StringValue) isConfigKV_ConfigValue() {}

func (m *ConfigKV) GetConfigValue() isConfigKV_ConfigValue {
	if m != nil {
		return m.ConfigValue
	}
	return nil
}

func (m *ConfigKV) GetNumericValue() float32 {
	if x, ok := m.GetConfigValue().(*ConfigKV_NumericValue); ok {
		return x.NumericValue
	}
	return 0
}

func (m *ConfigKV) GetStringValue() string {
	if x, ok := m.GetConfigValue().(*ConfigKV_StringValue); ok {
		return x.StringValue
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfigKV) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfigKV_NumericValue)(nil),
		(*ConfigKV_StringValue)(nil),
	}
}

//GetDynizerConfigurationResponse
type GetDynizerConfigurationRes struct {
	ConfigKeyValues      []*ConfigKV `protobuf:"bytes,1,rep,name=config_key_values,json=configKeyValues,proto3" json:"config_key_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDynizerConfigurationRes) Reset()         { *m = GetDynizerConfigurationRes{} }
func (m *GetDynizerConfigurationRes) String() string { return proto.CompactTextString(m) }
func (*GetDynizerConfigurationRes) ProtoMessage()    {}
func (*GetDynizerConfigurationRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{125}
}

func (m *GetDynizerConfigurationRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDynizerConfigurationRes.Unmarshal(m, b)
}
func (m *GetDynizerConfigurationRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDynizerConfigurationRes.Marshal(b, m, deterministic)
}
func (m *GetDynizerConfigurationRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynizerConfigurationRes.Merge(m, src)
}
func (m *GetDynizerConfigurationRes) XXX_Size() int {
	return xxx_messageInfo_GetDynizerConfigurationRes.Size(m)
}
func (m *GetDynizerConfigurationRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynizerConfigurationRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynizerConfigurationRes proto.InternalMessageInfo

func (m *GetDynizerConfigurationRes) GetConfigKeyValues() []*ConfigKV {
	if m != nil {
		return m.ConfigKeyValues
	}
	return nil
}

//ExportUserActionsRequest
type ExportUserActionsReq struct {
	Actions              []string `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportUserActionsReq) Reset()         { *m = ExportUserActionsReq{} }
func (m *ExportUserActionsReq) String() string { return proto.CompactTextString(m) }
func (*ExportUserActionsReq) ProtoMessage()    {}
func (*ExportUserActionsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{126}
}

func (m *ExportUserActionsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportUserActionsReq.Unmarshal(m, b)
}
func (m *ExportUserActionsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportUserActionsReq.Marshal(b, m, deterministic)
}
func (m *ExportUserActionsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportUserActionsReq.Merge(m, src)
}
func (m *ExportUserActionsReq) XXX_Size() int {
	return xxx_messageInfo_ExportUserActionsReq.Size(m)
}
func (m *ExportUserActionsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportUserActionsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExportUserActionsReq proto.InternalMessageInfo

func (m *ExportUserActionsReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

//ExportUserActionsResponse
type ExportUserActionsRes struct {
	Actions              []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ExportUserActionsRes) Reset()         { *m = ExportUserActionsRes{} }
func (m *ExportUserActionsRes) String() string { return proto.CompactTextString(m) }
func (*ExportUserActionsRes) ProtoMessage()    {}
func (*ExportUserActionsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{127}
}

func (m *ExportUserActionsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportUserActionsRes.Unmarshal(m, b)
}
func (m *ExportUserActionsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportUserActionsRes.Marshal(b, m, deterministic)
}
func (m *ExportUserActionsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportUserActionsRes.Merge(m, src)
}
func (m *ExportUserActionsRes) XXX_Size() int {
	return xxx_messageInfo_ExportUserActionsRes.Size(m)
}
func (m *ExportUserActionsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportUserActionsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ExportUserActionsRes proto.InternalMessageInfo

func (m *ExportUserActionsRes) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

//ImportUserActionsRequest
type ImportUserActionsReq struct {
	Actions              []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	IfNotExists          bool      `protobuf:"varint,2,opt,name=if_not_exists,json=ifNotExists,proto3" json:"if_not_exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ImportUserActionsReq) Reset()         { *m = ImportUserActionsReq{} }
func (m *ImportUserActionsReq) String() string { return proto.CompactTextString(m) }
func (*ImportUserActionsReq) ProtoMessage()    {}
func (*ImportUserActionsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{128}
}

func (m *ImportUserActionsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportUserActionsReq.Unmarshal(m, b)
}
func (m *ImportUserActionsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportUserActionsReq.Marshal(b, m, deterministic)
}
func (m *ImportUserActionsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportUserActionsReq.Merge(m, src)
}
func (m *ImportUserActionsReq) XXX_Size() int {
	return xxx_messageInfo_ImportUserActionsReq.Size(m)
}
func (m *ImportUserActionsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportUserActionsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportUserActionsReq proto.InternalMessageInfo

func (m *ImportUserActionsReq) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ImportUserActionsReq) GetIfNotExists() bool {
	if m != nil {
		return m.IfNotExists
	}
	return false
}

//ActionLabelLinkResponse
type ActionLabelLinkRes struct {
	ActionLabelLinkName  string               `protobuf:"bytes,1,opt,name=action_label_link_name,json=actionLabelLinkName,proto3" json:"action_label_link_name,omitempty"`
	ActionLabelPair      *ActionLabelLinkPair `protobuf:"bytes,2,opt,name=action_label_pair,json=actionLabelPair,proto3" json:"action_label_pair,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActionLabelLinkRes) Reset()         { *m = ActionLabelLinkRes{} }
func (m *ActionLabelLinkRes) String() string { return proto.CompactTextString(m) }
func (*ActionLabelLinkRes) ProtoMessage()    {}
func (*ActionLabelLinkRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{129}
}

func (m *ActionLabelLinkRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelLinkRes.Unmarshal(m, b)
}
func (m *ActionLabelLinkRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelLinkRes.Marshal(b, m, deterministic)
}
func (m *ActionLabelLinkRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelLinkRes.Merge(m, src)
}
func (m *ActionLabelLinkRes) XXX_Size() int {
	return xxx_messageInfo_ActionLabelLinkRes.Size(m)
}
func (m *ActionLabelLinkRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelLinkRes.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelLinkRes proto.InternalMessageInfo

func (m *ActionLabelLinkRes) GetActionLabelLinkName() string {
	if m != nil {
		return m.ActionLabelLinkName
	}
	return ""
}

func (m *ActionLabelLinkRes) GetActionLabelPair() *ActionLabelLinkPair {
	if m != nil {
		return m.ActionLabelPair
	}
	return nil
}

//ActionLabelSelector
type ActionLabelSelector struct {
	ActionName           string   `protobuf:"bytes,1,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	ActionLabel          string   `protobuf:"bytes,2,opt,name=action_label,json=actionLabel,proto3" json:"action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionLabelSelector) Reset()         { *m = ActionLabelSelector{} }
func (m *ActionLabelSelector) String() string { return proto.CompactTextString(m) }
func (*ActionLabelSelector) ProtoMessage()    {}
func (*ActionLabelSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{130}
}

func (m *ActionLabelSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelSelector.Unmarshal(m, b)
}
func (m *ActionLabelSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelSelector.Marshal(b, m, deterministic)
}
func (m *ActionLabelSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelSelector.Merge(m, src)
}
func (m *ActionLabelSelector) XXX_Size() int {
	return xxx_messageInfo_ActionLabelSelector.Size(m)
}
func (m *ActionLabelSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelSelector.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelSelector proto.InternalMessageInfo

func (m *ActionLabelSelector) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ActionLabelSelector) GetActionLabel() string {
	if m != nil {
		return m.ActionLabel
	}
	return ""
}

//ActionLabelLinkPair
type ActionLabelLinkPair struct {
	FirstActionLabel     *ActionLabelSelector `protobuf:"bytes,1,opt,name=first_action_label,json=firstActionLabel,proto3" json:"first_action_label,omitempty"`
	SecondActionLabel    *ActionLabelSelector `protobuf:"bytes,2,opt,name=second_action_label,json=secondActionLabel,proto3" json:"second_action_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActionLabelLinkPair) Reset()         { *m = ActionLabelLinkPair{} }
func (m *ActionLabelLinkPair) String() string { return proto.CompactTextString(m) }
func (*ActionLabelLinkPair) ProtoMessage()    {}
func (*ActionLabelLinkPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{131}
}

func (m *ActionLabelLinkPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelLinkPair.Unmarshal(m, b)
}
func (m *ActionLabelLinkPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelLinkPair.Marshal(b, m, deterministic)
}
func (m *ActionLabelLinkPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelLinkPair.Merge(m, src)
}
func (m *ActionLabelLinkPair) XXX_Size() int {
	return xxx_messageInfo_ActionLabelLinkPair.Size(m)
}
func (m *ActionLabelLinkPair) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelLinkPair.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelLinkPair proto.InternalMessageInfo

func (m *ActionLabelLinkPair) GetFirstActionLabel() *ActionLabelSelector {
	if m != nil {
		return m.FirstActionLabel
	}
	return nil
}

func (m *ActionLabelLinkPair) GetSecondActionLabel() *ActionLabelSelector {
	if m != nil {
		return m.SecondActionLabel
	}
	return nil
}

//ActionLabelLinkRequest
type ActionLabelLinkReq struct {
	ActionLabelLinkName  string               `protobuf:"bytes,1,opt,name=action_label_link_name,json=actionLabelLinkName,proto3" json:"action_label_link_name,omitempty"`
	ActionLabelPair      *ActionLabelLinkPair `protobuf:"bytes,2,opt,name=action_label_pair,json=actionLabelPair,proto3" json:"action_label_pair,omitempty"`
	SyncBuild            bool                 `protobuf:"varint,3,opt,name=sync_build,json=syncBuild,proto3" json:"sync_build,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ActionLabelLinkReq) Reset()         { *m = ActionLabelLinkReq{} }
func (m *ActionLabelLinkReq) String() string { return proto.CompactTextString(m) }
func (*ActionLabelLinkReq) ProtoMessage()    {}
func (*ActionLabelLinkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{132}
}

func (m *ActionLabelLinkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelLinkReq.Unmarshal(m, b)
}
func (m *ActionLabelLinkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelLinkReq.Marshal(b, m, deterministic)
}
func (m *ActionLabelLinkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelLinkReq.Merge(m, src)
}
func (m *ActionLabelLinkReq) XXX_Size() int {
	return xxx_messageInfo_ActionLabelLinkReq.Size(m)
}
func (m *ActionLabelLinkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelLinkReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelLinkReq proto.InternalMessageInfo

func (m *ActionLabelLinkReq) GetActionLabelLinkName() string {
	if m != nil {
		return m.ActionLabelLinkName
	}
	return ""
}

func (m *ActionLabelLinkReq) GetActionLabelPair() *ActionLabelLinkPair {
	if m != nil {
		return m.ActionLabelPair
	}
	return nil
}

func (m *ActionLabelLinkReq) GetSyncBuild() bool {
	if m != nil {
		return m.SyncBuild
	}
	return false
}

//ActionLabelLinkNameRequest
type ActionLabelLinkNameReq struct {
	ActionLabelLinkName  string   `protobuf:"bytes,1,opt,name=action_label_link_name,json=actionLabelLinkName,proto3" json:"action_label_link_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionLabelLinkNameReq) Reset()         { *m = ActionLabelLinkNameReq{} }
func (m *ActionLabelLinkNameReq) String() string { return proto.CompactTextString(m) }
func (*ActionLabelLinkNameReq) ProtoMessage()    {}
func (*ActionLabelLinkNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{133}
}

func (m *ActionLabelLinkNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionLabelLinkNameReq.Unmarshal(m, b)
}
func (m *ActionLabelLinkNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionLabelLinkNameReq.Marshal(b, m, deterministic)
}
func (m *ActionLabelLinkNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionLabelLinkNameReq.Merge(m, src)
}
func (m *ActionLabelLinkNameReq) XXX_Size() int {
	return xxx_messageInfo_ActionLabelLinkNameReq.Size(m)
}
func (m *ActionLabelLinkNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionLabelLinkNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_ActionLabelLinkNameReq proto.InternalMessageInfo

func (m *ActionLabelLinkNameReq) GetActionLabelLinkName() string {
	if m != nil {
		return m.ActionLabelLinkName
	}
	return ""
}

//GetVersionResponse
type VersionRes struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Build                string   `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	Mode                 string   `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	BuildDate            string   `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	Commit               string   `protobuf:"bytes,5,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRes) Reset()         { *m = VersionRes{} }
func (m *VersionRes) String() string { return proto.CompactTextString(m) }
func (*VersionRes) ProtoMessage()    {}
func (*VersionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{134}
}

func (m *VersionRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRes.Unmarshal(m, b)
}
func (m *VersionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRes.Marshal(b, m, deterministic)
}
func (m *VersionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRes.Merge(m, src)
}
func (m *VersionRes) XXX_Size() int {
	return xxx_messageInfo_VersionRes.Size(m)
}
func (m *VersionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRes.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRes proto.InternalMessageInfo

func (m *VersionRes) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionRes) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *VersionRes) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *VersionRes) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *VersionRes) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

type InstanceFilter struct {
	ActionLabelName      string        `protobuf:"bytes,1,opt,name=action_label_name,json=actionLabelName,proto3" json:"action_label_name,omitempty"`
	Values               []string      `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	ComponentType        ComponentType `protobuf:"varint,3,opt,name=component_type,json=componentType,proto3,enum=ComponentType" json:"component_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InstanceFilter) Reset()         { *m = InstanceFilter{} }
func (m *InstanceFilter) String() string { return proto.CompactTextString(m) }
func (*InstanceFilter) ProtoMessage()    {}
func (*InstanceFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{135}
}

func (m *InstanceFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceFilter.Unmarshal(m, b)
}
func (m *InstanceFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceFilter.Marshal(b, m, deterministic)
}
func (m *InstanceFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceFilter.Merge(m, src)
}
func (m *InstanceFilter) XXX_Size() int {
	return xxx_messageInfo_InstanceFilter.Size(m)
}
func (m *InstanceFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceFilter.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceFilter proto.InternalMessageInfo

func (m *InstanceFilter) GetActionLabelName() string {
	if m != nil {
		return m.ActionLabelName
	}
	return ""
}

func (m *InstanceFilter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *InstanceFilter) GetComponentType() ComponentType {
	if m != nil {
		return m.ComponentType
	}
	return ComponentType_InvalidComponentType
}

type QueryDataElementsReq struct {
	Contains  string            `protobuf:"bytes,1,opt,name=contains,proto3" json:"contains,omitempty"`
	Actions   []string          `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	DataTypes []DataType        `protobuf:"varint,3,rep,packed,name=data_types,json=dataTypes,proto3,enum=DataType" json:"data_types,omitempty"`
	Filters   []*InstanceFilter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	MaxLength int64             `protobuf:"varint,5,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	//    int64 top = 6 [
	//        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
	//            description: "Defines the topN **DataElement** to be returned based on occurrence."
	//        }
	//    ];
	ComponentTypes         []ComponentType `protobuf:"varint,7,rep,packed,name=component_types,json=componentTypes,proto3,enum=ComponentType" json:"component_types,omitempty"`
	WithComponentTypeSplit bool            `protobuf:"varint,8,opt,name=with_component_type_split,json=withComponentTypeSplit,proto3" json:"with_component_type_split,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *QueryDataElementsReq) Reset()         { *m = QueryDataElementsReq{} }
func (m *QueryDataElementsReq) String() string { return proto.CompactTextString(m) }
func (*QueryDataElementsReq) ProtoMessage()    {}
func (*QueryDataElementsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{136}
}

func (m *QueryDataElementsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataElementsReq.Unmarshal(m, b)
}
func (m *QueryDataElementsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataElementsReq.Marshal(b, m, deterministic)
}
func (m *QueryDataElementsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataElementsReq.Merge(m, src)
}
func (m *QueryDataElementsReq) XXX_Size() int {
	return xxx_messageInfo_QueryDataElementsReq.Size(m)
}
func (m *QueryDataElementsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataElementsReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataElementsReq proto.InternalMessageInfo

func (m *QueryDataElementsReq) GetContains() string {
	if m != nil {
		return m.Contains
	}
	return ""
}

func (m *QueryDataElementsReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *QueryDataElementsReq) GetDataTypes() []DataType {
	if m != nil {
		return m.DataTypes
	}
	return nil
}

func (m *QueryDataElementsReq) GetFilters() []*InstanceFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *QueryDataElementsReq) GetMaxLength() int64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *QueryDataElementsReq) GetComponentTypes() []ComponentType {
	if m != nil {
		return m.ComponentTypes
	}
	return nil
}

func (m *QueryDataElementsReq) GetWithComponentTypeSplit() bool {
	if m != nil {
		return m.WithComponentTypeSplit
	}
	return false
}

type GetTopNDataElementsReq struct {
	Top                  int64             `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	Actions              []string          `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	DataTypes            []DataType        `protobuf:"varint,3,rep,packed,name=data_types,json=dataTypes,proto3,enum=DataType" json:"data_types,omitempty"`
	ComponentTypes       []ComponentType   `protobuf:"varint,4,rep,packed,name=component_types,json=componentTypes,proto3,enum=ComponentType" json:"component_types,omitempty"`
	Filters              []*InstanceFilter `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetTopNDataElementsReq) Reset()         { *m = GetTopNDataElementsReq{} }
func (m *GetTopNDataElementsReq) String() string { return proto.CompactTextString(m) }
func (*GetTopNDataElementsReq) ProtoMessage()    {}
func (*GetTopNDataElementsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{137}
}

func (m *GetTopNDataElementsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopNDataElementsReq.Unmarshal(m, b)
}
func (m *GetTopNDataElementsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopNDataElementsReq.Marshal(b, m, deterministic)
}
func (m *GetTopNDataElementsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopNDataElementsReq.Merge(m, src)
}
func (m *GetTopNDataElementsReq) XXX_Size() int {
	return xxx_messageInfo_GetTopNDataElementsReq.Size(m)
}
func (m *GetTopNDataElementsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopNDataElementsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopNDataElementsReq proto.InternalMessageInfo

func (m *GetTopNDataElementsReq) GetTop() int64 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *GetTopNDataElementsReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *GetTopNDataElementsReq) GetDataTypes() []DataType {
	if m != nil {
		return m.DataTypes
	}
	return nil
}

func (m *GetTopNDataElementsReq) GetComponentTypes() []ComponentType {
	if m != nil {
		return m.ComponentTypes
	}
	return nil
}

func (m *GetTopNDataElementsReq) GetFilters() []*InstanceFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type GetTopNDataElementsRes struct {
	Who                  []*TopNDataElement `protobuf:"bytes,1,rep,name=who,proto3" json:"who,omitempty"`
	What                 []*TopNDataElement `protobuf:"bytes,2,rep,name=what,proto3" json:"what,omitempty"`
	Where                []*TopNDataElement `protobuf:"bytes,3,rep,name=where,proto3" json:"where,omitempty"`
	When                 []*TopNDataElement `protobuf:"bytes,4,rep,name=when,proto3" json:"when,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetTopNDataElementsRes) Reset()         { *m = GetTopNDataElementsRes{} }
func (m *GetTopNDataElementsRes) String() string { return proto.CompactTextString(m) }
func (*GetTopNDataElementsRes) ProtoMessage()    {}
func (*GetTopNDataElementsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{138}
}

func (m *GetTopNDataElementsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopNDataElementsRes.Unmarshal(m, b)
}
func (m *GetTopNDataElementsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopNDataElementsRes.Marshal(b, m, deterministic)
}
func (m *GetTopNDataElementsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopNDataElementsRes.Merge(m, src)
}
func (m *GetTopNDataElementsRes) XXX_Size() int {
	return xxx_messageInfo_GetTopNDataElementsRes.Size(m)
}
func (m *GetTopNDataElementsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopNDataElementsRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopNDataElementsRes proto.InternalMessageInfo

func (m *GetTopNDataElementsRes) GetWho() []*TopNDataElement {
	if m != nil {
		return m.Who
	}
	return nil
}

func (m *GetTopNDataElementsRes) GetWhat() []*TopNDataElement {
	if m != nil {
		return m.What
	}
	return nil
}

func (m *GetTopNDataElementsRes) GetWhere() []*TopNDataElement {
	if m != nil {
		return m.Where
	}
	return nil
}

func (m *GetTopNDataElementsRes) GetWhen() []*TopNDataElement {
	if m != nil {
		return m.When
	}
	return nil
}

type PlotRes struct {
	PlotName             string   `protobuf:"bytes,1,opt,name=plot_name,json=plotName,proto3" json:"plot_name,omitempty"`
	PlotJson             string   `protobuf:"bytes,2,opt,name=plot_json,json=plotJson,proto3" json:"plot_json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlotRes) Reset()         { *m = PlotRes{} }
func (m *PlotRes) String() string { return proto.CompactTextString(m) }
func (*PlotRes) ProtoMessage()    {}
func (*PlotRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{139}
}

func (m *PlotRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlotRes.Unmarshal(m, b)
}
func (m *PlotRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlotRes.Marshal(b, m, deterministic)
}
func (m *PlotRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlotRes.Merge(m, src)
}
func (m *PlotRes) XXX_Size() int {
	return xxx_messageInfo_PlotRes.Size(m)
}
func (m *PlotRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PlotRes.DiscardUnknown(m)
}

var xxx_messageInfo_PlotRes proto.InternalMessageInfo

func (m *PlotRes) GetPlotName() string {
	if m != nil {
		return m.PlotName
	}
	return ""
}

func (m *PlotRes) GetPlotJson() string {
	if m != nil {
		return m.PlotJson
	}
	return ""
}

type FilterQueryReq struct {
	Actions              []string          `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	Filters              []*InstanceFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FilterQueryReq) Reset()         { *m = FilterQueryReq{} }
func (m *FilterQueryReq) String() string { return proto.CompactTextString(m) }
func (*FilterQueryReq) ProtoMessage()    {}
func (*FilterQueryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{140}
}

func (m *FilterQueryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterQueryReq.Unmarshal(m, b)
}
func (m *FilterQueryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterQueryReq.Marshal(b, m, deterministic)
}
func (m *FilterQueryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterQueryReq.Merge(m, src)
}
func (m *FilterQueryReq) XXX_Size() int {
	return xxx_messageInfo_FilterQueryReq.Size(m)
}
func (m *FilterQueryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterQueryReq.DiscardUnknown(m)
}

var xxx_messageInfo_FilterQueryReq proto.InternalMessageInfo

func (m *FilterQueryReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *FilterQueryReq) GetFilters() []*InstanceFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type FilteredPlotReq struct {
	Top                  int64             `protobuf:"varint,1,opt,name=top,proto3" json:"top,omitempty"`
	PlotName             string            `protobuf:"bytes,2,opt,name=plot_name,json=plotName,proto3" json:"plot_name,omitempty"`
	Actions              []string          `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	DataTypes            []DataType        `protobuf:"varint,4,rep,packed,name=data_types,json=dataTypes,proto3,enum=DataType" json:"data_types,omitempty"`
	ComponentTypes       []ComponentType   `protobuf:"varint,5,rep,packed,name=component_types,json=componentTypes,proto3,enum=ComponentType" json:"component_types,omitempty"`
	Filters              []*InstanceFilter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FilteredPlotReq) Reset()         { *m = FilteredPlotReq{} }
func (m *FilteredPlotReq) String() string { return proto.CompactTextString(m) }
func (*FilteredPlotReq) ProtoMessage()    {}
func (*FilteredPlotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{141}
}

func (m *FilteredPlotReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilteredPlotReq.Unmarshal(m, b)
}
func (m *FilteredPlotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilteredPlotReq.Marshal(b, m, deterministic)
}
func (m *FilteredPlotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilteredPlotReq.Merge(m, src)
}
func (m *FilteredPlotReq) XXX_Size() int {
	return xxx_messageInfo_FilteredPlotReq.Size(m)
}
func (m *FilteredPlotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FilteredPlotReq.DiscardUnknown(m)
}

var xxx_messageInfo_FilteredPlotReq proto.InternalMessageInfo

func (m *FilteredPlotReq) GetTop() int64 {
	if m != nil {
		return m.Top
	}
	return 0
}

func (m *FilteredPlotReq) GetPlotName() string {
	if m != nil {
		return m.PlotName
	}
	return ""
}

func (m *FilteredPlotReq) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *FilteredPlotReq) GetDataTypes() []DataType {
	if m != nil {
		return m.DataTypes
	}
	return nil
}

func (m *FilteredPlotReq) GetComponentTypes() []ComponentType {
	if m != nil {
		return m.ComponentTypes
	}
	return nil
}

func (m *FilteredPlotReq) GetFilters() []*InstanceFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ComponentTypeUsage struct {
	ComponentType        ComponentType `protobuf:"varint,1,opt,name=component_type,json=componentType,proto3,enum=ComponentType" json:"component_type,omitempty"`
	NumInstances         int64         `protobuf:"varint,2,opt,name=num_instances,json=numInstances,proto3" json:"num_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ComponentTypeUsage) Reset()         { *m = ComponentTypeUsage{} }
func (m *ComponentTypeUsage) String() string { return proto.CompactTextString(m) }
func (*ComponentTypeUsage) ProtoMessage()    {}
func (*ComponentTypeUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{142}
}

func (m *ComponentTypeUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComponentTypeUsage.Unmarshal(m, b)
}
func (m *ComponentTypeUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComponentTypeUsage.Marshal(b, m, deterministic)
}
func (m *ComponentTypeUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComponentTypeUsage.Merge(m, src)
}
func (m *ComponentTypeUsage) XXX_Size() int {
	return xxx_messageInfo_ComponentTypeUsage.Size(m)
}
func (m *ComponentTypeUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_ComponentTypeUsage.DiscardUnknown(m)
}

var xxx_messageInfo_ComponentTypeUsage proto.InternalMessageInfo

func (m *ComponentTypeUsage) GetComponentType() ComponentType {
	if m != nil {
		return m.ComponentType
	}
	return ComponentType_InvalidComponentType
}

func (m *ComponentTypeUsage) GetNumInstances() int64 {
	if m != nil {
		return m.NumInstances
	}
	return 0
}

type TopNDataElement struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	DataType             DataType `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	NumInstances         int64    `protobuf:"varint,3,opt,name=num_instances,json=numInstances,proto3" json:"num_instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopNDataElement) Reset()         { *m = TopNDataElement{} }
func (m *TopNDataElement) String() string { return proto.CompactTextString(m) }
func (*TopNDataElement) ProtoMessage()    {}
func (*TopNDataElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{143}
}

func (m *TopNDataElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopNDataElement.Unmarshal(m, b)
}
func (m *TopNDataElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopNDataElement.Marshal(b, m, deterministic)
}
func (m *TopNDataElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopNDataElement.Merge(m, src)
}
func (m *TopNDataElement) XXX_Size() int {
	return xxx_messageInfo_TopNDataElement.Size(m)
}
func (m *TopNDataElement) XXX_DiscardUnknown() {
	xxx_messageInfo_TopNDataElement.DiscardUnknown(m)
}

var xxx_messageInfo_TopNDataElement proto.InternalMessageInfo

func (m *TopNDataElement) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TopNDataElement) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_InvalidDataType
}

func (m *TopNDataElement) GetNumInstances() int64 {
	if m != nil {
		return m.NumInstances
	}
	return 0
}

type DataElement struct {
	Value                string                `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	DataType             DataType              `protobuf:"varint,2,opt,name=data_type,json=dataType,proto3,enum=DataType" json:"data_type,omitempty"`
	NumInstances         int64                 `protobuf:"varint,3,opt,name=num_instances,json=numInstances,proto3" json:"num_instances,omitempty"`
	ByComponentType      []*ComponentTypeUsage `protobuf:"bytes,4,rep,name=by_component_type,json=byComponentType,proto3" json:"by_component_type,omitempty"`
	Contains             []string              `protobuf:"bytes,5,rep,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DataElement) Reset()         { *m = DataElement{} }
func (m *DataElement) String() string { return proto.CompactTextString(m) }
func (*DataElement) ProtoMessage()    {}
func (*DataElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{144}
}

func (m *DataElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataElement.Unmarshal(m, b)
}
func (m *DataElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataElement.Marshal(b, m, deterministic)
}
func (m *DataElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataElement.Merge(m, src)
}
func (m *DataElement) XXX_Size() int {
	return xxx_messageInfo_DataElement.Size(m)
}
func (m *DataElement) XXX_DiscardUnknown() {
	xxx_messageInfo_DataElement.DiscardUnknown(m)
}

var xxx_messageInfo_DataElement proto.InternalMessageInfo

func (m *DataElement) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DataElement) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_InvalidDataType
}

func (m *DataElement) GetNumInstances() int64 {
	if m != nil {
		return m.NumInstances
	}
	return 0
}

func (m *DataElement) GetByComponentType() []*ComponentTypeUsage {
	if m != nil {
		return m.ByComponentType
	}
	return nil
}

func (m *DataElement) GetContains() []string {
	if m != nil {
		return m.Contains
	}
	return nil
}

type QueryDataElementsRes struct {
	TotalDataelements    int64          `protobuf:"varint,1,opt,name=total_dataelements,json=totalDataelements,proto3" json:"total_dataelements,omitempty"`
	Dataelements         []*DataElement `protobuf:"bytes,2,rep,name=dataelements,proto3" json:"dataelements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QueryDataElementsRes) Reset()         { *m = QueryDataElementsRes{} }
func (m *QueryDataElementsRes) String() string { return proto.CompactTextString(m) }
func (*QueryDataElementsRes) ProtoMessage()    {}
func (*QueryDataElementsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{145}
}

func (m *QueryDataElementsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataElementsRes.Unmarshal(m, b)
}
func (m *QueryDataElementsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataElementsRes.Marshal(b, m, deterministic)
}
func (m *QueryDataElementsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataElementsRes.Merge(m, src)
}
func (m *QueryDataElementsRes) XXX_Size() int {
	return xxx_messageInfo_QueryDataElementsRes.Size(m)
}
func (m *QueryDataElementsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataElementsRes.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataElementsRes proto.InternalMessageInfo

func (m *QueryDataElementsRes) GetTotalDataelements() int64 {
	if m != nil {
		return m.TotalDataelements
	}
	return 0
}

func (m *QueryDataElementsRes) GetDataelements() []*DataElement {
	if m != nil {
		return m.Dataelements
	}
	return nil
}

type ReIndexReq struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReIndexReq) Reset()         { *m = ReIndexReq{} }
func (m *ReIndexReq) String() string { return proto.CompactTextString(m) }
func (*ReIndexReq) ProtoMessage()    {}
func (*ReIndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{146}
}

func (m *ReIndexReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReIndexReq.Unmarshal(m, b)
}
func (m *ReIndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReIndexReq.Marshal(b, m, deterministic)
}
func (m *ReIndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReIndexReq.Merge(m, src)
}
func (m *ReIndexReq) XXX_Size() int {
	return xxx_messageInfo_ReIndexReq.Size(m)
}
func (m *ReIndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReIndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReIndexReq proto.InternalMessageInfo

func (m *ReIndexReq) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type BulkInstanceInsertStartReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkInstanceInsertStartReq) Reset()         { *m = BulkInstanceInsertStartReq{} }
func (m *BulkInstanceInsertStartReq) String() string { return proto.CompactTextString(m) }
func (*BulkInstanceInsertStartReq) ProtoMessage()    {}
func (*BulkInstanceInsertStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{147}
}

func (m *BulkInstanceInsertStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkInstanceInsertStartReq.Unmarshal(m, b)
}
func (m *BulkInstanceInsertStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkInstanceInsertStartReq.Marshal(b, m, deterministic)
}
func (m *BulkInstanceInsertStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkInstanceInsertStartReq.Merge(m, src)
}
func (m *BulkInstanceInsertStartReq) XXX_Size() int {
	return xxx_messageInfo_BulkInstanceInsertStartReq.Size(m)
}
func (m *BulkInstanceInsertStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkInstanceInsertStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_BulkInstanceInsertStartReq proto.InternalMessageInfo

type BuilInstanceInsertRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuilInstanceInsertRes) Reset()         { *m = BuilInstanceInsertRes{} }
func (m *BuilInstanceInsertRes) String() string { return proto.CompactTextString(m) }
func (*BuilInstanceInsertRes) ProtoMessage()    {}
func (*BuilInstanceInsertRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{148}
}

func (m *BuilInstanceInsertRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuilInstanceInsertRes.Unmarshal(m, b)
}
func (m *BuilInstanceInsertRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuilInstanceInsertRes.Marshal(b, m, deterministic)
}
func (m *BuilInstanceInsertRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuilInstanceInsertRes.Merge(m, src)
}
func (m *BuilInstanceInsertRes) XXX_Size() int {
	return xxx_messageInfo_BuilInstanceInsertRes.Size(m)
}
func (m *BuilInstanceInsertRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BuilInstanceInsertRes.DiscardUnknown(m)
}

var xxx_messageInfo_BuilInstanceInsertRes proto.InternalMessageInfo

type BulkInstanceInsertDataReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkInstanceInsertDataReq) Reset()         { *m = BulkInstanceInsertDataReq{} }
func (m *BulkInstanceInsertDataReq) String() string { return proto.CompactTextString(m) }
func (*BulkInstanceInsertDataReq) ProtoMessage()    {}
func (*BulkInstanceInsertDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{149}
}

func (m *BulkInstanceInsertDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkInstanceInsertDataReq.Unmarshal(m, b)
}
func (m *BulkInstanceInsertDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkInstanceInsertDataReq.Marshal(b, m, deterministic)
}
func (m *BulkInstanceInsertDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkInstanceInsertDataReq.Merge(m, src)
}
func (m *BulkInstanceInsertDataReq) XXX_Size() int {
	return xxx_messageInfo_BulkInstanceInsertDataReq.Size(m)
}
func (m *BulkInstanceInsertDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkInstanceInsertDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_BulkInstanceInsertDataReq proto.InternalMessageInfo

type BulkInstanceInsertCloseReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BulkInstanceInsertCloseReq) Reset()         { *m = BulkInstanceInsertCloseReq{} }
func (m *BulkInstanceInsertCloseReq) String() string { return proto.CompactTextString(m) }
func (*BulkInstanceInsertCloseReq) ProtoMessage()    {}
func (*BulkInstanceInsertCloseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87533e5f8a8bdf, []int{150}
}

func (m *BulkInstanceInsertCloseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BulkInstanceInsertCloseReq.Unmarshal(m, b)
}
func (m *BulkInstanceInsertCloseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BulkInstanceInsertCloseReq.Marshal(b, m, deterministic)
}
func (m *BulkInstanceInsertCloseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BulkInstanceInsertCloseReq.Merge(m, src)
}
func (m *BulkInstanceInsertCloseReq) XXX_Size() int {
	return xxx_messageInfo_BulkInstanceInsertCloseReq.Size(m)
}
func (m *BulkInstanceInsertCloseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BulkInstanceInsertCloseReq.DiscardUnknown(m)
}

var xxx_messageInfo_BulkInstanceInsertCloseReq proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("ComponentType", ComponentType_name, ComponentType_value)
	proto.RegisterEnum("DataType", DataType_name, DataType_value)
	proto.RegisterEnum("ObjectDataType", ObjectDataType_name, ObjectDataType_value)
	proto.RegisterEnum("SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterEnum("OrderField", OrderField_name, OrderField_value)
	proto.RegisterType((*ErrorMeta)(nil), "ErrorMeta")
	proto.RegisterType((*ErrorArg)(nil), "ErrorArg")
	proto.RegisterType((*ErrorResponse)(nil), "ErrorResponse")
	proto.RegisterType((*LoginReq)(nil), "LoginReq")
	proto.RegisterType((*ServiceLoginReq)(nil), "ServiceLoginReq")
	proto.RegisterType((*TokenReq)(nil), "TokenReq")
	proto.RegisterType((*AddUserReq)(nil), "AddUserReq")
	proto.RegisterType((*UserRoleReq)(nil), "UserRoleReq")
	proto.RegisterType((*UserReq)(nil), "UserReq")
	proto.RegisterType((*CheckPasswordReq)(nil), "CheckPasswordReq")
	proto.RegisterType((*WindowReq)(nil), "WindowReq")
	proto.RegisterType((*ListActionNamesWindowReq)(nil), "ListActionNamesWindowReq")
	proto.RegisterType((*SetUserPasswordReq)(nil), "SetUserPasswordReq")
	proto.RegisterType((*ChangePasswordReq)(nil), "ChangePasswordReq")
	proto.RegisterType((*CheckActionNameReq)(nil), "CheckActionNameReq")
	proto.RegisterType((*CreateActionReq)(nil), "CreateActionReq")
	proto.RegisterType((*ActionName)(nil), "ActionName")
	proto.RegisterType((*UpdateActionReq)(nil), "UpdateActionReq")
	proto.RegisterType((*DeleteActionReq)(nil), "DeleteActionReq")
	proto.RegisterType((*ActionReq)(nil), "ActionReq")
	proto.RegisterType((*ActionRes)(nil), "ActionRes")
	proto.RegisterType((*CreateActionTypeReq)(nil), "CreateActionTypeReq")
	proto.RegisterType((*ActionTypeLabel)(nil), "ActionTypeLabel")
	proto.RegisterType((*UpdateActionTypeReq)(nil), "UpdateActionTypeReq")
	proto.RegisterType((*DeleteActionTypeReq)(nil), "DeleteActionTypeReq")
	proto.RegisterType((*ActionTypeReq)(nil), "ActionTypeReq")
	proto.RegisterType((*ActionTypeRes)(nil), "ActionTypeRes")
	proto.RegisterType((*EmptyReq)(nil), "EmptyReq")
	proto.RegisterType((*CheckActionLabelNameReq)(nil), "CheckActionLabelNameReq")
	proto.RegisterType((*AddActionLabelReq)(nil), "AddActionLabelReq")
	proto.RegisterType((*UpdateActionLabelReq)(nil), "UpdateActionLabelReq")
	proto.RegisterType((*ActionLabelReq)(nil), "ActionLabelReq")
	proto.RegisterType((*CreateObjectReq)(nil), "CreateObjectReq")
	proto.RegisterType((*ObjectRes)(nil), "ObjectRes")
	proto.RegisterType((*ClearObjectDataReq)(nil), "ClearObjectDataReq")
	proto.RegisterType((*StreamObjectDataInReq)(nil), "StreamObjectDataInReq")
	proto.RegisterType((*StreamObjectDataOutReq)(nil), "StreamObjectDataOutReq")
	proto.RegisterType((*StreamObjectDataOutRes)(nil), "StreamObjectDataOutRes")
	proto.RegisterType((*DownloadObjectDataReq)(nil), "DownloadObjectDataReq")
	proto.RegisterType((*DownloadObjectDataRes)(nil), "DownloadObjectDataRes")
	proto.RegisterType((*UploadObjectDataReq)(nil), "UploadObjectDataReq")
	proto.RegisterType((*CreateInstanceReq)(nil), "CreateInstanceReq")
	proto.RegisterType((*StreamInstanceReq)(nil), "StreamInstanceReq")
	proto.RegisterType((*UpdateInstanceReq)(nil), "UpdateInstanceReq")
	proto.RegisterType((*InstanceReq)(nil), "InstanceReq")
	proto.RegisterType((*ReadActionInstancesReq)(nil), "ReadActionInstancesReq")
	proto.RegisterType((*CountActionReq)(nil), "CountActionReq")
	proto.RegisterType((*DQLReq)(nil), "DQLReq")
	proto.RegisterType((*QueryResultReq)(nil), "QueryResultReq")
	proto.RegisterType((*QueryCloseReq)(nil), "QueryCloseReq")
	proto.RegisterType((*CheckMetaDataKeyNameReq)(nil), "CheckMetaDataKeyNameReq")
	proto.RegisterType((*CreateMetaDataKeyReq)(nil), "CreateMetaDataKeyReq")
	proto.RegisterType((*DeactivateMetaDataKeyReq)(nil), "DeactivateMetaDataKeyReq")
	proto.RegisterType((*UpdateMetaDataKeyReq)(nil), "UpdateMetaDataKeyReq")
	proto.RegisterType((*MetaDataKeyReq)(nil), "MetaDataKeyReq")
	proto.RegisterType((*DeleteMetaDataKeyReq)(nil), "DeleteMetaDataKeyReq")
	proto.RegisterType((*ListMetaDataKeysReq)(nil), "ListMetaDataKeysReq")
	proto.RegisterType((*AddInstanceMetaDataReq)(nil), "AddInstanceMetaDataReq")
	proto.RegisterType((*AddInstanceMetaDataValueReq)(nil), "AddInstanceMetaDataValueReq")
	proto.RegisterType((*InstanceMetaDataKeyReq)(nil), "InstanceMetaDataKeyReq")
	proto.RegisterType((*InstanceMetaDataKeyValueReq)(nil), "InstanceMetaDataKeyValueReq")
	proto.RegisterType((*AddInstanceActionLabelMetaDataReq)(nil), "AddInstanceActionLabelMetaDataReq")
	proto.RegisterType((*InstanceActionLabelMetaDataKeyReq)(nil), "InstanceActionLabelMetaDataKeyReq")
	proto.RegisterType((*InstanceActionLabelMetaDataReq)(nil), "InstanceActionLabelMetaDataReq")
	proto.RegisterType((*AddInstanceCellMetaDataReq)(nil), "AddInstanceCellMetaDataReq")
	proto.RegisterType((*InstanceCellMetaDataKeyReq)(nil), "InstanceCellMetaDataKeyReq")
	proto.RegisterType((*InstanceCellMetaDataReq)(nil), "InstanceCellMetaDataReq")
	proto.RegisterType((*StatsMetaDataKeyUsageReq)(nil), "StatsMetaDataKeyUsageReq")
	proto.RegisterType((*StatsMetaDataKeyValueUsageReq)(nil), "StatsMetaDataKeyValueUsageReq")
	proto.RegisterType((*ListMetaDataKeyLinksReq)(nil), "ListMetaDataKeyLinksReq")
	proto.RegisterType((*AddInstanceActionLabelMetaDataValueReq)(nil), "AddInstanceActionLabelMetaDataValueReq")
	proto.RegisterType((*InstanceActionLabelMetaDataValueReq)(nil), "InstanceActionLabelMetaDataValueReq")
	proto.RegisterType((*InstanceCellMetaDataKeyValueReq)(nil), "InstanceCellMetaDataKeyValueReq")
	proto.RegisterType((*AddInstanceCellMetaDataValueReq)(nil), "AddInstanceCellMetaDataValueReq")
	proto.RegisterType((*MetaDataValue)(nil), "MetaDataValue")
	proto.RegisterType((*InstanceElement)(nil), "InstanceElement")
	proto.RegisterType((*ValueSpec)(nil), "ValueSpec")
	proto.RegisterType((*InstanceElementMetaData)(nil), "InstanceElementMetaData")
	proto.RegisterType((*MetaDataKeyValue)(nil), "MetaDataKeyValue")
	proto.RegisterType((*DataTypeFormat)(nil), "DataTypeFormat")
	proto.RegisterType((*InstanceUpdateElementCell)(nil), "InstanceUpdateElementCell")
	proto.RegisterType((*EmptyRes)(nil), "EmptyRes")
	proto.RegisterType((*LoginRes)(nil), "LoginRes")
	proto.RegisterType((*ServiceTokenRes)(nil), "ServiceTokenRes")
	proto.RegisterType((*UserRes)(nil), "UserRes")
	proto.RegisterType((*ListUsersRes)(nil), "ListUsersRes")
	proto.RegisterType((*ActionNameArrayRes)(nil), "ActionNameArrayRes")
	proto.RegisterType((*LabelRes)(nil), "LabelRes")
	proto.RegisterType((*InstanceIDRes)(nil), "InstanceIDRes")
	proto.RegisterType((*StreamInstanceIDRes)(nil), "StreamInstanceIDRes")
	proto.RegisterType((*InstanceRes)(nil), "InstanceRes")
	proto.RegisterType((*ActionInstanceRes)(nil), "ActionInstanceRes")
	proto.RegisterType((*CountRes)(nil), "CountRes")
	proto.RegisterType((*UserCountRes)(nil), "UserCountRes")
	proto.RegisterType((*DQLRes)(nil), "DQLRes")
	proto.RegisterType((*ListRolesRes)(nil), "ListRolesRes")
	proto.RegisterType((*ListUserRolesRes)(nil), "ListUserRolesRes")
	proto.RegisterType((*ReadActionInstancesRes)(nil), "ReadActionInstancesRes")
	proto.RegisterType((*MetaDataKeyRes)(nil), "MetaDataKeyRes")
	proto.RegisterType((*MetaDataKeyArrayRes)(nil), "MetaDataKeyArrayRes")
	proto.RegisterType((*ListInstanceMetaDataRes)(nil), "ListInstanceMetaDataRes")
	proto.RegisterType((*GetInstanceMetaDataKeyRes)(nil), "GetInstanceMetaDataKeyRes")
	proto.RegisterType((*ListInstanceCellMetaDataRes)(nil), "ListInstanceCellMetaDataRes")
	proto.RegisterType((*GetInstanceCellMetaDataKeyRes)(nil), "GetInstanceCellMetaDataKeyRes")
	proto.RegisterType((*StatsMetaUsageRes)(nil), "StatsMetaUsageRes")
	proto.RegisterType((*QueryResultRes)(nil), "QueryResultRes")
	proto.RegisterType((*CheckPasswordRes)(nil), "CheckPasswordRes")
	proto.RegisterType((*DynizerRole)(nil), "DynizerRole")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*DDLResult)(nil), "DDLResult")
	proto.RegisterType((*SelectDQLResult)(nil), "SelectDQLResult")
	proto.RegisterType((*ResultLabel)(nil), "ResultLabel")
	proto.RegisterType((*ResultValueAlternativeMetaDataPosition)(nil), "ResultValueAlternativeMetaDataPosition")
	proto.RegisterType((*ResultRow)(nil), "ResultRow")
	proto.RegisterType((*ActionInstanceRecord)(nil), "ActionInstanceRecord")
	proto.RegisterType((*Action)(nil), "Action")
	proto.RegisterType((*ObjectRef)(nil), "ObjectRef")
	proto.RegisterType((*ActionLabel)(nil), "ActionLabel")
	proto.RegisterType((*MetaDataKey)(nil), "MetaDataKey")
	proto.RegisterType((*MetaDataOut)(nil), "MetaDataOut")
	proto.RegisterType((*MetaDataRecord)(nil), "MetaDataRecord")
	proto.RegisterType((*Window)(nil), "Window")
	proto.RegisterType((*DQLParam)(nil), "DQLParam")
	proto.RegisterType((*SessionID)(nil), "SessionID")
	proto.RegisterType((*ConfigKV)(nil), "ConfigKV")
	proto.RegisterType((*GetDynizerConfigurationRes)(nil), "GetDynizerConfigurationRes")
	proto.RegisterType((*ExportUserActionsReq)(nil), "ExportUserActionsReq")
	proto.RegisterType((*ExportUserActionsRes)(nil), "ExportUserActionsRes")
	proto.RegisterType((*ImportUserActionsReq)(nil), "ImportUserActionsReq")
	proto.RegisterType((*ActionLabelLinkRes)(nil), "ActionLabelLinkRes")
	proto.RegisterType((*ActionLabelSelector)(nil), "ActionLabelSelector")
	proto.RegisterType((*ActionLabelLinkPair)(nil), "ActionLabelLinkPair")
	proto.RegisterType((*ActionLabelLinkReq)(nil), "ActionLabelLinkReq")
	proto.RegisterType((*ActionLabelLinkNameReq)(nil), "ActionLabelLinkNameReq")
	proto.RegisterType((*VersionRes)(nil), "VersionRes")
	proto.RegisterType((*InstanceFilter)(nil), "InstanceFilter")
	proto.RegisterType((*QueryDataElementsReq)(nil), "QueryDataElementsReq")
	proto.RegisterType((*GetTopNDataElementsReq)(nil), "GetTopNDataElementsReq")
	proto.RegisterType((*GetTopNDataElementsRes)(nil), "GetTopNDataElementsRes")
	proto.RegisterType((*PlotRes)(nil), "PlotRes")
	proto.RegisterType((*FilterQueryReq)(nil), "FilterQueryReq")
	proto.RegisterType((*FilteredPlotReq)(nil), "FilteredPlotReq")
	proto.RegisterType((*ComponentTypeUsage)(nil), "ComponentTypeUsage")
	proto.RegisterType((*TopNDataElement)(nil), "TopNDataElement")
	proto.RegisterType((*DataElement)(nil), "DataElement")
	proto.RegisterType((*QueryDataElementsRes)(nil), "QueryDataElementsRes")
	proto.RegisterType((*ReIndexReq)(nil), "ReIndexReq")
	proto.RegisterType((*BulkInstanceInsertStartReq)(nil), "BulkInstanceInsertStartReq")
	proto.RegisterType((*BuilInstanceInsertRes)(nil), "BuilInstanceInsertRes")
	proto.RegisterType((*BulkInstanceInsertDataReq)(nil), "BulkInstanceInsertDataReq")
	proto.RegisterType((*BulkInstanceInsertCloseReq)(nil), "BulkInstanceInsertCloseReq")
}

func init() { proto.RegisterFile("dynizer.proto", fileDescriptor_4d87533e5f8a8bdf) }

var fileDescriptor_4d87533e5f8a8bdf = []byte{
	// 20776 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xfd, 0x79, 0x78, 0x1d, 0xc7,
	0x75, 0x20, 0x8a, 0xab, 0x2e, 0x16, 0x12, 0x05, 0x10, 0x00, 0x9b, 0x3b, 0xb4, 0x35, 0x5b, 0x1b,
	0x79, 0x05, 0x34, 0xc8, 0xd6, 0x42, 0x09, 0x5a, 0x0b, 0x0b, 0x49, 0x48, 0x5c, 0x2f, 0x41, 0x51,
	0xb2, 0x2c, 0xc3, 0x8d, 0x7b, 0x0b, 0x40, 0x8b, 0x7d, 0xbb, 0x2f, 0xbb, 0xfb, 0x02, 0x84, 0x14,
	0xc6, 0x8b, 0x1c, 0xc5, 0x8e, 0x23, 0x2f, 0xed, 0xd8, 0x71, 0x6c, 0x79, 0xb2, 0xd8, 0xa3, 0x91,
	0xed, 0x78, 0xec, 0xc4, 0x3f, 0x3b, 0x13, 0x67, 0x9c, 0x6d, 0xec, 0x89, 0xed, 0x49, 0x3c, 0x36,
	0xe2, 0x4c, 0x3c, 0x99, 0x4c, 0xe6, 0xfb, 0x39, 0x93, 0x8c, 0x5f, 0x9e, 0x93, 0x97, 0x65, 0xde,
	0xe4, 0x7d, 0xef, 0xbd, 0x24, 0xef, 0xab, 0xb5, 0xab, 0x97, 0x8b, 0x85, 0x8b, 0x24, 0x3a, 0xd2,
	0x1f, 0x22, 0x6e, 0x77, 0x57, 0xd5, 0xa9, 0x73, 0x4e, 0x9d, 0x73, 0xea, 0xd4, 0xa9, 0x73, 0xe0,
	0xa6, 0xda, 0x92, 0xe7, 0x3c, 0x83, 0x03, 0xb3, 0x11, 0xf8, 0x91, 0x3f, 0x70, 0xdd, 0x9c, 0xef,
	0xcf, 0xb9, 0x78, 0xd8, 0x6e, 0x38, 0xc3, 0xb6, 0xe7, 0xf9, 0x91, 0x1d, 0x39, 0xbe, 0x17, 0xf2,
	0xb7, 0xec, 0x9f, 0xea, 0xd0, 0x1c, 0xf6, 0x86, 0xfc, 0x06, 0xf6, 0xec, 0x86, 0xb3, 0x60, 0x0d,
	0xfb, 0x0d, 0xfa, 0x4d, 0xfe, 0x7b, 0xe3, 0x9d, 0x00, 0x76, 0x4d, 0x04, 0x81, 0x1f, 0x1c, 0xc5,
	0x91, 0xad, 0xed, 0x86, 0x3d, 0x7c, 0xb0, 0xe9, 0xaa, 0x5f, 0xc3, 0x3b, 0x81, 0x0e, 0xf6, 0xb4,
	0x55, 0xba, 0xf9, 0xb3, 0x31, 0xbf, 0x86, 0x35, 0x0d, 0xb6, 0x37, 0x9b, 0x4e, 0x6d, 0x67, 0x49,
	0x07, 0x7b, 0xba, 0x2a, 0xf4, 0x6f, 0xed, 0x16, 0xd8, 0xeb, 0x07, 0xce, 0x9c, 0xe3, 0xd9, 0xee,
	0x34, 0x26, 0x9d, 0xed, 0x6c, 0xa3, 0x6f, 0x37, 0x89, 0xa7, 0x74, 0x04, 0xed, 0x7a, 0xd8, 0x6e,
	0x07, 0x73, 0xe1, 0xce, 0x76, 0xbd, 0x6d, 0x4f, 0xb7, 0xd5, 0x65, 0xd2, 0xa7, 0x28, 0x98, 0xab,
	0xd0, 0xc7, 0xc6, 0xa7, 0x00, 0xdc, 0x28, 0x1e, 0x69, 0xbb, 0xe0, 0x06, 0xc7, 0x8b, 0xa6, 0xed,
	0x60, 0x8e, 0x01, 0x71, 0xf8, 0x9a, 0x4a, 0xa7, 0xe3, 0x45, 0xe4, 0xd5, 0xb5, 0x70, 0xe3, 0x8c,
	0xef, 0xbb, 0xf4, 0x1d, 0x81, 0x62, 0xe3, 0xe1, 0x6b, 0x2a, 0x1b, 0xc8, 0x13, 0xf2, 0xf2, 0x46,
	0x08, 0xc3, 0x28, 0x70, 0xbc, 0x39, 0xfa, 0x9a, 0x82, 0x71, 0xf8, 0x9a, 0x4a, 0x17, 0x7b, 0xc6,
	0x3f, 0xa8, 0xf9, 0xcd, 0x19, 0x17, 0xd3, 0x0f, 0xda, 0x75, 0xb0, 0x07, 0x90, 0x0f, 0xd8, 0x33,
	0xf2, 0xc1, 0xf5, 0xb0, 0x6b, 0x66, 0x29, 0xc2, 0x21, 0x7d, 0xdf, 0xa1, 0x83, 0x3d, 0x3d, 0x87,
	0xaf, 0xa9, 0x6c, 0xa4, 0x8f, 0x50, 0x30, 0x37, 0xda, 0x01, 0xdb, 0xec, 0x60, 0xce, 0xf8, 0x5f,
	0x10, 0x6e, 0xa2, 0xc0, 0x56, 0x70, 0xd8, 0xf0, 0xbd, 0x10, 0x6b, 0xff, 0x54, 0x82, 0xed, 0xd1,
	0x52, 0x83, 0x21, 0xad, 0x6b, 0xf4, 0x2f, 0x4a, 0x31, 0xfa, 0xf3, 0x52, 0xb9, 0x0f, 0xe9, 0xa7,
	0x2b, 0x93, 0x7a, 0x80, 0x67, 0x71, 0x80, 0xbd, 0x2a, 0xb6, 0x96, 0x4b, 0x99, 0x27, 0xfa, 0x93,
	0x95, 0x83, 0x63, 0x77, 0xdc, 0x7b, 0xcf, 0xdd, 0x4f, 0xed, 0x99, 0x8f, 0xa2, 0x46, 0x38, 0x32,
	0x3c, 0x1c, 0xf9, 0xbe, 0x1b, 0x9a, 0x0e, 0x8e, 0x66, 0x4d, 0x3f, 0x98, 0x1b, 0x9e, 0x8f, 0xea,
	0xee, 0x70, 0x30, 0x5b, 0x25, 0x1f, 0xed, 0xd5, 0xa3, 0x79, 0x3b, 0xd2, 0x9d, 0x1a, 0xf6, 0x22,
	0x67, 0xd6, 0xc1, 0xa1, 0x1e, 0xcd, 0x63, 0xbd, 0x11, 0xf8, 0x33, 0x2e, 0xae, 0xeb, 0x64, 0x7c,
	0xf3, 0xfe, 0x99, 0xe0, 0xc1, 0xa9, 0x79, 0x27, 0xd4, 0xc3, 0x06, 0xae, 0x3a, 0xb3, 0x4e, 0x95,
	0x12, 0x5c, 0xc7, 0x5e, 0xd5, 0x6f, 0x06, 0xf6, 0x1c, 0x6d, 0x62, 0x47, 0x83, 0xfa, 0xe2, 0x3c,
	0xf6, 0xf4, 0x1a, 0x96, 0x80, 0xd4, 0x06, 0x75, 0x27, 0x22, 0x5d, 0x2d, 0x38, 0x35, 0xac, 0xcf,
	0x37, 0xeb, 0xb6, 0x37, 0x14, 0x60, 0xbb, 0x66, 0xcf, 0xb8, 0x58, 0xaf, 0xf9, 0xd5, 0x66, 0x1d,
	0x7b, 0x8c, 0x79, 0xf4, 0x59, 0x3f, 0xc8, 0x8d, 0xab, 0xef, 0xc1, 0xe6, 0x9c, 0x39, 0xa8, 0x37,
	0x43, 0xc7, 0x9b, 0xd3, 0x0f, 0x4f, 0x1d, 0x3d, 0xa2, 0x3f, 0x79, 0xe6, 0x8e, 0x31, 0xb3, 0x32,
	0x31, 0x36, 0x44, 0x66, 0x70, 0xd7, 0x90, 0xb5, 0x6f, 0xff, 0x9d, 0xfb, 0xf7, 0x59, 0xf7, 0x3c,
	0xb5, 0x97, 0xc2, 0x78, 0x86, 0x8c, 0x1f, 0x11, 0x40, 0xeb, 0xb8, 0x3e, 0x83, 0x03, 0xdd, 0x09,
	0x75, 0xcf, 0x27, 0x10, 0xe0, 0x10, 0x7b, 0x11, 0x81, 0x26, 0xd4, 0x17, 0x6c, 0xb7, 0x89, 0xc9,
	0x1b, 0x3b, 0x0c, 0x9b, 0x75, 0x5c, 0xd3, 0x23, 0x5f, 0x9f, 0xc1, 0xfa, 0x6d, 0xf6, 0x8c, 0xdf,
	0x8c, 0x46, 0x66, 0x5c, 0xdb, 0x3b, 0x7b, 0x9b, 0x59, 0xa1, 0x88, 0xd7, 0xfe, 0xa8, 0x04, 0x3b,
	0x22, 0x27, 0x72, 0x31, 0x63, 0xce, 0xd1, 0x7f, 0x57, 0x8a, 0xd1, 0x6f, 0x94, 0xca, 0x37, 0x84,
	0xcd, 0x7a, 0xdd, 0x0e, 0x96, 0x74, 0xc7, 0x63, 0xb3, 0xd2, 0xe5, 0xac, 0x66, 0xfd, 0xa0, 0x6e,
	0xbd, 0x58, 0x42, 0x7a, 0x38, 0xef, 0x07, 0xd1, 0x60, 0x76, 0xd2, 0xa2, 0xa1, 0x3f, 0x9b, 0xc7,
	0xb2, 0x4e, 0xa6, 0x30, 0x19, 0xe9, 0xe5, 0xf2, 0xa9, 0xc3, 0xc7, 0x4f, 0x1f, 0x19, 0xd7, 0x8f,
	0x1d, 0x9f, 0x2a, 0x97, 0xf5, 0xea, 0xbc, 0xed, 0xcd, 0x61, 0x7d, 0x36, 0xf0, 0xeb, 0xba, 0x5f,
	0xad, 0x36, 0x03, 0x46, 0xe3, 0xc8, 0x57, 0x7f, 0xa5, 0xfb, 0x1b, 0xd4, 0xf1, 0xf9, 0x2a, 0x6e,
	0x44, 0x14, 0xab, 0x8d, 0x66, 0xd0, 0xf0, 0x43, 0x1c, 0x92, 0x6f, 0x5c, 0xbf, 0x6a, 0xbb, 0xce,
	0x33, 0x0c, 0xe5, 0x29, 0xec, 0x36, 0x02, 0xdf, 0xae, 0x46, 0xce, 0x02, 0xd6, 0xab, 0xbe, 0x17,
	0x61, 0x2f, 0xd2, 0x3d, 0x3c, 0xe7, 0x47, 0x0e, 0xfd, 0xf4, 0x3e, 0x3d, 0xc4, 0x8c, 0xab, 0x0e,
	0x58, 0x77, 0xec, 0x1f, 0xd4, 0x4f, 0xe1, 0x2a, 0xed, 0xe1, 0x0e, 0xf3, 0xce, 0x55, 0x59, 0x8c,
	0xb4, 0xb8, 0x29, 0x64, 0x0d, 0x86, 0xee, 0x30, 0xef, 0xdc, 0xbb, 0xb7, 0xc2, 0x50, 0xaa, 0x2d,
	0x03, 0xd8, 0x19, 0x46, 0x76, 0xd4, 0x0c, 0xe9, 0xaa, 0xea, 0x18, 0xfd, 0x55, 0x10, 0xa3, 0x2f,
	0x80, 0x72, 0xff, 0xe1, 0xa9, 0xa9, 0x13, 0x3a, 0x7b, 0xa3, 0x13, 0xa1, 0x61, 0xbd, 0x08, 0xa6,
	0xe6, 0xb1, 0x9e, 0x7d, 0xac, 0xef, 0xc9, 0x43, 0x74, 0xf7, 0xfa, 0xe0, 0xb9, 0x7b, 0xef, 0x5e,
	0x7d, 0x0e, 0x7b, 0x38, 0xb0, 0x23, 0x5c, 0xd3, 0x67, 0x96, 0x28, 0x12, 0x99, 0x88, 0xd1, 0x43,
	0x1c, 0x2c, 0xe0, 0x80, 0x33, 0xa6, 0x13, 0xb6, 0xc6, 0xf6, 0x47, 0x4a, 0xa0, 0xad, 0xc2, 0x67,
	0xa2, 0xbd, 0x0d, 0xc0, 0xce, 0x1a, 0x8e, 0x6c, 0xc7, 0xa5, 0x92, 0xa0, 0x6b, 0xd4, 0x89, 0xd1,
	0x6c, 0xf9, 0xda, 0x0c, 0x97, 0xe0, 0xf3, 0x0d, 0xd7, 0x76, 0x3c, 0x8a, 0x5c, 0xeb, 0x10, 0xca,
	0x72, 0x09, 0x7d, 0xcd, 0xde, 0xca, 0x25, 0x47, 0x08, 0xbe, 0x32, 0x1c, 0x15, 0x3e, 0xb0, 0xf6,
	0x2d, 0x00, 0xbb, 0xe4, 0x1a, 0xa4, 0x02, 0xa7, 0x6b, 0xf4, 0x97, 0x40, 0x8c, 0x3e, 0x03, 0xca,
	0x46, 0xe5, 0xe0, 0x98, 0xee, 0xd9, 0x75, 0xac, 0x3b, 0x5e, 0x18, 0xd9, 0x5e, 0x15, 0x0f, 0xea,
	0xb6, 0x22, 0x39, 0x4e, 0x57, 0x26, 0xad, 0xe7, 0x41, 0x56, 0x9e, 0x14, 0x09, 0x08, 0x09, 0x57,
	0x4b, 0x78, 0x4c, 0xce, 0xcf, 0x75, 0x7b, 0x49, 0xf7, 0x03, 0xfa, 0x0f, 0x59, 0x8c, 0x4b, 0x0e,
	0x76, 0x6b, 0xfa, 0x6c, 0x33, 0x88, 0xe6, 0xc9, 0x0a, 0xf5, 0xc8, 0x8a, 0x61, 0x53, 0x75, 0x66,
	0x53, 0xc2, 0xa3, 0x92, 0x4c, 0x62, 0xe4, 0x0d, 0x31, 0x3a, 0x03, 0x4f, 0x5b, 0xa7, 0xa8, 0x80,
	0xd4, 0xeb, 0x38, 0x0c, 0xed, 0x39, 0xac, 0xcf, 0xd8, 0x21, 0xae, 0xe9, 0xbe, 0x47, 0x47, 0x25,
	0xcc, 0xa0, 0x1f, 0xb8, 0x67, 0xdf, 0x81, 0xd5, 0x59, 0xe0, 0x9e, 0x7d, 0x07, 0xf6, 0x12, 0x4e,
	0xf2, 0x6a, 0x76, 0x50, 0x33, 0xfe, 0x02, 0xc0, 0x8d, 0x47, 0xfc, 0x39, 0xc7, 0xab, 0xe0, 0x73,
	0xda, 0x3e, 0xd8, 0xde, 0x0c, 0x71, 0xc0, 0x45, 0xee, 0x75, 0x31, 0xda, 0x65, 0xed, 0x38, 0xed,
	0x39, 0xe7, 0x9a, 0x98, 0xa1, 0x8d, 0x4f, 0x91, 0x7c, 0x53, 0xa1, 0x5f, 0x6a, 0x2e, 0xdc, 0xd8,
	0xb0, 0xc3, 0x70, 0xd1, 0x0f, 0xb8, 0x0a, 0x1b, 0x3d, 0x11, 0xa3, 0xa3, 0xd6, 0xa3, 0x27, 0x02,
	0x67, 0xc1, 0x8e, 0x30, 0x97, 0x37, 0xbe, 0xe7, 0x2e, 0xe9, 0x67, 0x3d, 0x7f, 0xd1, 0x63, 0x84,
	0x64, 0x5d, 0x0c, 0xea, 0xf3, 0x76, 0x38, 0xaf, 0x2f, 0x3a, 0xae, 0x4b, 0x64, 0x50, 0x75, 0x1e,
	0x57, 0xcf, 0xe2, 0x9a, 0xbe, 0xe8, 0x44, 0xf3, 0xf4, 0x9b, 0xda, 0xcc, 0x10, 0xf9, 0xa0, 0x22,
	0x47, 0x18, 0x79, 0x30, 0x46, 0xf7, 0xc1, 0x7b, 0xad, 0x5b, 0x28, 0xc0, 0x7a, 0x05, 0x9f, 0x6b,
	0xe2, 0x30, 0x62, 0x0d, 0x48, 0x87, 0xba, 0xed, 0xd5, 0x74, 0xf1, 0xb1, 0xb9, 0x0c, 0x28, 0x88,
	0xcb, 0x40, 0xb6, 0x37, 0xbe, 0x08, 0x60, 0xdf, 0x29, 0x1c, 0x2c, 0x38, 0x55, 0x2c, 0xe7, 0x7c,
	0x10, 0x76, 0x44, 0xfe, 0x59, 0xec, 0xf1, 0x49, 0xef, 0x8b, 0xd1, 0x90, 0x75, 0xfb, 0x24, 0x27,
	0x33, 0xfb, 0x56, 0xa7, 0x1f, 0xe8, 0x8b, 0xf3, 0x4e, 0x35, 0x07, 0xae, 0x59, 0x61, 0xcd, 0x47,
	0x9e, 0x8c, 0xd1, 0xe3, 0xf0, 0x31, 0xeb, 0x08, 0xef, 0x5f, 0x67, 0x30, 0xce, 0xfb, 0x6e, 0x2d,
	0xd4, 0xed, 0x4c, 0x4f, 0x42, 0xde, 0xf3, 0x55, 0x16, 0xf9, 0xac, 0x37, 0x0a, 0xbf, 0xe3, 0x35,
	0x70, 0x10, 0xfa, 0x9e, 0x1d, 0x61, 0x73, 0x19, 0xb0, 0xce, 0x8d, 0x2f, 0x01, 0xb8, 0x71, 0x8a,
	0xfc, 0x45, 0x20, 0xb6, 0xd3, 0x10, 0x3f, 0x1a, 0xa3, 0xc3, 0xd6, 0x41, 0x0e, 0xf1, 0x93, 0x8f,
	0x9c, 0x3a, 0x7e, 0x4c, 0x3f, 0x83, 0x67, 0x74, 0xfa, 0xb9, 0xbe, 0xe7, 0x91, 0x33, 0x53, 0x7b,
	0x13, 0x9e, 0x78, 0x7a, 0x31, 0x32, 0x1d, 0x7f, 0xef, 0x60, 0x66, 0x2e, 0x0b, 0x38, 0x20, 0xbc,
	0x9d, 0x4c, 0x86, 0xf4, 0x09, 0x0f, 0x5a, 0xf7, 0xb3, 0x4e, 0x04, 0xa2, 0x93, 0xc9, 0x54, 0x9b,
	0x81, 0x13, 0x2d, 0xf1, 0xd9, 0x70, 0x92, 0x66, 0x26, 0x93, 0x00, 0xff, 0xcb, 0x6d, 0x10, 0xa2,
	0x5a, 0xed, 0x34, 0xe1, 0x1a, 0x7c, 0x4e, 0xbb, 0x2f, 0xc5, 0x64, 0xb7, 0xc5, 0xe8, 0x66, 0xcb,
	0x38, 0xa6, 0x70, 0x97, 0x87, 0x17, 0x19, 0x35, 0x99, 0x6a, 0xaa, 0x06, 0x98, 0xc8, 0x27, 0xce,
	0x6f, 0x6f, 0xca, 0xf1, 0xdb, 0x68, 0x8c, 0x1e, 0xb2, 0x1e, 0x20, 0x22, 0x52, 0xbc, 0xd0, 0x99,
	0x75, 0x92, 0x99, 0xa3, 0x04, 0x9a, 0xf0, 0x14, 0xae, 0x51, 0x5c, 0x87, 0x91, 0x1f, 0x90, 0x59,
	0xcb, 0x3e, 0xb5, 0xc3, 0xb0, 0x23, 0xf0, 0x5d, 0x4c, 0x84, 0x32, 0x31, 0xaa, 0x7a, 0xcc, 0x71,
	0x66, 0xab, 0x55, 0x7c, 0x17, 0x8f, 0xde, 0x1c, 0xa3, 0xdd, 0xd6, 0x8d, 0xc8, 0x75, 0x29, 0x9c,
	0xf4, 0x3b, 0x49, 0x4a, 0x01, 0xb5, 0x59, 0x61, 0x1d, 0x68, 0x8f, 0xc3, 0x8d, 0x35, 0x27, 0x24,
	0x12, 0xad, 0x46, 0x85, 0xe1, 0xc6, 0xd1, 0xfb, 0x63, 0x74, 0xaf, 0x75, 0x60, 0x72, 0x56, 0x0f,
	0x71, 0x44, 0x91, 0x16, 0x34, 0xf1, 0x60, 0x7a, 0xca, 0x14, 0x58, 0x22, 0x27, 0x66, 0xb0, 0x4e,
	0x85, 0x61, 0xe4, 0xeb, 0x2e, 0x61, 0x24, 0xb3, 0x22, 0x7b, 0x1b, 0xa9, 0xc6, 0xe8, 0xcd, 0xf0,
	0x4d, 0xd6, 0x23, 0x87, 0x19, 0x39, 0x5c, 0x97, 0xc8, 0x9c, 0x06, 0x0e, 0x22, 0x22, 0x9d, 0xd8,
	0xa4, 0xed, 0x80, 0x74, 0x8a, 0x6b, 0x4c, 0xc1, 0x33, 0x14, 0xea, 0x76, 0x32, 0x8e, 0xc3, 0xa4,
	0x06, 0x9f, 0x5c, 0xd1, 0x52, 0xf9, 0x01, 0x80, 0xdd, 0x94, 0x62, 0xbe, 0x8b, 0x2f, 0x4e, 0x34,
	0x3c, 0x0e, 0xdb, 0x09, 0x26, 0x28, 0x99, 0xb2, 0x98, 0xbc, 0x3b, 0x46, 0x77, 0x58, 0xfb, 0x55,
	0xaa, 0x93, 0x4f, 0x39, 0xf0, 0x4e, 0xc8, 0x49, 0x6f, 0xd7, 0xc8, 0x04, 0xfc, 0x40, 0x0f, 0x70,
	0xdd, 0x5f, 0x20, 0x84, 0xa2, 0x3d, 0x8e, 0x9c, 0x8c, 0xd1, 0x31, 0x78, 0xc4, 0xba, 0x5f, 0xf0,
	0x25, 0xa1, 0x81, 0x5d, 0xab, 0x11, 0x9a, 0x8b, 0x8f, 0xc9, 0xdf, 0x36, 0xeb, 0x54, 0x50, 0x88,
	0x4e, 0x9c, 0x0b, 0x6e, 0x5c, 0x93, 0x53, 0xa6, 0x5d, 0x1a, 0xcf, 0xc2, 0x0d, 0x82, 0x3f, 0xd7,
	0x3d, 0x53, 0x21, 0x96, 0xf6, 0xa9, 0xf0, 0x54, 0x6d, 0xd7, 0x15, 0xd4, 0x20, 0x94, 0xd0, 0x6d,
	0x2e, 0xa2, 0x42, 0xdd, 0xf6, 0xc8, 0x22, 0x6f, 0x46, 0x02, 0xed, 0x46, 0x0c, 0x60, 0xff, 0x18,
	0x59, 0x33, 0x27, 0x38, 0xf6, 0x09, 0x18, 0xe3, 0x0a, 0xa7, 0x33, 0x50, 0xf6, 0xc4, 0xe8, 0x16,
	0xeb, 0xa6, 0x48, 0xe5, 0xf4, 0x0c, 0xc2, 0xb8, 0x4c, 0x52, 0x24, 0xe6, 0x3d, 0x31, 0xba, 0x0b,
	0xde, 0x61, 0xdd, 0x2a, 0x40, 0xa3, 0x5f, 0x30, 0xe4, 0x34, 0x7c, 0x62, 0xe9, 0x38, 0xb6, 0xab,
	0x8a, 0xcc, 0x84, 0x01, 0x7e, 0x12, 0xc0, 0xae, 0x33, 0x8e, 0x57, 0xf3, 0x17, 0x99, 0x94, 0xec,
	0x5c, 0xa4, 0x3f, 0x28, 0x2c, 0xdd, 0xd6, 0x06, 0x93, 0xbd, 0x1b, 0xbd, 0x25, 0x46, 0x86, 0xa5,
	0x3f, 0x8a, 0x71, 0x23, 0xd4, 0x5d, 0xa7, 0xee, 0x44, 0x74, 0x61, 0xf9, 0xb3, 0xb3, 0x8c, 0xc9,
	0xe7, 0x30, 0x51, 0x74, 0x66, 0x85, 0xb7, 0x1e, 0x39, 0x10, 0xa3, 0x3b, 0xa1, 0x45, 0x50, 0xd5,
	0x3c, 0xb7, 0x02, 0xaa, 0xd8, 0xd7, 0xc4, 0x4a, 0xe5, 0xa8, 0x32, 0xbe, 0xd5, 0x06, 0x77, 0x1e,
	0x71, 0xc2, 0x08, 0x51, 0xdb, 0x85, 0x70, 0x4e, 0x98, 0x40, 0x77, 0x02, 0x6e, 0xb6, 0xe9, 0xf3,
	0x69, 0x62, 0x4b, 0x4e, 0xbb, 0xf6, 0x0c, 0x76, 0x39, 0xd2, 0xd8, 0x9a, 0x25, 0xe2, 0x41, 0x25,
	0x5e, 0xb9, 0xcc, 0xfa, 0x99, 0x5a, 0x6a, 0xe0, 0x72, 0xd9, 0xac, 0xf4, 0xd9, 0xf2, 0xe7, 0x11,
	0xd2, 0x58, 0x99, 0x6f, 0xe9, 0x52, 0xe6, 0xab, 0xbd, 0x11, 0x76, 0xfb, 0x41, 0x0d, 0x07, 0xd3,
	0xb3, 0x44, 0xf1, 0x53, 0x53, 0xaf, 0xd7, 0xea, 0x36, 0x8f, 0x93, 0x67, 0x07, 0xc9, 0xa3, 0x51,
	0x33, 0x46, 0xb7, 0x5b, 0x7b, 0x47, 0x97, 0x38, 0x02, 0xe8, 0x77, 0xd4, 0xbe, 0x25, 0x9f, 0x48,
	0x40, 0xcb, 0x65, 0x0a, 0x7f, 0x68, 0x56, 0xa0, 0x2f, 0xdb, 0x6a, 0xb3, 0xb0, 0x8f, 0xf5, 0x5e,
	0x73, 0x02, 0x66, 0xd4, 0x51, 0x51, 0xd3, 0x6b, 0x41, 0xf3, 0x94, 0x1f, 0x44, 0x74, 0x94, 0xd1,
	0xfd, 0x31, 0x32, 0xad, 0x41, 0xfa, 0x37, 0x59, 0xf7, 0x6c, 0x18, 0x2a, 0x57, 0xec, 0x5a, 0x0a,
	0x19, 0xc9, 0x18, 0xbd, 0xb4, 0xd7, 0x71, 0xd1, 0xe9, 0xc8, 0x54, 0x8c, 0x4e, 0xc2, 0xe3, 0xd6,
	0xbd, 0x2a, 0xd5, 0x44, 0xab, 0xb0, 0x5c, 0xe6, 0x7d, 0x86, 0xcd, 0x46, 0xc3, 0x0f, 0xa2, 0x22,
	0xf2, 0x2d, 0x83, 0x3c, 0x81, 0x8c, 0x0f, 0x96, 0xa0, 0x76, 0x0a, 0x47, 0x64, 0xdd, 0xa9, 0x8c,
	0x7f, 0x3a, 0xb5, 0xfe, 0x50, 0x8c, 0x1e, 0xb4, 0xee, 0x67, 0xa2, 0x2e, 0x9a, 0xcf, 0x2f, 0x41,
	0x31, 0x1f, 0x2e, 0x45, 0xe5, 0xca, 0x20, 0xfb, 0x35, 0x4c, 0x21, 0xe5, 0xe2, 0xc8, 0x81, 0x3d,
	0x1e, 0x5e, 0x9c, 0xce, 0x68, 0x8f, 0x83, 0x31, 0x1a, 0xb3, 0xd0, 0x54, 0xb6, 0xf5, 0xba, 0x35,
	0x48, 0xb7, 0x87, 0x17, 0xc5, 0x24, 0x46, 0x1e, 0x88, 0xd1, 0x08, 0xbc, 0xc7, 0xd2, 0x4f, 0xe1,
	0x88, 0x2f, 0xfb, 0x30, 0xe9, 0x9a, 0x09, 0x00, 0xbb, 0x56, 0x77, 0x3c, 0x29, 0x83, 0x52, 0x90,
	0x19, 0xdf, 0x2e, 0xc1, 0xcd, 0x63, 0x74, 0xdf, 0xa3, 0xa2, 0xe5, 0x19, 0xd8, 0xe3, 0xbb, 0xb5,
	0xe9, 0x8c, 0x4c, 0x38, 0x13, 0xa3, 0x29, 0xab, 0x42, 0xe0, 0xf7, 0xdd, 0xda, 0x45, 0xc0, 0xef,
	0xd7, 0x1b, 0x76, 0xa0, 0x1a, 0x5d, 0x72, 0x42, 0xbe, 0x5b, 0x13, 0xc3, 0xbf, 0x92, 0xb8, 0x3b,
	0x1d, 0xa3, 0x0a, 0x3c, 0x91, 0x96, 0xa5, 0xb6, 0x27, 0x0d, 0x02, 0xbe, 0x1f, 0x74, 0xa2, 0xdb,
	0x42, 0x9d, 0x98, 0x93, 0x8a, 0xe8, 0x4a, 0xa1, 0x27, 0x8b, 0xd3, 0xaf, 0x02, 0xa8, 0x51, 0x11,
	0x9b, 0xc8, 0x0f, 0x82, 0x54, 0x1f, 0x76, 0x73, 0xbe, 0x24, 0x7c, 0xc5, 0x71, 0x7a, 0x2c, 0x46,
	0x8f, 0x5a, 0x93, 0x53, 0x14, 0x19, 0xca, 0x54, 0x9c, 0x50, 0x9a, 0xa8, 0xce, 0x2c, 0xd9, 0xda,
	0x57, 0x6d, 0x8f, 0x4c, 0xad, 0x49, 0xcc, 0x70, 0x42, 0x55, 0x62, 0xec, 0x3a, 0xb5, 0xec, 0x72,
	0x32, 0x2b, 0xd0, 0x96, 0x63, 0x0a, 0x55, 0xb1, 0x97, 0x3a, 0x14, 0x9c, 0x90, 0x35, 0x56, 0xec,
	0xbf, 0x5c, 0xeb, 0x65, 0xa0, 0x42, 0x68, 0x7c, 0xb8, 0x13, 0xf6, 0x8d, 0x51, 0x75, 0xce, 0x3e,
	0x23, 0x93, 0xf8, 0x28, 0x28, 0x9a, 0xc5, 0x33, 0x31, 0x5a, 0xb4, 0x9a, 0x64, 0x16, 0x4d, 0x45,
	0x79, 0x09, 0x65, 0x98, 0x0c, 0x43, 0x37, 0x2a, 0xa7, 0x43, 0x4c, 0x1f, 0x67, 0x50, 0x34, 0x48,
	0x65, 0x33, 0x81, 0x8f, 0x5a, 0x88, 0x4b, 0x72, 0x05, 0x0e, 0x52, 0x86, 0xf1, 0x9b, 0x91, 0x1e,
	0x05, 0x4b, 0x04, 0x45, 0x89, 0x95, 0xe1, 0x44, 0xa9, 0x19, 0x6b, 0xff, 0x00, 0xe0, 0x26, 0x67,
	0x76, 0xda, 0xf3, 0xa3, 0x69, 0x7c, 0xde, 0x09, 0xa3, 0x90, 0x39, 0x99, 0x46, 0xbf, 0x0b, 0x62,
	0xf4, 0x1d, 0x60, 0x7d, 0x1b, 0x38, 0x29, 0x83, 0x48, 0x1f, 0x7a, 0x50, 0x3f, 0x76, 0x5c, 0x9f,
	0xa8, 0x54, 0x8e, 0x57, 0x08, 0x82, 0x02, 0x1c, 0x35, 0x03, 0x8f, 0xe1, 0xdc, 0x56, 0xb1, 0xc3,
	0xf7, 0xab, 0xdc, 0xbf, 0x52, 0x63, 0xd3, 0xb3, 0x5d, 0xb2, 0x8d, 0x5c, 0xd2, 0xd9, 0x48, 0xc2,
	0xcc, 0x09, 0x97, 0xc2, 0x88, 0xef, 0xc8, 0x90, 0xb7, 0xa4, 0xb3, 0x2e, 0xa8, 0x9c, 0x0f, 0x93,
	0xf6, 0xc4, 0x64, 0x9a, 0x3c, 0x74, 0xec, 0x78, 0x65, 0x62, 0x9c, 0xb9, 0x72, 0x52, 0x40, 0xeb,
	0x0f, 0x3c, 0xc0, 0xc0, 0x23, 0x8c, 0x9b, 0x11, 0x9a, 0xa9, 0x41, 0x29, 0x43, 0x3b, 0xb3, 0xc7,
	0xfc, 0x68, 0x82, 0x36, 0xd4, 0xde, 0x03, 0xe0, 0x26, 0x4e, 0x1d, 0x2a, 0xf6, 0x12, 0xd3, 0x52,
	0x81, 0x63, 0x94, 0xec, 0x1e, 0xac, 0xc7, 0x28, 0x57, 0xd8, 0xae, 0x4b, 0x64, 0x67, 0x82, 0x51,
	0x75, 0x38, 0x06, 0x75, 0xb9, 0xac, 0xda, 0x9d, 0xee, 0x92, 0x30, 0x92, 0x55, 0xa8, 0x1c, 0x4f,
	0xf7, 0x3d, 0xac, 0xcf, 0xf9, 0x66, 0xa5, 0xc7, 0x56, 0xda, 0x8e, 0xfc, 0x01, 0x88, 0xd1, 0xb7,
	0x01, 0xfc, 0x26, 0xb0, 0xbe, 0x0c, 0x72, 0x6c, 0xc8, 0x2d, 0x45, 0x2f, 0xcb, 0x20, 0xc4, 0x6a,
	0x6d, 0x36, 0x1a, 0xae, 0xa3, 0x0c, 0x22, 0x61, 0xe1, 0x0b, 0x81, 0x98, 0x6b, 0x54, 0xe6, 0x2f,
	0x62, 0xd7, 0xe5, 0x6e, 0x33, 0xac, 0x97, 0x53, 0x78, 0x2c, 0xeb, 0xb3, 0xae, 0x3d, 0x27, 0xe6,
	0xc8, 0x49, 0x4f, 0x0c, 0xde, 0xc8, 0xd7, 0x03, 0xdb, 0x09, 0xe9, 0xd8, 0xd4, 0xe7, 0x49, 0x5e,
	0xae, 0x84, 0xe8, 0x30, 0xbb, 0x34, 0x74, 0x08, 0x13, 0xce, 0xd5, 0x34, 0xd8, 0x9e, 0x2c, 0x86,
	0x0a, 0xfd, 0xdb, 0xf8, 0xb1, 0x36, 0xd8, 0x77, 0xba, 0x51, 0x4b, 0x2d, 0x9e, 0x37, 0x16, 0xad,
	0x9d, 0xfb, 0x62, 0x74, 0x8f, 0x75, 0x37, 0x81, 0x9e, 0xed, 0xee, 0xa3, 0x8c, 0xf1, 0x40, 0x54,
	0x96, 0x2d, 0xc1, 0x62, 0xb6, 0x57, 0x80, 0xc9, 0x37, 0xb5, 0x34, 0xf3, 0x7f, 0x13, 0xc0, 0x3e,
	0x22, 0x87, 0xd4, 0x21, 0x98, 0x41, 0xd1, 0x6d, 0x26, 0xc0, 0x8e, 0x7e, 0x18, 0xc4, 0xe8, 0xa7,
	0x80, 0xf5, 0x7e, 0x20, 0x84, 0x69, 0x91, 0xad, 0xc2, 0x29, 0x21, 0x4d, 0x19, 0x62, 0x2a, 0x09,
	0xc3, 0x8f, 0x2d, 0xf1, 0x2b, 0xb1, 0x94, 0x37, 0x79, 0x78, 0x31, 0xe9, 0x65, 0x64, 0x2c, 0x46,
	0x0f, 0xc3, 0x07, 0xad, 0xeb, 0xe8, 0x28, 0x3e, 0x9f, 0x74, 0x86, 0x5f, 0xd2, 0x74, 0x59, 0x06,
	0x59, 0x0c, 0x18, 0xbf, 0xd7, 0x06, 0xfb, 0xc6, 0xb1, 0x8b, 0x55, 0x3a, 0x9c, 0x29, 0xa2, 0x03,
	0xdb, 0x26, 0xb4, 0xa6, 0x43, 0x86, 0x04, 0x35, 0xda, 0x67, 0x86, 0x04, 0x2f, 0x97, 0xe0, 0x86,
	0xaa, 0x1d, 0x56, 0xed, 0x1a, 0xe6, 0x92, 0xe7, 0x85, 0x52, 0x8c, 0xde, 0x55, 0xb2, 0x9e, 0x2f,
	0x51, 0xee, 0x57, 0xf9, 0x31, 0xf2, 0xf5, 0xba, 0x1d, 0x9c, 0xa5, 0x7b, 0x2a, 0x3b, 0x0c, 0xfd,
	0xaa, 0xc3, 0x57, 0xd5, 0x24, 0xf7, 0x17, 0x11, 0x6e, 0xb7, 0x43, 0x39, 0x10, 0x5f, 0x19, 0xbc,
	0x7b, 0x22, 0x23, 0xee, 0x0f, 0x1b, 0xb6, 0xa7, 0x87, 0xd1, 0x92, 0x8b, 0x1f, 0x30, 0xaa, 0xbe,
	0xeb, 0x07, 0x23, 0x33, 0x6e, 0x13, 0x1b, 0x0f, 0xce, 0xda, 0x6e, 0x88, 0xef, 0x1f, 0x26, 0xaf,
	0x1f, 0x54, 0x78, 0x3c, 0x64, 0x5c, 0x5f, 0x63, 0xdc, 0xee, 0x84, 0xea, 0xa4, 0xe6, 0xed, 0x30,
	0x3d, 0x34, 0x1d, 0x4f, 0xf9, 0x80, 0x2a, 0x6d, 0xcf, 0xcf, 0xc0, 0xc7, 0x57, 0x23, 0x87, 0x91,
	0xbc, 0xaf, 0xdb, 0x51, 0x44, 0x2d, 0x25, 0x3b, 0xe2, 0x0e, 0x19, 0x01, 0xf1, 0xbc, 0x1d, 0x9a,
	0x15, 0x81, 0x9e, 0x11, 0x82, 0x6e, 0xb8, 0xdf, 0xda, 0x3d, 0xe5, 0xf3, 0xd6, 0x14, 0x50, 0xb2,
	0xd8, 0x08, 0x5f, 0xb4, 0xa4, 0x30, 0xd9, 0xbf, 0x74, 0x25, 0x94, 0x44, 0x45, 0x94, 0xd4, 0x63,
	0x74, 0xbd, 0x75, 0x6d, 0x2b, 0x33, 0x9c, 0x98, 0xe0, 0xaa, 0x96, 0x24, 0x7b, 0x7a, 0xf8, 0x80,
	0x35, 0x74, 0x9a, 0x8b, 0x25, 0x6a, 0xaa, 0xaa, 0xce, 0x32, 0xea, 0xae, 0x5e, 0x91, 0xed, 0x8c,
	0xb7, 0x2a, 0x40, 0x85, 0xda, 0x83, 0xb0, 0x93, 0xbd, 0x94, 0xfb, 0x17, 0xf6, 0x6e, 0xf4, 0xfa,
	0x18, 0x0d, 0x58, 0x3b, 0x29, 0x27, 0x70, 0xf7, 0x86, 0xda, 0x69, 0x85, 0xb7, 0x1a, 0xb9, 0x23,
	0x46, 0xfb, 0xa0, 0x69, 0xdd, 0x24, 0x8e, 0x27, 0xb8, 0x4d, 0x50, 0xd0, 0xc4, 0x5c, 0x06, 0xbc,
	0x91, 0xf1, 0x6f, 0xda, 0xe0, 0x16, 0x55, 0x59, 0x93, 0xed, 0x05, 0xc1, 0xd0, 0xe3, 0xad, 0xb7,
	0x2b, 0x83, 0x31, 0xda, 0x6b, 0xdd, 0xb6, 0x9a, 0xd6, 0x6e, 0xb9, 0x6d, 0xf9, 0x50, 0x0b, 0x65,
	0x1b, 0xc4, 0xc8, 0xb7, 0xea, 0x17, 0xa3, 0x69, 0xd9, 0x50, 0x17, 0xa1, 0x6d, 0x53, 0x5a, 0x70,
	0xe4, 0x33, 0x20, 0x46, 0x9f, 0x04, 0xf0, 0x25, 0x60, 0xbd, 0x77, 0x0d, 0x4a, 0x87, 0xcf, 0xef,
	0x72, 0xab, 0x10, 0x3e, 0x97, 0x9c, 0x1a, 0x29, 0xd8, 0x9b, 0xdc, 0x06, 0xfb, 0x50, 0x06, 0xb7,
	0x5b, 0x61, 0x87, 0x42, 0xa9, 0x0a, 0xfb, 0x61, 0xfc, 0x69, 0x09, 0x6e, 0x51, 0x75, 0x8a, 0xa0,
	0xf1, 0x6c, 0x6b, 0x1a, 0x8f, 0xc4, 0xe8, 0x80, 0x75, 0xd7, 0x6a, 0x52, 0x8d, 0x03, 0x9b, 0x51,
	0x2e, 0x39, 0x8a, 0xbf, 0x07, 0xc0, 0x6d, 0x8a, 0x7c, 0x55, 0x06, 0x63, 0x7a, 0xa6, 0xdf, 0xcc,
	0xcc, 0x63, 0x74, 0x32, 0x46, 0x07, 0xad, 0xf1, 0x95, 0x34, 0x4d, 0x06, 0xfd, 0xb4, 0xbb, 0x22,
	0x75, 0x53, 0xd1, 0xa4, 0x72, 0x90, 0xdd, 0x8f, 0x9c, 0x8a, 0xd1, 0x09, 0x78, 0xcc, 0xd2, 0x5b,
	0x6a, 0x08, 0xde, 0x7b, 0x11, 0xda, 0x97, 0x41, 0xf1, 0x5c, 0x8c, 0xf7, 0xb5, 0xc3, 0x2d, 0xaa,
	0xc6, 0xb8, 0x32, 0x58, 0x96, 0xfa, 0x23, 0x87, 0xe5, 0x6f, 0xe6, 0x94, 0xc8, 0xe7, 0x4b, 0x31,
	0xfa, 0x6c, 0xc9, 0xfa, 0xc5, 0x75, 0x28, 0x91, 0x64, 0xbf, 0x4c, 0x8c, 0xc8, 0x57, 0x43, 0xa9,
	0xf0, 0xd9, 0x32, 0xc5, 0xb2, 0x02, 0x38, 0x29, 0x45, 0xc3, 0x1b, 0x25, 0xca, 0x26, 0x69, 0x78,
	0xf1, 0xaa, 0xe6, 0xe1, 0x18, 0x3d, 0x00, 0xef, 0xb3, 0x6e, 0x59, 0x59, 0xd5, 0xac, 0xc0, 0x2a,
	0xc6, 0xe7, 0x00, 0xdc, 0x94, 0x66, 0x86, 0x93, 0xad, 0x99, 0x81, 0x79, 0x6d, 0x12, 0x66, 0x5e,
	0xa3, 0x1b, 0x68, 0xe4, 0x48, 0x8c, 0x26, 0xe1, 0x21, 0x6b, 0xff, 0xda, 0x15, 0xd1, 0x4a, 0x20,
	0x7f, 0x2f, 0x03, 0x72, 0xa8, 0xdd, 0x2b, 0x75, 0xa5, 0x3c, 0xea, 0x6e, 0x1b, 0xdd, 0x19, 0xa3,
	0x6d, 0xd6, 0x96, 0xa9, 0x02, 0xf8, 0x60, 0x02, 0x9f, 0x56, 0x29, 0x9a, 0x2d, 0xdb, 0x98, 0xdf,
	0x1a, 0xa3, 0x9b, 0xac, 0xdd, 0xc5, 0x3a, 0x4d, 0xce, 0xad, 0x5c, 0xce, 0x4f, 0x97, 0xeb, 0xdd,
	0xdb, 0x56, 0xd3, 0x72, 0x2b, 0x4d, 0xd2, 0x84, 0x1b, 0x27, 0xea, 0x8d, 0x68, 0xa9, 0x82, 0xcf,
	0x8d, 0x18, 0x31, 0xba, 0x11, 0x5e, 0x6f, 0x5d, 0x4b, 0x1f, 0xc8, 0x83, 0xab, 0x59, 0xea, 0xa4,
	0xa5, 0xdb, 0xfb, 0xd0, 0x34, 0x3e, 0x57, 0x82, 0x3b, 0x14, 0x5b, 0x95, 0x02, 0x22, 0xb6, 0xe7,
	0x93, 0x45, 0xa6, 0x04, 0x73, 0x83, 0xae, 0x61, 0x63, 0x9b, 0x32, 0x03, 0x17, 0x60, 0x8f, 0xba,
	0x0b, 0xe3, 0x98, 0x22, 0xc2, 0xca, 0x3a, 0x76, 0xc9, 0x5b, 0x7d, 0x8e, 0x50, 0xbe, 0xdf, 0xef,
	0x56, 0xb6, 0x5b, 0x23, 0x95, 0x18, 0x1d, 0x87, 0x47, 0x2d, 0x73, 0xd5, 0x0d, 0x7f, 0xaa, 0x8f,
	0xac, 0x09, 0x9d, 0x82, 0xdd, 0x78, 0x47, 0x2f, 0xdc, 0x8c, 0x6a, 0x35, 0xa5, 0xdd, 0x6b, 0xdf,
	0x0d, 0xf0, 0x42, 0xa9, 0xd8, 0x32, 0xf9, 0x3e, 0x88, 0xd1, 0x7f, 0x07, 0xd6, 0xff, 0xff, 0x62,
	0xdd, 0x00, 0x42, 0x99, 0xcf, 0xdb, 0x61, 0x11, 0x36, 0x8b, 0xec, 0x16, 0x3a, 0xd5, 0x63, 0xc2,
	0x97, 0x14, 0x8a, 0xf3, 0x2b, 0xa5, 0xa1, 0x74, 0x5b, 0x35, 0x70, 0x40, 0xd6, 0x3a, 0xae, 0xad,
	0xc7, 0x25, 0x20, 0xc6, 0xce, 0xd8, 0x19, 0x69, 0xb7, 0xc0, 0xaf, 0x03, 0xb9, 0x7e, 0x29, 0x51,
	0x19, 0xcd, 0x68, 0x80, 0xcd, 0xe8, 0xfb, 0x41, 0x8c, 0x5e, 0x00, 0xd6, 0x4f, 0x80, 0x2c, 0xd9,
	0x32, 0x62, 0x4b, 0x0c, 0x44, 0x88, 0xc0, 0x8d, 0x2f, 0xf1, 0xaa, 0x15, 0x39, 0xe5, 0xf2, 0x5a,
	0x03, 0x4d, 0x29, 0x25, 0x09, 0x55, 0x09, 0x2d, 0xfb, 0xec, 0x74, 0x7b, 0x6d, 0x06, 0x76, 0x55,
	0xfd, 0x7a, 0xc3, 0xf7, 0xb0, 0x17, 0x71, 0xaf, 0x73, 0xaf, 0x39, 0x26, 0x9e, 0x10, 0x09, 0x31,
	0x7a, 0x67, 0x8c, 0xf6, 0x5b, 0xc3, 0x4c, 0x90, 0xa5, 0xde, 0x48, 0xff, 0x85, 0xa2, 0x9b, 0xf8,
	0x64, 0xcc, 0x4a, 0xd2, 0xad, 0xf6, 0xdb, 0x00, 0x6e, 0xae, 0xe1, 0x59, 0xbb, 0xe9, 0x46, 0xd3,
	0x35, 0x3b, 0xb2, 0x99, 0x94, 0xec, 0xa0, 0x83, 0x75, 0x99, 0xe3, 0x76, 0x64, 0xd3, 0x71, 0x7e,
	0x02, 0xc4, 0xe8, 0x79, 0x60, 0x3d, 0x07, 0xd8, 0x50, 0xe2, 0xf9, 0x4a, 0xa3, 0xc8, 0xa0, 0x9e,
	0xd4, 0xe7, 0x82, 0xec, 0x74, 0x91, 0x52, 0x8a, 0x4b, 0x1c, 0xa4, 0xd5, 0x35, 0x77, 0x97, 0x16,
	0x81, 0xdf, 0xc7, 0x01, 0x16, 0xdd, 0x6a, 0x2f, 0x03, 0xd8, 0x5b, 0x77, 0xbc, 0xe9, 0x24, 0x54,
	0x60, 0x67, 0xa7, 0x0e, 0xf6, 0x6c, 0x1a, 0x7d, 0x2b, 0x88, 0xd1, 0x05, 0x6b, 0x11, 0x49, 0xb3,
	0x81, 0xf0, 0x7f, 0xdd, 0xf1, 0x9c, 0x7a, 0xb3, 0xae, 0x7b, 0x4d, 0x1a, 0xc3, 0xe3, 0xcf, 0x32,
	0x35, 0x1a, 0x0e, 0xaa, 0x07, 0x24, 0xcc, 0x5c, 0x91, 0x4c, 0x4d, 0x21, 0x65, 0x91, 0x2c, 0x79,
	0x98, 0xdc, 0x32, 0x73, 0x06, 0xd1, 0xc5, 0x21, 0xe6, 0x50, 0x2e, 0x9b, 0x34, 0x70, 0x63, 0x53,
	0xdd, 0xf1, 0x8e, 0x4b, 0xb8, 0xb4, 0x5f, 0x2b, 0xc1, 0xde, 0xba, 0x7d, 0x5e, 0x05, 0x75, 0x03,
	0x05, 0xf5, 0x03, 0xa5, 0x18, 0xbd, 0xb7, 0x64, 0xbd, 0xb3, 0x94, 0x01, 0xd6, 0x3e, 0xff, 0xca,
	0x00, 0x2b, 0xc9, 0xc5, 0x6c, 0x0a, 0xd5, 0x16, 0xc5, 0x0e, 0x0d, 0xa5, 0x78, 0x06, 0x07, 0xbe,
	0x4e, 0x8c, 0x1f, 0x29, 0xac, 0xf1, 0xb9, 0xa6, 0xed, 0x92, 0x47, 0x73, 0x54, 0x22, 0x51, 0x81,
	0xe7, 0xe9, 0xe5, 0x34, 0x29, 0x58, 0xd7, 0xa7, 0x70, 0xc4, 0x19, 0x9d, 0x74, 0xba, 0x4f, 0xf2,
	0x81, 0xe3, 0x45, 0x38, 0x68, 0x04, 0xd4, 0xb8, 0xb1, 0x43, 0xdd, 0x6f, 0x60, 0x6f, 0x08, 0x7b,
	0x35, 0x5c, 0x13, 0xd8, 0xb3, 0xcf, 0x2b, 0xd8, 0xfb, 0x01, 0x80, 0xdb, 0x6d, 0x37, 0xc2, 0x81,
	0x67, 0x47, 0xce, 0x02, 0x4e, 0x38, 0x36, 0xdc, 0xb9, 0x51, 0x6f, 0x4b, 0xb3, 0xec, 0xa7, 0x40,
	0x8c, 0x5e, 0x02, 0xd6, 0xc7, 0xc1, 0x11, 0x27, 0x8c, 0x08, 0xe2, 0xec, 0x5a, 0xcd, 0x21, 0x68,
	0xb0, 0x5d, 0x66, 0x47, 0x52, 0x8b, 0x51, 0x7c, 0x1e, 0xae, 0xc6, 0xca, 0x93, 0xb3, 0xba, 0x8b,
	0x67, 0x23, 0x1d, 0x53, 0x45, 0x4b, 0xc3, 0x2d, 0xa8, 0x34, 0xc8, 0x2d, 0x9e, 0xb2, 0x2e, 0x3c,
	0x8c, 0xb8, 0x26, 0xb5, 0x00, 0x23, 0x1a, 0x93, 0x2e, 0x45, 0x2c, 0xbd, 0x55, 0x99, 0x95, 0x04,
	0x69, 0xe4, 0x2d, 0x31, 0xfa, 0x11, 0xf8, 0x8c, 0x75, 0x37, 0x93, 0x32, 0xec, 0x0c, 0xd2, 0xae,
	0xd5, 0xf8, 0x31, 0x73, 0x56, 0x46, 0x91, 0x97, 0xea, 0x36, 0x39, 0xab, 0xe1, 0xf2, 0xc2, 0x70,
	0x19, 0x24, 0x92, 0x60, 0x19, 0xe4, 0xe5, 0x80, 0xf1, 0xf5, 0x4d, 0x70, 0xab, 0xba, 0xf5, 0x92,
	0x9a, 0xf0, 0xd2, 0x3d, 0x10, 0xda, 0x74, 0xa1, 0xb9, 0xc0, 0x4e, 0xf0, 0x5b, 0xf5, 0x21, 0xc5,
	0x71, 0xea, 0xe4, 0xa3, 0xee, 0xd7, 0x78, 0x6c, 0x85, 0x6a, 0x17, 0x68, 0x5f, 0x4f, 0xef, 0xdb,
	0x72, 0x3a, 0xe0, 0x83, 0x20, 0x46, 0xef, 0x07, 0xd6, 0x7b, 0xa4, 0x4b, 0xf0, 0x35, 0xa2, 0x07,
	0x92, 0x2d, 0x5f, 0xa2, 0x0a, 0x8a, 0xc5, 0x74, 0xfb, 0x55, 0x2f, 0xa6, 0x3b, 0xae, 0x1e, 0x31,
	0xdd, 0xf9, 0xba, 0x98, 0xbe, 0x0c, 0x62, 0x7a, 0xc3, 0x0f, 0x9f, 0x98, 0xd6, 0xfe, 0x02, 0x24,
	0xae, 0x8b, 0x8d, 0xd4, 0xe4, 0xfe, 0x8f, 0x20, 0x46, 0xff, 0x01, 0x58, 0x5f, 0x03, 0x07, 0x5d,
	0x9b, 0x9a, 0xec, 0x35, 0x3c, 0xeb, 0x78, 0x4c, 0x44, 0xcc, 0xe0, 0x79, 0x7b, 0xc1, 0xf1, 0x9b,
	0xd2, 0x77, 0xd6, 0xa4, 0x02, 0x96, 0xa1, 0xba, 0x6a, 0x37, 0x43, 0x4c, 0x36, 0x3f, 0x8e, 0xef,
	0xb2, 0xed, 0xaf, 0x3f, 0xab, 0x6e, 0xda, 0xb3, 0x1e, 0x84, 0x24, 0xd4, 0xa9, 0xa5, 0x07, 0x83,
	0x18, 0xd0, 0xc2, 0x81, 0xc1, 0xe4, 0x96, 0xba, 0x7e, 0x1d, 0x4f, 0x19, 0x4b, 0x0a, 0x54, 0x3b,
	0x38, 0xcb, 0x08, 0x2d, 0xfd, 0x35, 0xd2, 0xad, 0xf0, 0x45, 0x10, 0xa3, 0x5f, 0x06, 0xf0, 0xb3,
	0xc0, 0x42, 0xaa, 0x5a, 0xa2, 0x32, 0x78, 0xa9, 0x68, 0x7f, 0xa0, 0x38, 0x68, 0x56, 0xd3, 0x50,
	0x29, 0x85, 0x50, 0xa4, 0x90, 0x96, 0x41, 0x46, 0x80, 0x90, 0x07, 0xa9, 0x65, 0xba, 0x0c, 0x5a,
	0x70, 0x9e, 0xf1, 0xa7, 0x00, 0xf6, 0x5e, 0x7e, 0x2d, 0x76, 0xb8, 0x50, 0x8b, 0x25, 0xce, 0x90,
	0x15, 0x94, 0x49, 0x66, 0x1b, 0x3b, 0x1e, 0x23, 0x04, 0x1f, 0xb2, 0xf4, 0x49, 0xb2, 0xd4, 0xec,
	0x2a, 0x0f, 0xba, 0xcc, 0x23, 0x74, 0xe5, 0x8d, 0xeb, 0x07, 0x81, 0x38, 0xbd, 0x3e, 0x3e, 0xf3,
	0x34, 0xae, 0x46, 0x64, 0x9a, 0x91, 0x12, 0xe6, 0xdf, 0x6b, 0xf5, 0x99, 0xec, 0x8d, 0x5c, 0x81,
	0xc7, 0x63, 0x74, 0xc4, 0x7a, 0x84, 0x69, 0x0c, 0xf6, 0x8a, 0x18, 0x13, 0x4b, 0x0d, 0xea, 0x5c,
	0xe4, 0x51, 0xb9, 0x22, 0x76, 0x46, 0x7c, 0x51, 0x11, 0x91, 0xb3, 0x8a, 0xae, 0xe0, 0x27, 0xa4,
	0x3c, 0xb6, 0x7d, 0xa4, 0x27, 0x46, 0x5d, 0x70, 0xc3, 0x32, 0xa0, 0xbf, 0x8c, 0xf7, 0x00, 0xd8,
	0x25, 0x9a, 0x86, 0xda, 0x61, 0x08, 0x7d, 0xfa, 0x63, 0x3a, 0xc0, 0xb3, 0xdc, 0x8d, 0x0a, 0x4d,
	0xd9, 0xb5, 0x3c, 0x32, 0xc0, 0x45, 0x03, 0x9a, 0x95, 0x2e, 0x5f, 0x3c, 0x13, 0xd1, 0x4e, 0x37,
	0x29, 0xae, 0x18, 0x82, 0x6a, 0xd6, 0x28, 0x1d, 0x78, 0xbc, 0x0c, 0x94, 0x41, 0x8d, 0x7f, 0x02,
	0x50, 0x1b, 0x73, 0xb1, 0x1d, 0x24, 0xd8, 0x20, 0xb8, 0x9a, 0x58, 0x19, 0x57, 0x09, 0x73, 0x50,
	0x04, 0x49, 0xc2, 0x0a, 0xbc, 0x89, 0xc0, 0x7e, 0x1b, 0x6e, 0x0c, 0xf0, 0xec, 0x74, 0x72, 0xef,
	0x44, 0x09, 0xe5, 0x28, 0xc2, 0xe1, 0xe9, 0xd3, 0x93, 0xe3, 0x54, 0x0a, 0x25, 0xb1, 0x36, 0xf4,
	0xfe, 0x46, 0x82, 0x5c, 0x02, 0x2a, 0x5d, 0x88, 0x01, 0x9e, 0x3d, 0xdd, 0x74, 0x6a, 0x23, 0x0f,
	0xc5, 0xe8, 0x7e, 0x38, 0x62, 0xdd, 0x7a, 0x2a, 0x0a, 0xb0, 0x5d, 0xd7, 0x09, 0xa7, 0x8b, 0x50,
	0x8e, 0x82, 0x11, 0x38, 0x1d, 0x96, 0x81, 0x84, 0x8b, 0x60, 0x60, 0x1b, 0x6b, 0x9c, 0x4c, 0x72,
	0x92, 0x9e, 0x2f, 0x9d, 0x4d, 0x91, 0x07, 0xe4, 0xc8, 0xf3, 0x70, 0x8c, 0x1e, 0xb0, 0xee, 0x6b,
	0x35, 0x97, 0xc8, 0x6f, 0x39, 0x8b, 0xc5, 0xc0, 0x89, 0x22, 0xec, 0xa9, 0x14, 0xd4, 0xee, 0x86,
	0xed, 0x04, 0x76, 0x8a, 0xa6, 0x9e, 0x51, 0x23, 0x46, 0x37, 0x5a, 0xd7, 0x67, 0x98, 0x91, 0xce,
	0xcd, 0x0e, 0x59, 0x67, 0x66, 0x85, 0x7e, 0x3f, 0x82, 0x62, 0xf4, 0x20, 0xbc, 0x7f, 0xed, 0xf3,
	0x57, 0xa6, 0xb4, 0x0c, 0x68, 0x17, 0xc6, 0x4b, 0x25, 0xb8, 0x3d, 0x8b, 0x81, 0xe3, 0x4d, 0xba,
	0x66, 0xe6, 0x57, 0xe6, 0x83, 0xb1, 0x18, 0x3d, 0x6c, 0x3d, 0xd8, 0x0a, 0x03, 0xe4, 0x93, 0x15,
	0xa9, 0x19, 0x60, 0xbb, 0x76, 0x35, 0xb1, 0xca, 0xf3, 0xa0, 0x05, 0xa2, 0x42, 0x49, 0x3e, 0xb0,
	0x4e, 0xf2, 0xdd, 0x19, 0xa3, 0xfd, 0x70, 0x78, 0x1d, 0x30, 0x51, 0x8a, 0xfd, 0x31, 0x80, 0xdb,
	0xc6, 0xfd, 0x45, 0xcf, 0xf5, 0xed, 0x5a, 0x7a, 0xe1, 0xde, 0x99, 0xba, 0xcb, 0xb4, 0xd6, 0x75,
	0xfa, 0x54, 0x0e, 0xf9, 0x49, 0xb0, 0x73, 0x4b, 0xe4, 0x27, 0x88, 0xa7, 0x50, 0x27, 0x44, 0x65,
	0x0e, 0x34, 0x05, 0xf1, 0x66, 0x8c, 0x6e, 0x87, 0x7b, 0xad, 0x6d, 0xa7, 0x2b, 0x47, 0xb2, 0x93,
	0x2b, 0xc4, 0xf3, 0xf9, 0xe2, 0xd9, 0x5d, 0x3c, 0x96, 0x6f, 0x8b, 0xd1, 0xcd, 0xd0, 0xb0, 0x06,
	0x08, 0x00, 0x91, 0xaf, 0xcf, 0xe2, 0xa8, 0x3a, 0x9f, 0x85, 0xa2, 0xad, 0x19, 0xb8, 0xc6, 0xfb,
	0xe8, 0x21, 0xdb, 0xe5, 0x42, 0xeb, 0x93, 0x39, 0xb4, 0xae, 0x2c, 0x32, 0x56, 0x42, 0xab, 0x88,
	0x61, 0x13, 0x48, 0x95, 0xb8, 0x68, 0x5b, 0x27, 0x2e, 0xd6, 0x4b, 0x8c, 0x97, 0xdb, 0xe1, 0x66,
	0xa6, 0x4a, 0x85, 0xc1, 0x44, 0x10, 0x12, 0x16, 0xd9, 0x0c, 0x95, 0x18, 0x1d, 0xb7, 0x8e, 0x0a,
	0x07, 0x74, 0xd4, 0xd2, 0x76, 0xc8, 0xac, 0x5b, 0xd5, 0xb2, 0xcf, 0xaa, 0xd1, 0x8c, 0x6b, 0x7d,
	0xb3, 0xb8, 0x4f, 0x33, 0x8d, 0x5d, 0x5c, 0xc7, 0x1e, 0xf5, 0xee, 0xb6, 0xd1, 0xd3, 0x47, 0xd1,
	0xc7, 0x04, 0x7b, 0x31, 0x4a, 0x54, 0xa2, 0x65, 0x9d, 0xe0, 0xb7, 0xe2, 0xc8, 0xd6, 0x53, 0xf5,
	0xbb, 0x0a, 0x57, 0xaa, 0x62, 0x96, 0x31, 0xab, 0xd7, 0xac, 0xf4, 0x3b, 0xe9, 0x9e, 0x42, 0xcd,
	0x51, 0xc6, 0xad, 0xe3, 0xc8, 0xe6, 0x78, 0x27, 0xe3, 0x6e, 0x36, 0x8f, 0xe2, 0xc8, 0x26, 0x6c,
	0xf2, 0x28, 0x5e, 0x7a, 0x8c, 0xf4, 0x30, 0xba, 0x37, 0x46, 0xb7, 0x5a, 0x37, 0x8b, 0xc7, 0x74,
	0xf7, 0x61, 0xbb, 0xa1, 0x12, 0x67, 0x2e, 0x03, 0xa6, 0x92, 0xa1, 0x8e, 0xf2, 0x5e, 0x47, 0xbe,
	0x04, 0x62, 0xf4, 0x45, 0x00, 0x3f, 0xcf, 0x36, 0xe4, 0x0e, 0x17, 0x67, 0xc9, 0xc1, 0xf5, 0xa4,
	0xbc, 0x4f, 0x44, 0x70, 0x88, 0xed, 0xea, 0x7c, 0x6a, 0x5a, 0xcc, 0xc0, 0xae, 0x89, 0x13, 0x72,
	0xf6, 0x8a, 0x4e, 0x96, 0xe3, 0x2b, 0x39, 0x49, 0xa3, 0x1f, 0x52, 0xeb, 0x79, 0x82, 0xf4, 0xa2,
	0xbe, 0x9f, 0xb7, 0x17, 0xb0, 0x5e, 0x6f, 0xba, 0x91, 0xd3, 0x70, 0xc5, 0x6e, 0x20, 0x77, 0x52,
	0x90, 0x27, 0x85, 0xf1, 0x34, 0xdc, 0xcc, 0xe4, 0x98, 0xca, 0x29, 0xb7, 0xc0, 0xde, 0x66, 0x88,
	0x83, 0xe9, 0xe4, 0xaa, 0x14, 0x3b, 0xd6, 0xde, 0x44, 0xe3, 0xda, 0xc5, 0x43, 0xcd, 0x84, 0x1b,
	0x45, 0x87, 0xdc, 0x12, 0xd2, 0xcc, 0x1c, 0xdb, 0x55, 0xe4, 0x37, 0xc6, 0x9f, 0x94, 0xe0, 0x66,
	0xe6, 0x93, 0x51, 0x07, 0x3b, 0x05, 0xbb, 0x25, 0x58, 0x8e, 0x08, 0x5d, 0xb5, 0x62, 0x34, 0x6c,
	0x0d, 0x4d, 0x89, 0xdb, 0x54, 0xb6, 0xcb, 0x16, 0x9a, 0xb0, 0xe9, 0x68, 0x90, 0x7a, 0x66, 0x7f,
	0x59, 0x81, 0xa2, 0x9b, 0xc9, 0x9a, 0xf6, 0x49, 0x00, 0xb7, 0xcb, 0x5e, 0xab, 0xd8, 0x75, 0xb3,
	0xcc, 0x37, 0x20, 0x99, 0x8f, 0x41, 0xc4, 0x19, 0x67, 0x0c, 0xbb, 0x2e, 0x8f, 0x9b, 0x3d, 0xd9,
	0xb4, 0x5d, 0xba, 0x31, 0xd0, 0x49, 0xfb, 0x6c, 0x34, 0x3d, 0xdb, 0xfa, 0xd4, 0xb8, 0x0b, 0x85,
	0xed, 0x84, 0xb1, 0xbe, 0xe0, 0x04, 0x11, 0xd9, 0xb1, 0xa6, 0x3c, 0x12, 0xe3, 0x53, 0xd3, 0xec,
	0x78, 0xba, 0xb2, 0x55, 0x80, 0x44, 0x86, 0x11, 0xac, 0x3a, 0x72, 0x38, 0x46, 0x13, 0x70, 0xcc,
	0xba, 0x51, 0x9c, 0x23, 0xf2, 0x5d, 0x95, 0xc2, 0x39, 0x74, 0x94, 0x65, 0xa0, 0xe2, 0xa9, 0x90,
	0x98, 0xbf, 0x00, 0x60, 0xf7, 0x95, 0x46, 0xad, 0x8c, 0x52, 0x3d, 0x4d, 0x8f, 0x00, 0xd9, 0x15,
	0x1f, 0x27, 0x6f, 0xf9, 0x27, 0xcd, 0xd3, 0x80, 0x1b, 0xdf, 0x07, 0x70, 0x7b, 0x05, 0xdb, 0xfc,
	0x84, 0x4a, 0xee, 0xe8, 0x08, 0xbc, 0xe7, 0x8a, 0x24, 0x14, 0xbb, 0x33, 0x76, 0x09, 0x12, 0x2a,
	0x54, 0x44, 0x14, 0x31, 0x5f, 0x52, 0xf2, 0xe9, 0x32, 0xc5, 0xf2, 0x8f, 0x6c, 0x89, 0x51, 0x3f,
	0xec, 0xcd, 0x84, 0x19, 0x3d, 0x0f, 0x60, 0xef, 0x98, 0xdf, 0xf4, 0xa2, 0x24, 0x00, 0xea, 0x89,
	0xd6, 0xe7, 0xd0, 0x43, 0x31, 0x2a, 0x5b, 0x7b, 0xd4, 0x89, 0xae, 0xef, 0x3c, 0x7a, 0x57, 0x8c,
	0xb6, 0xc3, 0xad, 0x85, 0xe7, 0xae, 0xef, 0x01, 0xb0, 0x73, 0xfc, 0xe4, 0x11, 0xb6, 0xb6, 0xdb,
	0x6a, 0xe7, 0xc4, 0x90, 0x04, 0x6a, 0xab, 0x97, 0xf0, 0xc2, 0xf8, 0xc9, 0x23, 0xfc, 0x98, 0xb3,
	0x42, 0xde, 0x6b, 0xa3, 0x10, 0x36, 0xec, 0xc0, 0xae, 0xe3, 0x08, 0x07, 0x62, 0xcd, 0x74, 0x99,
	0xe3, 0x27, 0x8f, 0x9c, 0x20, 0x4f, 0x47, 0x77, 0xc4, 0x68, 0xab, 0xa5, 0x89, 0x86, 0xf2, 0x4b,
	0xb3, 0xa2, 0xb4, 0xe2, 0x00, 0x59, 0x3d, 0xac, 0x6f, 0x3b, 0xaa, 0x53, 0x67, 0x2d, 0xe9, 0xde,
	0xf8, 0x7f, 0x00, 0xec, 0x3d, 0xd9, 0xc4, 0xc1, 0x52, 0x05, 0x87, 0x4d, 0x97, 0xda, 0xad, 0x6f,
	0x86, 0x9b, 0x02, 0xfa, 0x63, 0x7a, 0xde, 0xf6, 0x6a, 0x6e, 0x3e, 0xdc, 0x92, 0x3b, 0x39, 0xe5,
	0x6d, 0xcb, 0x40, 0x3a, 0x3f, 0xc8, 0x00, 0xac, 0x23, 0x16, 0x55, 0x62, 0xd7, 0xe8, 0xa5, 0x60,
	0xb3, 0xd2, 0xc3, 0x7a, 0x3c, 0x4c, 0x3b, 0xbc, 0x6c, 0xb4, 0xe6, 0x46, 0xe9, 0x1e, 0xe9, 0x45,
	0xa0, 0xcb, 0x80, 0x0c, 0x4b, 0x16, 0x0f, 0xbd, 0x8e, 0x6c, 0x53, 0x98, 0xd8, 0xe8, 0xe6, 0x32,
	0x48, 0xcf, 0xcc, 0x78, 0x07, 0x80, 0x9b, 0xe8, 0xec, 0xc7, 0x5c, 0x3f, 0xc4, 0x2c, 0xd2, 0xb4,
	0x70, 0xf2, 0x4c, 0x21, 0xae, 0x67, 0xf2, 0x55, 0xd2, 0x63, 0x66, 0xe2, 0x23, 0xdb, 0x62, 0xa4,
	0xc1, 0xfe, 0x1c, 0x18, 0xff, 0x01, 0xf0, 0xd3, 0x75, 0x45, 0x1f, 0x8a, 0xd3, 0x75, 0x0f, 0x6e,
	0x3c, 0x8b, 0x97, 0xd4, 0x75, 0x78, 0xc9, 0xc7, 0xe1, 0xca, 0x28, 0xf2, 0x38, 0x7c, 0xc3, 0x59,
	0x36, 0xa4, 0x88, 0xf9, 0x58, 0xe9, 0x28, 0xbc, 0xa0, 0xfd, 0x32, 0x90, 0x50, 0x1a, 0x9f, 0xd8,
	0x00, 0xb7, 0x32, 0xed, 0xa3, 0x7c, 0x48, 0xa6, 0xf2, 0x53, 0x20, 0x37, 0x97, 0xa5, 0x18, 0x2d,
	0x58, 0x51, 0xc1, 0x09, 0xaa, 0x9d, 0x1d, 0x47, 0x06, 0x3a, 0x15, 0x21, 0x8a, 0xb9, 0xc7, 0xd5,
	0x09, 0x4b, 0x88, 0xb9, 0x87, 0xcc, 0x63, 0x5f, 0xc9, 0x0f, 0x92, 0x19, 0x6b, 0x5f, 0x2b, 0x74,
	0x8c, 0x97, 0xb2, 0x8e, 0xf1, 0xf7, 0x81, 0x18, 0xfd, 0x24, 0xb0, 0xde, 0x95, 0x77, 0x8c, 0xaf,
	0x00, 0xee, 0x3a, 0x9c, 0xe2, 0xdc, 0x71, 0x28, 0xb8, 0x49, 0xda, 0x40, 0xaa, 0x7b, 0x3c, 0x3d,
	0x44, 0xde, 0x3d, 0xfe, 0x03, 0x90, 0xf3, 0x39, 0xb7, 0x51, 0x9f, 0xf3, 0x57, 0x40, 0x8c, 0x7e,
	0x13, 0x58, 0xbf, 0x0a, 0x0e, 0xfb, 0x8b, 0x7a, 0xdd, 0xf6, 0x96, 0xc4, 0x70, 0x76, 0xa4, 0xd7,
	0xfd, 0x50, 0x32, 0x0b, 0xb3, 0x94, 0x75, 0x79, 0x3e, 0x91, 0x26, 0x35, 0x73, 0x18, 0xdb, 0x41,
	0x60, 0x2f, 0x51, 0x38, 0x89, 0x25, 0xd6, 0x0c, 0xc5, 0x51, 0x7d, 0xa4, 0x87, 0xdc, 0xf5, 0x4b,
	0xa1, 0xe5, 0xd7, 0x1d, 0xe9, 0xc5, 0xea, 0x30, 0xed, 0x13, 0x1e, 0x64, 0x78, 0xa8, 0x63, 0x5b,
	0xde, 0x4b, 0x15, 0xde, 0x6f, 0x79, 0x5f, 0x9a, 0x05, 0x28, 0x8a, 0x96, 0xe1, 0x7a, 0x9d, 0xc4,
	0xed, 0x97, 0xd5, 0x49, 0x9c, 0x27, 0xed, 0x65, 0x76, 0x12, 0x67, 0x08, 0x5b, 0x7c, 0x96, 0xc7,
	0xe3, 0x9c, 0x6e, 0x3d, 0x91, 0x5c, 0x24, 0xcd, 0xde, 0x1b, 0x55, 0xfa, 0x51, 0x96, 0x64, 0xe1,
	0xc1, 0xdc, 0x4b, 0x00, 0xee, 0x1c, 0xc7, 0x34, 0xa3, 0x42, 0x7e, 0xa9, 0x9e, 0xcc, 0xad, 0x54,
	0x16, 0xe5, 0x7d, 0xba, 0xe8, 0x7c, 0x2b, 0xcd, 0x24, 0xd4, 0x55, 0x2d, 0xba, 0x55, 0x04, 0x0b,
	0x77, 0xb3, 0xdd, 0x22, 0xac, 0xab, 0xe4, 0xa3, 0x82, 0xd5, 0xa3, 0xca, 0x93, 0xbf, 0xdc, 0x20,
	0x4e, 0x10, 0x33, 0x40, 0x1e, 0xcd, 0x01, 0xc9, 0x4c, 0xaa, 0xb5, 0x01, 0xc9, 0xac, 0x3b, 0x45,
	0x0e, 0x7c, 0x0c, 0xb0, 0x0b, 0x54, 0xb2, 0x4f, 0xb6, 0xed, 0x7c, 0x36, 0x46, 0xe7, 0xad, 0x85,
	0x63, 0xad, 0x0e, 0xf7, 0xae, 0xac, 0x90, 0x82, 0x1e, 0x5e, 0xe4, 0xcd, 0xb5, 0xe5, 0x42, 0x39,
	0xd5, 0x96, 0x95, 0x53, 0x1f, 0x01, 0x31, 0xfa, 0x10, 0xb0, 0x3e, 0xb0, 0xe2, 0x01, 0x5e, 0xc1,
	0xba, 0x7e, 0xcd, 0x48, 0xac, 0xf6, 0x7f, 0x9e, 0x12, 0xab, 0xe3, 0x87, 0x50, 0x62, 0xf1, 0x80,
	0xfc, 0xdd, 0xd9, 0x1d, 0xd5, 0x8a, 0xeb, 0xfd, 0xc3, 0x00, 0xf6, 0x66, 0x56, 0xfa, 0x58, 0x6e,
	0xa5, 0xb3, 0xf8, 0xc2, 0xd5, 0x57, 0xba, 0x22, 0x80, 0xb8, 0xb7, 0x77, 0x98, 0x02, 0x43, 0x99,
	0xa1, 0x81, 0x03, 0x96, 0x17, 0x8a, 0x90, 0xcf, 0xd6, 0xc9, 0xee, 0xd1, 0xcd, 0xf5, 0xa0, 0x82,
	0xf6, 0x07, 0x6d, 0x70, 0x2b, 0xdb, 0x42, 0x5e, 0x56, 0x51, 0xc4, 0x8e, 0xc8, 0x14, 0x51, 0xf4,
	0x85, 0x5c, 0x24, 0xf3, 0x47, 0x4a, 0x31, 0xfa, 0x50, 0xc9, 0xfa, 0x40, 0x89, 0x1e, 0x07, 0x32,
	0x8b, 0xaf, 0xea, 0x7b, 0x51, 0xe0, 0x86, 0x99, 0x23, 0x41, 0x3e, 0x0c, 0xef, 0x73, 0xd5, 0x13,
	0xbe, 0xb9, 0x00, 0x63, 0xcf, 0x78, 0xb0, 0x5c, 0x8e, 0x82, 0x26, 0x2e, 0x97, 0xf9, 0x31, 0xdf,
	0x20, 0x75, 0xfa, 0x34, 0x43, 0x9a, 0x39, 0xa9, 0x05, 0xe0, 0x74, 0x45, 0xcc, 0xe1, 0x48, 0x46,
	0x16, 0xab, 0x97, 0xca, 0x56, 0x1c, 0x33, 0xc0, 0x35, 0x32, 0x22, 0x0d, 0x8c, 0x96, 0x43, 0x26,
	0xa1, 0xd1, 0x72, 0x8f, 0xa8, 0xc4, 0x47, 0xe7, 0x87, 0x77, 0xe8, 0x5d, 0x06, 0xb2, 0x98, 0x73,
	0x77, 0x63, 0x6e, 0x96, 0x24, 0x66, 0xa0, 0xb1, 0xab, 0xf4, 0x2b, 0xd0, 0xf5, 0x5f, 0x00, 0xb8,
	0x85, 0xac, 0x32, 0xe5, 0x83, 0xf0, 0x72, 0x5e, 0xa8, 0xe7, 0x1b, 0x95, 0x21, 0x09, 0x57, 0xc3,
	0x9e, 0x63, 0x62, 0x27, 0xf0, 0x9b, 0x73, 0xf3, 0xf9, 0xf9, 0x85, 0x99, 0x35, 0xf1, 0x5f, 0xdb,
	0xe1, 0x76, 0x54, 0xab, 0x4d, 0x2a, 0x2e, 0x2f, 0xe1, 0x5e, 0xbd, 0x22, 0x6e, 0x1b, 0x75, 0xc1,
	0x95, 0x2e, 0x72, 0xc1, 0x69, 0xbf, 0x02, 0x60, 0x27, 0x93, 0x1b, 0xd4, 0xe1, 0xd7, 0x35, 0xfa,
	0x2f, 0x40, 0x8c, 0x3e, 0x02, 0xac, 0x9f, 0x06, 0xa7, 0xd8, 0xc6, 0x25, 0xc0, 0x3c, 0xed, 0x95,
	0x3c, 0xa7, 0x96, 0xa2, 0x46, 0x09, 0x7e, 0x2d, 0xd0, 0xb0, 0x3e, 0xd9, 0xe9, 0x86, 0x58, 0xf7,
	0x88, 0xd8, 0xe5, 0x49, 0x72, 0xc4, 0x6e, 0x88, 0x77, 0xca, 0x33, 0xbe, 0x51, 0x2e, 0xb4, 0xb9,
	0x68, 0x67, 0xad, 0x86, 0x58, 0x60, 0xb8, 0xf8, 0xde, 0xf1, 0xf4, 0x32, 0x7b, 0x52, 0xae, 0x70,
	0x70, 0xb5, 0xb7, 0xc0, 0x0e, 0x82, 0x37, 0x91, 0xb5, 0x0d, 0x9a, 0xd4, 0x3b, 0x79, 0xaa, 0x81,
	0xab, 0xa3, 0x4f, 0xc5, 0xe8, 0x0d, 0xd6, 0xe3, 0xc9, 0x2d, 0x02, 0xbb, 0x56, 0x93, 0x38, 0xa6,
	0xdb, 0x39, 0xba, 0xf5, 0xf4, 0x03, 0xb6, 0xdf, 0x6a, 0xe2, 0xc1, 0x44, 0x41, 0x38, 0x51, 0xa8,
	0x37, 0xfc, 0xd0, 0x61, 0x99, 0x84, 0x98, 0xc2, 0x62, 0xaa, 0x69, 0xcf, 0xfe, 0x21, 0xfa, 0xd5,
	0xde, 0x0a, 0x1b, 0x77, 0xc4, 0x8b, 0xd1, 0x59, 0xe8, 0x58, 0x13, 0x92, 0x61, 0x78, 0xe6, 0x0c,
	0xbb, 0x60, 0x15, 0x46, 0xf3, 0x49, 0xd2, 0xb0, 0x50, 0x1e, 0x90, 0x2b, 0x94, 0xcd, 0x3a, 0xac,
	0x14, 0xbb, 0x90, 0x4f, 0xd8, 0xf8, 0xc3, 0x76, 0x78, 0x6d, 0x01, 0x7f, 0xd1, 0x69, 0xbf, 0xb6,
	0x99, 0xec, 0x0b, 0x00, 0x76, 0xd0, 0x49, 0xf0, 0x90, 0xac, 0xd7, 0x3c, 0x8f, 0x31, 0x68, 0xb5,
	0xe7, 0x01, 0x6c, 0x27, 0x68, 0xa3, 0xe6, 0x4e, 0xb7, 0xd5, 0x27, 0xf5, 0xfe, 0x41, 0xfa, 0xdd,
	0xa8, 0x1d, 0xa3, 0x37, 0x59, 0x6f, 0x54, 0xe3, 0x23, 0x58, 0x56, 0x14, 0xa2, 0xba, 0xf5, 0x79,
	0x7f, 0x91, 0x3c, 0x61, 0x00, 0x92, 0x19, 0xd0, 0x04, 0x0e, 0x62, 0x56, 0x81, 0x5f, 0x17, 0x03,
	0x73, 0x5b, 0x85, 0xba, 0x05, 0xbd, 0x8c, 0x3f, 0xb4, 0x42, 0xc7, 0x1f, 0x21, 0x0c, 0x0d, 0x1f,
	0xb7, 0xee, 0x42, 0x35, 0x9a, 0x36, 0x88, 0xec, 0x22, 0x58, 0x3f, 0x8c, 0x93, 0x44, 0x7c, 0xb4,
	0xeb, 0x78, 0x67, 0x71, 0x2d, 0x2f, 0x44, 0x5b, 0xb2, 0x16, 0x9b, 0xa7, 0xf1, 0xe3, 0x25, 0xb8,
	0x3d, 0xcb, 0x56, 0x5c, 0x69, 0xbe, 0x66, 0x99, 0x4a, 0x5c, 0x8f, 0xba, 0xe3, 0x8c, 0x1f, 0x9c,
	0x65, 0x2b, 0x2c, 0xbb, 0xec, 0xfc, 0x5c, 0x5c, 0x95, 0xee, 0xe2, 0x05, 0xec, 0xb6, 0x5e, 0x6c,
	0xc6, 0x2f, 0xb5, 0xc3, 0x6b, 0x0b, 0x30, 0xf1, 0xfa, 0x1a, 0xbb, 0x62, 0x6b, 0x6c, 0x6a, 0xe5,
	0x25, 0x36, 0x1c, 0xa3, 0x41, 0xab, 0xbc, 0x76, 0x51, 0xce, 0x17, 0xcc, 0xd3, 0x31, 0x9a, 0x83,
	0xd8, 0x1a, 0x3d, 0xc1, 0xae, 0x1d, 0xe8, 0xb6, 0x1e, 0xd9, 0xe1, 0x59, 0x66, 0x42, 0x26, 0x73,
	0xb6, 0xc5, 0x8a, 0x91, 0xdb, 0xa2, 0x3c, 0xcb, 0xac, 0xbe, 0x7a, 0xfe, 0x65, 0x07, 0xdc, 0xad,
	0xc8, 0x65, 0xe5, 0xb8, 0xea, 0x8a, 0x9b, 0x00, 0xc7, 0x0b, 0xc3, 0x92, 0x8a, 0xaf, 0xbe, 0xae,
	0x25, 0x3a, 0x29, 0xc5, 0x8a, 0x6d, 0x97, 0xc1, 0xa6, 0x68, 0xbf, 0xba, 0x6c, 0x8a, 0x93, 0xc2,
	0xa6, 0xe8, 0xc8, 0xd9, 0x14, 0xeb, 0x66, 0x44, 0x6e, 0x25, 0xfc, 0x38, 0x88, 0xd1, 0x73, 0x00,
	0xbe, 0x15, 0x58, 0x47, 0x93, 0xdc, 0x3b, 0x8d, 0x94, 0x77, 0x88, 0x80, 0x2a, 0x39, 0x90, 0x76,
	0xe1, 0xba, 0xf4, 0x1c, 0x2d, 0xd4, 0x9b, 0x5e, 0x0d, 0x07, 0x85, 0x74, 0xcb, 0xf2, 0x65, 0x26,
	0xa8, 0xae, 0xc0, 0x7e, 0xf8, 0xdb, 0x12, 0xdc, 0xbd, 0x02, 0x93, 0x5e, 0x49, 0x81, 0xff, 0x9a,
	0xe4, 0xd3, 0x91, 0x99, 0x18, 0x4d, 0xc3, 0xa7, 0xac, 0x3b, 0xb8, 0x90, 0x08, 0x53, 0x96, 0x1b,
	0xd9, 0xf5, 0x09, 0x91, 0xe1, 0x5d, 0x34, 0xf6, 0x8d, 0xdf, 0x2f, 0xc1, 0x1b, 0x7e, 0x18, 0x24,
	0xc3, 0x08, 0x8b, 0x39, 0x87, 0xcf, 0x01, 0xab, 0xd6, 0x8a, 0x8f, 0x65, 0x10, 0xa1, 0x64, 0x66,
	0x3b, 0x0c, 0xab, 0x7e, 0x3a, 0x28, 0x54, 0x51, 0xc6, 0x67, 0xf1, 0x12, 0x4b, 0x97, 0xba, 0x5e,
	0x04, 0x1b, 0x7f, 0xd8, 0x09, 0x07, 0x14, 0x91, 0x3b, 0x86, 0xdd, 0xab, 0x50, 0xd6, 0x3e, 0x03,
	0x7b, 0xe9, 0xca, 0x9c, 0x16, 0xfb, 0x0d, 0x7e, 0x0e, 0x40, 0xcf, 0x8e, 0x68, 0xa0, 0x26, 0xdf,
	0x71, 0x24, 0x1b, 0x92, 0x94, 0xa4, 0x54, 0x2e, 0x29, 0x28, 0x5e, 0xbe, 0x3c, 0x2e, 0x99, 0x8f,
	0x8b, 0x7e, 0x72, 0x82, 0x77, 0x94, 0x5a, 0x3f, 0xed, 0x97, 0x41, 0xce, 0x77, 0x5c, 0xa5, 0x7b,
	0xc7, 0xce, 0x57, 0x69, 0xef, 0xf8, 0x21, 0x10, 0xa3, 0x18, 0xc0, 0xf7, 0x02, 0xeb, 0xd1, 0xf5,
	0xad, 0xa6, 0xe2, 0xc5, 0x34, 0x46, 0x6f, 0x12, 0xac, 0x26, 0x95, 0x32, 0xec, 0x56, 0xa8, 0x24,
	0x9e, 0x6b, 0x87, 0x03, 0x45, 0xcb, 0xea, 0xaa, 0xd2, 0x0e, 0x57, 0xfb, 0xca, 0x1a, 0xf9, 0xd1,
	0x18, 0x3d, 0x0b, 0x97, 0xac, 0x07, 0x33, 0xe6, 0x2b, 0x4b, 0x4e, 0xe8, 0x2e, 0xe9, 0x76, 0x54,
	0x44, 0xff, 0xd5, 0x36, 0x7e, 0x6b, 0x66, 0x07, 0xe3, 0xaf, 0x4b, 0x70, 0xc7, 0xeb, 0xc2, 0xf5,
	0x22, 0x59, 0x80, 0x7b, 0xd4, 0xd7, 0x87, 0x7d, 0xe3, 0xfd, 0x00, 0xee, 0x3c, 0x15, 0xd9, 0x51,
	0xa8, 0x90, 0xf0, 0x74, 0x68, 0xcf, 0xe1, 0xcb, 0xe6, 0x5b, 0xdf, 0x17, 0xa3, 0x21, 0x78, 0xbb,
	0x75, 0xc3, 0x64, 0x92, 0x81, 0xdb, 0xf7, 0x56, 0x74, 0xa5, 0xff, 0x4a, 0x1b, 0xbc, 0x3e, 0x0b,
	0x13, 0x95, 0x94, 0x97, 0x15, 0x30, 0xed, 0x31, 0xb1, 0x73, 0x55, 0x63, 0x48, 0x2f, 0x41, 0x85,
	0x88, 0xad, 0xe5, 0xa7, 0x85, 0xfb, 0xa6, 0xad, 0x78, 0x6f, 0xf9, 0x63, 0x20, 0x46, 0x6f, 0x03,
	0xd6, 0x5b, 0x4e, 0xe1, 0x88, 0x39, 0x70, 0x78, 0x4e, 0xff, 0x59, 0x7d, 0xc9, 0x6f, 0xea, 0x8b,
	0xb6, 0x47, 0x7d, 0xe3, 0xec, 0xa6, 0x4e, 0xcd, 0x99, 0xa5, 0x91, 0x7c, 0x51, 0xe6, 0xb8, 0x2e,
	0xf0, 0xeb, 0xdc, 0x95, 0x4f, 0x4f, 0x68, 0x8a, 0x0e, 0xf3, 0xd2, 0x07, 0x33, 0x05, 0xe0, 0xb2,
	0x2d, 0x2b, 0xcf, 0x14, 0xbd, 0x7f, 0x65, 0xf2, 0x88, 0x5c, 0x20, 0x7e, 0x7d, 0x86, 0x27, 0x7e,
	0x37, 0x8b, 0xf6, 0xa4, 0x7f, 0x03, 0xe0, 0x8e, 0x8c, 0xb3, 0xfc, 0x88, 0xe3, 0x9d, 0x0d, 0x2f,
	0x1b, 0xcd, 0x2e, 0x57, 0x78, 0xd0, 0x64, 0x8c, 0x0e, 0xc2, 0x71, 0x76, 0x15, 0xb4, 0xe0, 0xd4,
	0xc5, 0x75, 0x44, 0x5a, 0x72, 0x02, 0x0e, 0x6b, 0xa3, 0x38, 0xe7, 0x53, 0xfe, 0xf7, 0xe7, 0x3b,
	0xe1, 0xad, 0x2b, 0xef, 0xc3, 0xaf, 0xac, 0x1b, 0xe7, 0xb5, 0xb9, 0x19, 0x4f, 0xfc, 0x42, 0xed,
	0x57, 0x95, 0x5f, 0x48, 0x2e, 0xde, 0x8e, 0xab, 0x61, 0xf1, 0x26, 0xbb, 0xa3, 0x93, 0xad, 0xec,
	0x39, 0x76, 0xa3, 0x5b, 0xba, 0x6d, 0x53, 0xa7, 0xf1, 0x91, 0x9f, 0x8a, 0x72, 0x9e, 0x0b, 0xfc,
	0x66, 0x03, 0xd7, 0x98, 0x0f, 0x60, 0x1d, 0x3b, 0x7d, 0xbe, 0xf8, 0x7f, 0xa7, 0x03, 0xde, 0xf4,
	0xfa, 0x2a, 0x48, 0xad, 0x82, 0xd3, 0xe9, 0x45, 0xf0, 0x50, 0x8c, 0xee, 0xb7, 0x46, 0xd6, 0xb0,
	0x02, 0x5a, 0x75, 0x7c, 0x55, 0x32, 0xe9, 0x67, 0x41, 0x8c, 0x3e, 0x0d, 0xe0, 0xcb, 0xc0, 0x5a,
	0x48, 0x87, 0x27, 0x35, 0x84, 0x99, 0xe9, 0x25, 0xe7, 0xed, 0xcc, 0x57, 0x2a, 0x39, 0x54, 0x71,
	0x9a, 0xf2, 0xac, 0xfd, 0x69, 0xeb, 0x93, 0x5e, 0x32, 0x15, 0x9a, 0xeb, 0xa2, 0x36, 0xf5, 0x45,
	0x9c, 0xfc, 0xff, 0x76, 0xc2, 0x1b, 0x5b, 0xec, 0x46, 0xae, 0x32, 0x2e, 0xbe, 0xea, 0x37, 0xfb,
	0x89, 0x1e, 0xe9, 0xb8, 0x3a, 0xf5, 0x48, 0xe7, 0xd5, 0xb0, 0x44, 0xdf, 0x0d, 0x62, 0xf4, 0xe3,
	0x00, 0xbe, 0x03, 0xb0, 0x8b, 0x81, 0x79, 0x0d, 0xa2, 0xaa, 0x0c, 0x5a, 0xfe, 0xa0, 0xe6, 0x2c,
	0x38, 0x35, 0x76, 0x8d, 0xe2, 0xf2, 0x79, 0x03, 0xf8, 0xf2, 0xfb, 0x3f, 0x3b, 0xe0, 0x8d, 0x2d,
	0xdc, 0x6c, 0xaf, 0x2f, 0xbf, 0x57, 0x76, 0xf9, 0x9d, 0x4e, 0xaf, 0xbe, 0xcb, 0xa5, 0xc0, 0x9e,
	0x5f, 0x65, 0x75, 0xbc, 0x62, 0x27, 0xdc, 0x89, 0x01, 0xf5, 0xb0, 0xb2, 0x01, 0x92, 0xf1, 0x5e,
	0x72, 0x32, 0x8a, 0x4a, 0x62, 0x77, 0x07, 0xf2, 0x6e, 0x90, 0x4b, 0xe7, 0xfb, 0xe7, 0xda, 0xe1,
	0xa6, 0x14, 0xa3, 0x6b, 0x5f, 0x4d, 0x9d, 0xae, 0x76, 0x5b, 0xbd, 0x66, 0xea, 0xfd, 0x55, 0x23,
	0x0d, 0xff, 0x35, 0x80, 0x5d, 0x6a, 0x62, 0x99, 0x4c, 0x38, 0xe3, 0x6b, 0x45, 0x18, 0x6e, 0xac,
	0x89, 0xd8, 0xd3, 0x25, 0xd8, 0xc9, 0xa6, 0xc0, 0x19, 0xff, 0x15, 0x60, 0x48, 0x3e, 0xa0, 0xf1,
	0x8f, 0x9d, 0xb0, 0x2f, 0x73, 0xe9, 0x32, 0x27, 0x98, 0xc0, 0xa5, 0x0a, 0xa6, 0x5f, 0x4a, 0x7c,
	0xe8, 0x25, 0xea, 0x43, 0x97, 0x19, 0xcc, 0x13, 0x86, 0xa1, 0x17, 0x43, 0x18, 0xe4, 0xd9, 0x7a,
	0x53, 0x74, 0xaa, 0x35, 0x32, 0x11, 0x36, 0xa3, 0xaa, 0x1f, 0x04, 0xb8, 0x1a, 0x89, 0x7a, 0x44,
	0xba, 0x98, 0x16, 0xab, 0x6b, 0x28, 0x4b, 0x53, 0x34, 0x70, 0x35, 0x4c, 0x2e, 0x22, 0x11, 0x2e,
	0xa2, 0x28, 0x4b, 0xb3, 0x0f, 0x0f, 0xde, 0x15, 0x89, 0x6c, 0xcc, 0xbc, 0xf7, 0xbc, 0xed, 0xd5,
	0xf1, 0x9e, 0x6b, 0x3f, 0x56, 0x82, 0x5d, 0x75, 0x1c, 0xd9, 0x34, 0x1e, 0x96, 0xc7, 0x7f, 0xed,
	0xcc, 0x5e, 0x90, 0x15, 0x2c, 0x35, 0xfa, 0x7b, 0x20, 0x46, 0x5f, 0x07, 0xd6, 0xbf, 0x07, 0x67,
	0xb0, 0x72, 0xfb, 0xd3, 0x0f, 0xb0, 0x8e, 0xbd, 0x28, 0x20, 0x62, 0xc6, 0xf1, 0xf4, 0x79, 0x1c,
	0xd0, 0x02, 0x75, 0x9e, 0xbe, 0x88, 0xd9, 0x17, 0xbc, 0x1b, 0x99, 0xe1, 0xc7, 0x0e, 0x75, 0x27,
	0x52, 0xc3, 0x6e, 0xc9, 0xf4, 0xa2, 0xc8, 0xae, 0xce, 0xb3, 0xce, 0x68, 0x63, 0xdf, 0xc3, 0x6a,
	0x7c, 0x3f, 0xb1, 0xac, 0x95, 0xc8, 0x6d, 0x7a, 0x11, 0x55, 0x7d, 0xcd, 0x11, 0x95, 0xb9, 0x8a,
	0x3a, 0xa8, 0x37, 0x1b, 0x82, 0x45, 0xed, 0xba, 0xdf, 0xf4, 0x22, 0xbd, 0xea, 0x7b, 0xb3, 0xce,
	0x5c, 0x93, 0xd5, 0xd8, 0xaa, 0xf3, 0x1e, 0x46, 0xfe, 0x18, 0xc4, 0xe8, 0xbb, 0x00, 0xfe, 0x01,
	0xb0, 0xbe, 0x04, 0xe8, 0x55, 0x59, 0x01, 0xb3, 0x14, 0x3f, 0xcc, 0x87, 0x94, 0xbd, 0x18, 0x9c,
	0xbd, 0xfa, 0x2a, 0x22, 0xe2, 0x19, 0x5f, 0x50, 0xa0, 0x28, 0x91, 0x04, 0xf7, 0xe8, 0xfe, 0x02,
	0x0e, 0x02, 0x7a, 0xcd, 0x98, 0xd6, 0x85, 0x0b, 0x42, 0xc1, 0x2a, 0xf4, 0x9a, 0xad, 0x23, 0xf3,
	0x63, 0x21, 0x19, 0xfd, 0xbc, 0x44, 0x51, 0x4d, 0xa4, 0x06, 0xbd, 0x1b, 0x9c, 0x32, 0x5d, 0xe4,
	0xcd, 0x5e, 0x86, 0x99, 0x9c, 0x84, 0x16, 0x67, 0x11, 0xff, 0xb2, 0x1d, 0x76, 0x49, 0xd6, 0xd2,
	0x7e, 0x1d, 0xc0, 0x8d, 0x52, 0x7b, 0x03, 0xaa, 0xbd, 0x7f, 0x1e, 0xc4, 0xe8, 0x63, 0xc0, 0xfa,
	0x10, 0x10, 0xca, 0x5b, 0x3d, 0x36, 0x49, 0x6e, 0x38, 0x2a, 0xeb, 0x9f, 0x16, 0xc8, 0x92, 0xa5,
	0x01, 0x39, 0x7f, 0x31, 0x49, 0x12, 0x60, 0x76, 0xe9, 0x4e, 0xb9, 0xb6, 0x1a, 0xe2, 0x1a, 0x2b,
	0xa7, 0xb9, 0x4f, 0x37, 0x4d, 0x93, 0x1a, 0x5b, 0x55, 0x3b, 0xe2, 0x75, 0x4a, 0xe9, 0x46, 0x88,
	0xcb, 0xb1, 0x39, 0x2a, 0x2f, 0xb1, 0x1e, 0xd2, 0x75, 0xbf, 0x80, 0x83, 0xc5, 0xc0, 0x89, 0x30,
	0x35, 0x06, 0x24, 0xcc, 0xda, 0x4b, 0x00, 0x6e, 0x14, 0x88, 0xe4, 0x5e, 0xb3, 0x9c, 0xbe, 0x65,
	0x77, 0xad, 0x64, 0x0f, 0xa1, 0x2a, 0x49, 0x93, 0xe8, 0xef, 0x64, 0x2e, 0x2a, 0x33, 0x25, 0xb4,
	0x20, 0x64, 0x1a, 0xf6, 0x03, 0xb1, 0x74, 0x89, 0xf8, 0x48, 0x2f, 0xed, 0x94, 0x90, 0x64, 0x73,
	0xa8, 0x48, 0xd8, 0x94, 0x14, 0xe3, 0x2f, 0x00, 0x91, 0x6a, 0x96, 0x61, 0x92, 0xdd, 0xaa, 0x26,
	0xfd, 0x49, 0xba, 0x30, 0xec, 0x39, 0xcc, 0x20, 0xe2, 0x02, 0x98, 0xe2, 0x92, 0x17, 0xc1, 0xe1,
	0x9a, 0x88, 0xc8, 0x61, 0x87, 0x06, 0x70, 0x73, 0x69, 0xb0, 0x68, 0x2f, 0x0d, 0x32, 0xde, 0xa0,
	0xc5, 0x32, 0x69, 0x1d, 0x60, 0xd2, 0xd6, 0xf3, 0x23, 0xaa, 0x60, 0x54, 0x15, 0x22, 0x90, 0xb4,
	0x0c, 0x36, 0x2a, 0x6a, 0x5b, 0xc0, 0x6b, 0xbc, 0xbd, 0x3d, 0x39, 0xad, 0xc8, 0x2c, 0x7e, 0xb2,
	0x6d, 0xc9, 0x72, 0x0d, 0x97, 0xb0, 0x2f, 0xac, 0x9d, 0x6b, 0x32, 0x9d, 0xaf, 0xc8, 0x30, 0x83,
	0xfa, 0x65, 0x61, 0x16, 0x0c, 0xb7, 0x4a, 0x09, 0x47, 0x6f, 0xbb, 0x48, 0x25, 0x01, 0x8a, 0x6f,
	0xe5, 0xef, 0x8e, 0xd1, 0x0d, 0xd6, 0x75, 0x72, 0x8d, 0x11, 0x86, 0xa0, 0x2f, 0x18, 0xcd, 0xe8,
	0x8d, 0xda, 0xcd, 0xf5, 0x4c, 0xa3, 0x70, 0xe4, 0x77, 0x40, 0x8c, 0xfe, 0x1d, 0x80, 0xbf, 0x09,
	0xac, 0x8f, 0x02, 0xd9, 0x56, 0x4d, 0xcb, 0xac, 0xd6, 0x8f, 0x6b, 0xd0, 0xba, 0x57, 0x72, 0xc3,
	0x91, 0xc5, 0x4a, 0x22, 0xe7, 0x8e, 0x0a, 0xf9, 0xa2, 0x46, 0x4b, 0x33, 0x37, 0x2e, 0xc7, 0x81,
	0x52, 0xe8, 0x84, 0xf5, 0x5b, 0xd8, 0x99, 0xae, 0x50, 0x3b, 0xf9, 0xb3, 0x10, 0x31, 0xc6, 0x37,
	0x4b, 0xb0, 0x3f, 0x8b, 0x14, 0xed, 0x40, 0xce, 0xd5, 0xcd, 0xaa, 0xd0, 0xf1, 0x2b, 0xc3, 0xea,
	0xea, 0x21, 0xdf, 0x24, 0xe6, 0xf6, 0x44, 0x46, 0x2b, 0xb3, 0xeb, 0xc6, 0xbc, 0x19, 0x67, 0xea,
	0x94, 0x81, 0x9d, 0xde, 0x17, 0xbd, 0x66, 0x62, 0x94, 0xef, 0x8d, 0xd1, 0xdd, 0xf0, 0x4e, 0xeb,
	0x86, 0x02, 0xbe, 0x20, 0x7d, 0x3b, 0x5e, 0x88, 0x83, 0x28, 0x2c, 0x3c, 0x09, 0xfe, 0x4e, 0x09,
	0xf6, 0xa6, 0xa5, 0x93, 0x56, 0x53, 0x8d, 0xc7, 0xdc, 0xa5, 0x26, 0x96, 0xd3, 0x71, 0xed, 0xb2,
	0x4b, 0xac, 0x6e, 0x16, 0x2e, 0x95, 0x98, 0x7c, 0xbf, 0x00, 0xa4, 0xcd, 0xc7, 0xb6, 0x4b, 0xef,
	0x02, 0x31, 0xfa, 0x31, 0x60, 0xbd, 0x1d, 0x38, 0x79, 0x49, 0xc6, 0xab, 0x34, 0x26, 0x59, 0xfa,
	0x32, 0xd6, 0xa0, 0x30, 0x02, 0x87, 0x64, 0xbd, 0x66, 0x9e, 0x9e, 0x8f, 0x19, 0x4e, 0x2b, 0x19,
	0x85, 0x52, 0xfb, 0x11, 0x4c, 0x85, 0x91, 0x4f, 0xef, 0x7b, 0x73, 0xc8, 0x64, 0xf9, 0xbd, 0x9c,
	0x8a, 0x1c, 0xa4, 0x3a, 0x92, 0x7a, 0xd2, 0xf8, 0x3d, 0xa0, 0x14, 0xc0, 0xc6, 0xbf, 0xed, 0x84,
	0xbb, 0x5a, 0x66, 0x53, 0xb8, 0xfc, 0xf6, 0xe5, 0x67, 0x41, 0xfa, 0x70, 0xed, 0x35, 0x6c, 0x5e,
	0xf2, 0x2d, 0xca, 0x73, 0xa0, 0xc5, 0x5e, 0xfd, 0x8d, 0x31, 0x7a, 0xe2, 0x72, 0xee, 0xd5, 0x9d,
	0x6b, 0xe8, 0x7f, 0x7f, 0xfd, 0x50, 0xd1, 0xa6, 0x3d, 0xa5, 0xac, 0xdb, 0x5f, 0xc3, 0xca, 0xfa,
	0x07, 0x20, 0x46, 0xdf, 0x07, 0xf0, 0xcf, 0x7e, 0xc8, 0x6c, 0x40, 0xc6, 0x0c, 0xf9, 0x63, 0xf2,
	0xa7, 0x64, 0x52, 0xfc, 0x50, 0x54, 0x2f, 0x7d, 0x24, 0x49, 0xb2, 0xcf, 0x2b, 0x2b, 0x10, 0xdc,
	0x8b, 0x7c, 0xad, 0xec, 0x42, 0x24, 0x5e, 0x60, 0x61, 0x94, 0x01, 0x66, 0xc5, 0xdc, 0xf5, 0x86,
	0xbd, 0xc4, 0xca, 0x36, 0xfa, 0x6a, 0x4e, 0x27, 0xe3, 0xbd, 0x25, 0x59, 0xc4, 0x39, 0xd4, 0x4e,
	0xc0, 0xb6, 0xa7, 0x17, 0x23, 0xbe, 0x06, 0x1f, 0x8c, 0xd1, 0x7d, 0xd6, 0xbd, 0x53, 0xf9, 0xca,
	0xc0, 0xb9, 0x9a, 0xc0, 0x32, 0x49, 0xcd, 0xcc, 0x12, 0xab, 0x26, 0xfd, 0xd4, 0x9e, 0xbd, 0x66,
	0x85, 0x74, 0xa5, 0x1d, 0x17, 0x45, 0x71, 0x4b, 0x05, 0x45, 0x71, 0x6f, 0x8f, 0xd1, 0x1e, 0xeb,
	0xd6, 0x74, 0x51, 0x5c, 0x5e, 0x36, 0x80, 0xec, 0x47, 0x66, 0x30, 0xf6, 0xf4, 0xb9, 0xc0, 0xf6,
	0x68, 0xf2, 0x3d, 0xd6, 0xcf, 0xc8, 0x9b, 0x63, 0xf4, 0x14, 0x7c, 0xd2, 0x7a, 0xf4, 0x91, 0xd0,
	0xf7, 0xce, 0xe0, 0x19, 0x56, 0x65, 0x38, 0x10, 0xf8, 0x60, 0xea, 0x23, 0x6c, 0x56, 0xab, 0x38,
	0x0c, 0x67, 0x9b, 0x2e, 0xab, 0x80, 0xcb, 0xaf, 0xa3, 0x78, 0x55, 0xb7, 0x59, 0x13, 0xb9, 0x58,
	0x58, 0x69, 0x45, 0xda, 0xe7, 0x32, 0x20, 0xa0, 0x2e, 0x03, 0x36, 0x82, 0xf1, 0x23, 0xb2, 0xd0,
	0x33, 0x2f, 0x9b, 0x1c, 0x6a, 0x43, 0xe9, 0xb2, 0xc9, 0x49, 0x7a, 0x8b, 0x54, 0x6d, 0x66, 0x59,
	0x02, 0x79, 0x24, 0x46, 0x07, 0xe0, 0x5d, 0xd6, 0xed, 0xb4, 0x1b, 0xbc, 0x1a, 0x88, 0x4e, 0x18,
	0x12, 0xba, 0xf3, 0x8a, 0xc7, 0x0d, 0x51, 0x4d, 0x36, 0xd4, 0xee, 0x55, 0xaa, 0x59, 0x76, 0x5b,
	0x1d, 0x26, 0x79, 0x3e, 0x7a, 0x43, 0x8c, 0xae, 0xb5, 0x76, 0x91, 0xb1, 0x67, 0x9b, 0xf4, 0x32,
	0x5c, 0xba, 0x16, 0x38, 0x2f, 0x2b, 0x5b, 0x8e, 0xd1, 0x6d, 0xf0, 0x16, 0xeb, 0xba, 0xe2, 0x6a,
	0x0c, 0xac, 0xda, 0xb0, 0x28, 0x21, 0xfb, 0x5f, 0x01, 0xec, 0x39, 0xe2, 0x84, 0xb4, 0x98, 0x66,
	0x48, 0xc6, 0x3d, 0x0a, 0xbb, 0x23, 0x3f, 0xb2, 0xdd, 0x69, 0x8a, 0x23, 0x5e, 0x59, 0x82, 0x4a,
	0xe4, 0x9b, 0xa6, 0xc8, 0x73, 0x25, 0x19, 0x2c, 0xc3, 0x62, 0xaa, 0x7a, 0x0f, 0x95, 0x2d, 0x90,
	0x76, 0x40, 0x7b, 0xd4, 0x1e, 0x86, 0x1d, 0xac, 0x23, 0xc6, 0x02, 0x7c, 0x1e, 0x37, 0xc5, 0x48,
	0xb7, 0x6e, 0x98, 0x92, 0x94, 0x48, 0x95, 0xf8, 0x16, 0x4c, 0xc2, 0x1a, 0x8e, 0x10, 0x3d, 0x0b,
	0x0f, 0x58, 0x37, 0x16, 0xcf, 0x86, 0x63, 0x21, 0x34, 0x97, 0x01, 0xfb, 0x7e, 0x19, 0xa8, 0xf0,
	0x1b, 0x1f, 0x2a, 0x41, 0x2d, 0x29, 0x48, 0x80, 0x88, 0xd9, 0x40, 0x66, 0x79, 0x06, 0x6e, 0x62,
	0x5f, 0xb1, 0x65, 0x28, 0xe6, 0x49, 0x1d, 0xb9, 0x7b, 0xb3, 0xf3, 0x54, 0x2b, 0x97, 0xe4, 0x67,
	0xdb, 0x43, 0x3b, 0xe2, 0x5f, 0x68, 0x27, 0xa4, 0x46, 0xa3, 0x25, 0x51, 0x53, 0xf6, 0x54, 0xba,
	0xb0, 0x06, 0x33, 0x61, 0x94, 0xee, 0x93, 0x32, 0xaa, 0xdd, 0x49, 0x12, 0x9a, 0x50, 0x14, 0xb6,
	0xbc, 0xb3, 0x55, 0x6d, 0x8d, 0xa2, 0x7e, 0x02, 0x5c, 0xf5, 0x83, 0x1a, 0x41, 0xca, 0x06, 0x3e,
	0xc1, 0x65, 0x90, 0x9e, 0xb0, 0xf1, 0x56, 0xb2, 0xf4, 0x59, 0xca, 0xd0, 0x50, 0x3b, 0x90, 0xaa,
	0x72, 0xd5, 0x35, 0x7a, 0x63, 0x8c, 0xae, 0xb3, 0x06, 0x8a, 0x0b, 0x81, 0x84, 0x44, 0xe9, 0xf2,
	0xcf, 0xb5, 0xa9, 0x02, 0xcf, 0x75, 0xb6, 0x44, 0xa1, 0x20, 0x76, 0x51, 0x67, 0xc5, 0xc1, 0xb7,
	0x38, 0x46, 0x33, 0xf0, 0xcd, 0x16, 0x5a, 0xbd, 0x68, 0x96, 0x6e, 0x7b, 0xc4, 0xfc, 0x70, 0x5d,
	0x6a, 0x25, 0x66, 0x0b, 0x0c, 0x9a, 0xcb, 0xa0, 0x9b, 0x26, 0xab, 0x62, 0x9d, 0x67, 0xc3, 0x6a,
	0x5f, 0x00, 0x70, 0x93, 0xb0, 0x4d, 0x26, 0xc7, 0x09, 0x1e, 0x1e, 0x4d, 0x7b, 0xf7, 0x99, 0x0d,
	0x41, 0x96, 0x93, 0x75, 0x0b, 0x61, 0xd6, 0xf5, 0x25, 0x43, 0x1a, 0x8e, 0xd1, 0x20, 0x2c, 0xa7,
	0xd0, 0x48, 0x58, 0x47, 0x7c, 0xae, 0x4f, 0x8e, 0x67, 0xb2, 0x1f, 0x3d, 0x07, 0xe0, 0x96, 0x74,
	0xc2, 0x2d, 0x06, 0xd5, 0x1a, 0x53, 0x6e, 0xdd, 0x58, 0x00, 0x7c, 0xea, 0x98, 0xe1, 0x66, 0xd8,
	0x41, 0x6f, 0xb3, 0x4a, 0xa7, 0xee, 0x04, 0xf9, 0x25, 0x90, 0x5c, 0x61, 0x2f, 0x8d, 0x6f, 0xb5,
	0xab, 0x89, 0xa2, 0xc2, 0x2b, 0x73, 0xe2, 0x11, 0x65, 0x6b, 0x5b, 0x0a, 0x0d, 0xc1, 0xb2, 0xd5,
	0x30, 0xc6, 0x61, 0x25, 0x7c, 0x91, 0x3c, 0x80, 0xe5, 0xfc, 0x27, 0xcb, 0x47, 0x36, 0x43, 0x71,
	0xcb, 0x9e, 0xef, 0x54, 0x52, 0xe1, 0xd6, 0x81, 0xbf, 0x98, 0xa9, 0x60, 0xa9, 0xbd, 0x19, 0x6e,
	0x4d, 0x27, 0xfe, 0x4a, 0x5d, 0x05, 0x65, 0x05, 0x95, 0xc5, 0x70, 0x8a, 0x2d, 0x45, 0x15, 0x77,
	0xee, 0xbc, 0xa9, 0xa2, 0xa9, 0x19, 0xbb, 0xd8, 0x06, 0x53, 0xfb, 0xfc, 0xca, 0xe9, 0x3f, 0xba,
	0xad, 0xdb, 0xf8, 0x0c, 0xe9, 0xf7, 0x28, 0xf9, 0x52, 0x58, 0x0a, 0xc2, 0x22, 0x1b, 0x9d, 0x8a,
	0xd1, 0x49, 0xeb, 0xb8, 0x48, 0x79, 0xc3, 0xdc, 0xde, 0x73, 0x34, 0x1a, 0xd6, 0x99, 0xd5, 0x6d,
	0x6f, 0x89, 0x67, 0x1e, 0xf3, 0x9b, 0x6e, 0x8d, 0x29, 0x4c, 0x9b, 0xda, 0x01, 0x29, 0xd3, 0x25,
	0xbb, 0xf7, 0x68, 0x75, 0x27, 0xfe, 0x4d, 0x31, 0x7a, 0x12, 0x3e, 0x91, 0x5f, 0xa3, 0x69, 0x6c,
	0x66, 0x0f, 0x1a, 0x34, 0x65, 0x69, 0x71, 0x32, 0x2e, 0x83, 0x2d, 0x05, 0x08, 0x36, 0xbe, 0xdb,
	0x0e, 0x37, 0xa7, 0x53, 0x7a, 0x11, 0xc6, 0x7a, 0x16, 0x16, 0xf4, 0xb0, 0x13, 0x14, 0x30, 0x02,
	0x3b, 0xfe, 0x59, 0x0b, 0x23, 0xe0, 0x30, 0xcf, 0x05, 0xa1, 0x59, 0xe9, 0x27, 0x03, 0xa9, 0xb2,
	0x41, 0x9b, 0x85, 0xdd, 0x3c, 0xe1, 0x11, 0xf9, 0x82, 0xb3, 0xdf, 0x36, 0x33, 0x0b, 0x25, 0x11,
	0xa3, 0x19, 0xc6, 0xc8, 0x75, 0x2f, 0xbd, 0xfc, 0x2c, 0x5e, 0xcb, 0xac, 0x40, 0xd6, 0x73, 0xc5,
	0x5f, 0x5c, 0x91, 0x21, 0xda, 0x5e, 0xbb, 0x0c, 0xf1, 0xaf, 0x40, 0x8c, 0x3e, 0x0e, 0xe0, 0xcf,
	0x01, 0xab, 0xaa, 0xf2, 0x84, 0xeb, 0xaa, 0xa2, 0xb7, 0x18, 0x11, 0x2c, 0x88, 0x2f, 0x29, 0x35,
	0xc9, 0x36, 0xac, 0xc4, 0x10, 0xf5, 0x42, 0x02, 0x02, 0x1f, 0x9d, 0x5a, 0x8c, 0x1c, 0x61, 0x6b,
	0x62, 0xac, 0x6d, 0x85, 0x58, 0x34, 0x42, 0xb8, 0x91, 0x66, 0x51, 0x23, 0x0c, 0xf5, 0x10, 0xec,
	0xa8, 0x92, 0xbf, 0xb9, 0x32, 0xa7, 0x89, 0x1b, 0x69, 0xba, 0x6a, 0xfa, 0x54, 0xec, 0x9a, 0x78,
	0x05, 0x29, 0x5c, 0x63, 0x76, 0x33, 0xd5, 0xe1, 0xac, 0xdd, 0xc8, 0xad, 0x31, 0xba, 0x09, 0xee,
	0xb6, 0x76, 0x1c, 0xc2, 0x1e, 0x0e, 0x9c, 0x2a, 0x6f, 0x27, 0x8c, 0x37, 0x62, 0x62, 0xd0, 0x27,
	0xc6, 0x27, 0xda, 0x60, 0x0f, 0xb1, 0x63, 0xe4, 0xc8, 0x6f, 0x60, 0x6a, 0x70, 0x01, 0xa7, 0xac,
	0x26, 0x9a, 0xa1, 0xcb, 0x3c, 0x96, 0xb2, 0x97, 0x14, 0x84, 0xb0, 0x16, 0x74, 0x7f, 0x41, 0x36,
	0x0e, 0xd4, 0x58, 0x65, 0xe0, 0x74, 0xb3, 0x57, 0xcc, 0x82, 0x72, 0x61, 0x6f, 0xcd, 0x09, 0xed,
	0x19, 0x17, 0xd7, 0xa6, 0x85, 0x29, 0x45, 0x7a, 0x9f, 0x88, 0xd1, 0xa8, 0x75, 0x7f, 0xcb, 0xde,
	0x3d, 0x3f, 0x52, 0x47, 0x20, 0x8f, 0x98, 0x39, 0xec, 0x78, 0xf3, 0xce, 0x8c, 0x13, 0xc9, 0x24,
	0xf7, 0xa2, 0x73, 0x36, 0xda, 0x13, 0x69, 0xf3, 0xaf, 0x8d, 0x0e, 0x75, 0x4f, 0x8c, 0xee, 0xb2,
	0x86, 0x93, 0xa1, 0xca, 0xe8, 0xc8, 0x91, 0xb2, 0x34, 0xff, 0x6a, 0xb8, 0x81, 0x3d, 0x22, 0xf8,
	0x05, 0x86, 0xc3, 0xc8, 0x8e, 0xb0, 0x99, 0x35, 0x05, 0x47, 0xfc, 0x18, 0xb9, 0xf0, 0x69, 0x6b,
	0x24, 0x89, 0x18, 0x93, 0x74, 0xa1, 0x41, 0x36, 0x84, 0xf3, 0x12, 0xb3, 0x52, 0x64, 0xf4, 0xa4,
	0x1d, 0xb0, 0x2f, 0xc5, 0xb6, 0x49, 0xa0, 0x79, 0x19, 0x64, 0x30, 0x93, 0xb1, 0xfd, 0xde, 0x5a,
	0xe2, 0x99, 0xed, 0x88, 0x12, 0xdb, 0x14, 0x62, 0x97, 0x25, 0x4a, 0x26, 0xab, 0x8d, 0x9b, 0xd5,
	0xfd, 0xe6, 0x29, 0xfa, 0x94, 0x7d, 0xd5, 0x74, 0xa3, 0xd1, 0x81, 0x18, 0xed, 0xb0, 0xb6, 0x1d,
	0xe6, 0xa6, 0xf2, 0xa9, 0x89, 0x23, 0x13, 0x63, 0x53, 0x3c, 0x57, 0xdb, 0xe1, 0x6b, 0x2a, 0x3d,
	0xac, 0x13, 0xf6, 0xad, 0xf6, 0x14, 0xdc, 0x44, 0xd8, 0x7e, 0xda, 0x9e, 0x9d, 0xc5, 0xd5, 0x08,
	0xd7, 0x38, 0x61, 0x68, 0x5a, 0xa2, 0xa1, 0x04, 0x5b, 0x74, 0x69, 0x88, 0x6f, 0x44, 0x61, 0x29,
	0x91, 0xf7, 0x8e, 0x6e, 0x5e, 0x29, 0xae, 0x48, 0xf7, 0xe4, 0x53, 0xc4, 0xbf, 0x14, 0x1b, 0x89,
	0xc1, 0x04, 0x5f, 0xc9, 0x19, 0xa4, 0xf0, 0x48, 0xd0, 0x4c, 0x71, 0x92, 0x43, 0x89, 0xc1, 0xd7,
	0x7e, 0xd6, 0xf1, 0x6a, 0xa3, 0x9d, 0x90, 0xfe, 0x6b, 0xfc, 0x31, 0x37, 0xef, 0xc9, 0x8e, 0x2b,
	0x6d, 0xde, 0xb3, 0x8d, 0xd9, 0x4a, 0xe6, 0x3d, 0xdb, 0x92, 0xb5, 0x32, 0xef, 0x69, 0x8f, 0xda,
	0xe8, 0x4a, 0x3b, 0xbc, 0x64, 0xb7, 0xc2, 0xba, 0xca, 0xca, 0x49, 0xbe, 0xa9, 0xe3, 0x4e, 0xbb,
	0xeb, 0x68, 0x8f, 0x3a, 0xc3, 0x70, 0x82, 0x28, 0xf6, 0xb1, 0xd8, 0x9f, 0x49, 0x0a, 0xb3, 0xdd,
	0xda, 0xdb, 0x4a, 0xb0, 0x5f, 0xec, 0x5e, 0xe4, 0x14, 0x8f, 0x15, 0x4d, 0x91, 0x5a, 0xe0, 0x37,
	0xaf, 0x61, 0x8a, 0x66, 0x6e, 0x8e, 0x6f, 0x5c, 0x69, 0x8e, 0x74, 0x69, 0xdc, 0xb1, 0xf2, 0x2e,
	0xd6, 0x0e, 0x43, 0x67, 0xce, 0x63, 0x9e, 0x77, 0xb1, 0xfb, 0x94, 0xb3, 0xe7, 0x79, 0x38, 0x8c,
	0xf4, 0xae, 0x9e, 0x2c, 0x88, 0x04, 0x69, 0x6c, 0xcf, 0xd6, 0x02, 0x07, 0xff, 0x77, 0x7b, 0x8b,
	0x9c, 0x99, 0xa1, 0xf6, 0xb4, 0xcc, 0x1c, 0xb8, 0x82, 0x72, 0x65, 0x79, 0x04, 0xb3, 0xca, 0x55,
	0xea, 0x56, 0xe9, 0x76, 0xcb, 0x29, 0x55, 0x9e, 0x47, 0x90, 0x2b, 0xd4, 0x2a, 0xec, 0x63, 0x50,
	0x09, 0x51, 0x2e, 0xe4, 0x14, 0xad, 0xa7, 0xb9, 0x3f, 0xbf, 0xa7, 0xe2, 0xfd, 0x15, 0xd6, 0xbe,
	0x10, 0xf5, 0x4b, 0x7a, 0x69, 0x97, 0x72, 0x4e, 0xda, 0x0c, 0x6c, 0xa7, 0xea, 0xba, 0x6d, 0x25,
	0x75, 0x9d, 0x24, 0x46, 0xb4, 0xab, 0x3c, 0xe3, 0xaa, 0xe8, 0x75, 0x28, 0xaf, 0xb3, 0x28, 0xba,
	0xa9, 0x26, 0xa8, 0xd0, 0xbe, 0xaf, 0x52, 0x13, 0xae, 0x19, 0xa3, 0x00, 0x36, 0xac, 0x41, 0xc9,
	0x46, 0xf9, 0x3c, 0xa7, 0x19, 0xb7, 0x60, 0xb9, 0x9c, 0x24, 0x7d, 0x14, 0x4a, 0x96, 0x62, 0x60,
	0x19, 0x64, 0x29, 0xd9, 0xba, 0xfc, 0xc4, 0xa7, 0xb2, 0x89, 0x91, 0x88, 0x2e, 0xdc, 0x94, 0x3a,
	0xb1, 0xe0, 0xa2, 0xb6, 0x47, 0x3d, 0xc3, 0xe1, 0x21, 0x41, 0xa8, 0x45, 0x7e, 0x23, 0xc5, 0xc7,
	0x56, 0xe9, 0x56, 0x4e, 0x71, 0x84, 0x2f, 0xe0, 0x16, 0x65, 0x96, 0x76, 0x24, 0x1d, 0x1b, 0xb9,
	0xab, 0x1d, 0x69, 0x40, 0x8c, 0x4f, 0x96, 0xe0, 0x16, 0xe5, 0x0b, 0xe9, 0x0c, 0x70, 0xe0, 0x56,
	0x36, 0xe1, 0xd4, 0xe7, 0x42, 0x72, 0x30, 0xe5, 0x97, 0xe7, 0x5f, 0x91, 0xe3, 0x99, 0xa5, 0xc6,
	0x29, 0x12, 0x22, 0x9b, 0x69, 0xaf, 0xea, 0xa1, 0x90, 0xe6, 0xc0, 0xde, 0xcc, 0x20, 0x42, 0xa8,
	0xa8, 0xd8, 0xb9, 0x2b, 0x46, 0x96, 0xb5, 0x6f, 0xaa, 0x20, 0x03, 0x8f, 0xea, 0xed, 0x4d, 0x0c,
	0x19, 0x26, 0x23, 0x2b, 0x3d, 0x0a, 0xaa, 0xa4, 0xdf, 0xe4, 0xe6, 0x22, 0x5c, 0x65, 0xbb, 0x5d,
	0x06, 0x19, 0xb0, 0x8c, 0xaf, 0xb7, 0xb1, 0x1b, 0x15, 0xf9, 0xf4, 0x3e, 0x57, 0x68, 0x47, 0xf8,
	0xa3, 0x70, 0x47, 0x96, 0x08, 0x3c, 0x5e, 0x81, 0xcb, 0x91, 0x43, 0x31, 0x1a, 0xb7, 0x1e, 0xcc,
	0xd2, 0x41, 0x7a, 0x58, 0x45, 0x70, 0x03, 0x8b, 0x51, 0x10, 0xc2, 0xd6, 0x09, 0x53, 0x43, 0x52,
	0xb2, 0x6c, 0x4d, 0x91, 0x65, 0x82, 0xb5, 0xd3, 0xb0, 0x1a, 0x63, 0xd1, 0x96, 0x21, 0xca, 0xf1,
	0x66, 0xc4, 0xeb, 0x02, 0x0b, 0x39, 0x29, 0xc7, 0xe5, 0xae, 0x16, 0x91, 0x5a, 0xa1, 0x68, 0x54,
	0x35, 0x86, 0x21, 0x88, 0x91, 0x0f, 0xeb, 0xd6, 0x81, 0xc3, 0xd2, 0xa2, 0x4e, 0xf5, 0xa6, 0x9e,
	0x45, 0xca, 0xf5, 0xba, 0x42, 0xde, 0x9c, 0x04, 0xe6, 0x65, 0xd0, 0x0a, 0x7f, 0xc6, 0xf7, 0x4a,
	0x70, 0xd7, 0x21, 0x1c, 0x15, 0xa6, 0x3c, 0xb9, 0x42, 0xd4, 0xfc, 0x71, 0xa0, 0xa2, 0xb3, 0x94,
	0x91, 0x00, 0x04, 0x9d, 0xf4, 0x78, 0xe3, 0xcc, 0xc5, 0xa0, 0x53, 0xda, 0x11, 0xc9, 0x02, 0xc8,
	0x47, 0x54, 0x49, 0x84, 0xcf, 0xc6, 0xa8, 0x0a, 0x6d, 0x6b, 0x22, 0x8d, 0x70, 0xf5, 0xa4, 0x24,
	0x27, 0x7d, 0x92, 0xb1, 0xd7, 0x8e, 0x7e, 0xe3, 0xcf, 0x3b, 0xe0, 0xb5, 0xea, 0x82, 0x49, 0xdf,
	0x23, 0x0c, 0x5f, 0x0f, 0x1c, 0x5d, 0x35, 0x70, 0xf4, 0x39, 0xd0, 0x5a, 0x04, 0xb4, 0x53, 0x11,
	0x70, 0x24, 0x46, 0x93, 0xd6, 0xd8, 0xaa, 0x22, 0x40, 0x31, 0x27, 0x32, 0x37, 0x46, 0xc5, 0xc1,
	0xc7, 0x0a, 0x72, 0x20, 0xcd, 0xb9, 0x1d, 0x05, 0x82, 0xe0, 0x95, 0xe2, 0xdc, 0x9f, 0x02, 0x31,
	0x7a, 0x1f, 0x80, 0x2f, 0x80, 0xcb, 0x26, 0x2d, 0x56, 0x0b, 0x0d, 0x5d, 0x93, 0x34, 0xf9, 0xab,
	0x76, 0x78, 0xbd, 0x22, 0x4d, 0x72, 0xb7, 0xa6, 0x5f, 0x67, 0xf5, 0xd5, 0x59, 0x3d, 0xcd, 0x64,
	0xed, 0xaf, 0xa2, 0x78, 0xfc, 0x39, 0x10, 0xa3, 0x17, 0x01, 0xfc, 0x19, 0x60, 0x3d, 0xd5, 0x82,
	0xc9, 0x52, 0xa2, 0x32, 0xc4, 0x8d, 0xaa, 0x33, 0xeb, 0x54, 0xf3, 0xa9, 0x0f, 0xaf, 0x18, 0x2b,
	0x1a, 0xbf, 0x5a, 0x82, 0x9b, 0xe5, 0xb5, 0x5c, 0x7e, 0x15, 0x37, 0xd4, 0xea, 0xb0, 0x37, 0x71,
	0x35, 0x2a, 0x5e, 0x1f, 0x5a, 0x66, 0xe8, 0x81, 0x63, 0x19, 0x43, 0x4d, 0xb5, 0xa0, 0xa4, 0x8b,
	0x24, 0x41, 0x62, 0xba, 0x04, 0x1d, 0xa3, 0x98, 0xf4, 0xee, 0x92, 0xce, 0xb5, 0x79, 0x08, 0xa9,
	0x43, 0x93, 0x0d, 0xc5, 0x2c, 0x92, 0xc9, 0x18, 0x1d, 0xb4, 0x1e, 0xbe, 0xe8, 0xa1, 0xd8, 0x3d,
	0x22, 0x36, 0x5a, 0x17, 0xe9, 0x9c, 0x8e, 0x24, 0x2e, 0xc6, 0xde, 0xda, 0xc2, 0x4d, 0x22, 0x0a,
	0x96, 0xb0, 0x4c, 0x98, 0xe6, 0x32, 0xc8, 0xa0, 0x61, 0x19, 0x28, 0x80, 0x1a, 0xbf, 0x55, 0xca,
	0xe4, 0xd2, 0xa7, 0x45, 0x77, 0xe8, 0x1e, 0x0a, 0xf0, 0x18, 0x9d, 0x8a, 0x70, 0x56, 0x8e, 0x6e,
	0x8f, 0xd1, 0x16, 0x6b, 0x73, 0x6e, 0x8b, 0xb4, 0xfa, 0xbe, 0xa8, 0xf4, 0xda, 0xdd, 0x17, 0xf1,
	0x0c, 0xab, 0x77, 0xa8, 0x07, 0x65, 0x72, 0xc6, 0xa2, 0xb2, 0x7c, 0xe2, 0x9a, 0xa0, 0x17, 0x70,
	0xf9, 0xc2, 0xe1, 0xdb, 0x21, 0xe3, 0x17, 0xda, 0x61, 0x3f, 0x4d, 0x9e, 0x7c, 0xc2, 0x0e, 0xc3,
	0x45, 0x3f, 0xa8, 0x11, 0x2c, 0x56, 0xe0, 0xc6, 0x30, 0x0a, 0xb0, 0x37, 0x17, 0xcd, 0xf3, 0x38,
	0x3b, 0xea, 0xf6, 0xb9, 0x59, 0x3c, 0x14, 0xb2, 0xa2, 0xb1, 0x68, 0xdb, 0xa1, 0xbf, 0x18, 0x50,
	0xff, 0x74, 0x03, 0x07, 0x55, 0xec, 0x45, 0x4f, 0xb0, 0x48, 0x8c, 0x27, 0x1e, 0x66, 0x41, 0x70,
	0xa2, 0x89, 0x56, 0x87, 0xb0, 0x1a, 0xd8, 0xd5, 0xb3, 0xd3, 0x91, 0x23, 0x53, 0xa3, 0x1d, 0x8b,
	0xd1, 0xa3, 0xd6, 0xe4, 0x7c, 0xb3, 0x6e, 0xb3, 0x2a, 0x02, 0xf6, 0x8c, 0x8b, 0x53, 0x8b, 0x8d,
	0x47, 0xfe, 0xb8, 0x3e, 0xcb, 0x0c, 0x4c, 0x43, 0x59, 0x22, 0xfb, 0x2c, 0x66, 0x79, 0xb8, 0xed,
	0xea, 0x59, 0x06, 0x86, 0x00, 0xbd, 0x8b, 0x3e, 0x9b, 0x72, 0xea, 0x58, 0x7b, 0x2b, 0x8b, 0x95,
	0x71, 0x6a, 0x54, 0xf0, 0x6d, 0x1c, 0x7d, 0x3a, 0x46, 0x73, 0x16, 0xe6, 0xa9, 0x4d, 0x45, 0x03,
	0x4e, 0x86, 0x19, 0xcc, 0x53, 0xf5, 0xf3, 0xf2, 0x9e, 0x22, 0x05, 0x24, 0xf3, 0x65, 0xf0, 0xec,
	0xaa, 0x9e, 0xcf, 0x22, 0xfd, 0x66, 0x6d, 0xc7, 0x9d, 0x0e, 0xb0, 0x1d, 0x8a, 0xe2, 0x8b, 0x73,
	0xce, 0x82, 0x70, 0xfc, 0x46, 0xb6, 0xd3, 0x74, 0xc3, 0x0a, 0x1b, 0x58, 0x7b, 0x13, 0xec, 0x56,
	0x3e, 0xe6, 0xf1, 0x4f, 0x0f, 0xc4, 0x68, 0xc4, 0xba, 0x87, 0xba, 0x8d, 0x78, 0x1f, 0xf3, 0x4b,
	0x69, 0x98, 0x6a, 0x3e, 0x0e, 0xe9, 0x68, 0x75, 0xcc, 0x83, 0x0b, 0xab, 0x81, 0x13, 0xe1, 0xc0,
	0xb1, 0x43, 0xb3, 0x02, 0x49, 0x8f, 0x15, 0xda, 0x72, 0x64, 0x3e, 0x46, 0x18, 0x56, 0x2f, 0x92,
	0xfa, 0x92, 0x30, 0x64, 0x49, 0x49, 0xba, 0xb0, 0x58, 0x0d, 0x22, 0xc2, 0x54, 0xd0, 0x8d, 0x67,
	0x60, 0xb7, 0xe2, 0x16, 0xd2, 0xee, 0x87, 0xed, 0x6b, 0xb9, 0x70, 0xce, 0x76, 0x8b, 0x43, 0x8b,
	0x84, 0xa3, 0x03, 0xdf, 0xc5, 0x15, 0xda, 0x6a, 0x64, 0x28, 0x46, 0x65, 0xb8, 0xc7, 0xba, 0x71,
	0x9c, 0xc7, 0x9f, 0xfa, 0x1e, 0xd6, 0x49, 0xb7, 0xa2, 0x19, 0x1f, 0x69, 0x19, 0xd0, 0xcf, 0x8d,
	0x0f, 0x95, 0x60, 0xfb, 0xe9, 0x10, 0x07, 0xda, 0xdd, 0xb0, 0x8b, 0xba, 0xce, 0x95, 0xa1, 0x77,
	0xc5, 0x68, 0xbb, 0xb5, 0x35, 0x33, 0x34, 0x73, 0x40, 0x6d, 0x24, 0xff, 0xf0, 0x72, 0x8f, 0x2b,
	0x78, 0xb8, 0x6e, 0x8e, 0xd1, 0x6e, 0xeb, 0x46, 0x24, 0x1d, 0x52, 0x2b, 0x79, 0xb3, 0xb4, 0x47,
	0xe0, 0x06, 0xec, 0x51, 0x8f, 0x2c, 0x67, 0xaa, 0x7d, 0x31, 0x1a, 0xb2, 0x6e, 0xa7, 0x19, 0x82,
	0x45, 0x61, 0xd0, 0x10, 0x07, 0xc2, 0xe1, 0xad, 0xfb, 0xd9, 0x53, 0x7f, 0xb3, 0x22, 0x3a, 0x10,
	0x65, 0x1f, 0xae, 0x15, 0x58, 0xe0, 0xd1, 0x0e, 0x69, 0x0c, 0x24, 0x13, 0x4e, 0xdc, 0x63, 0xa2,
	0x07, 0x63, 0x14, 0x76, 0x8d, 0x8f, 0x73, 0xcf, 0xee, 0x08, 0xd9, 0x54, 0xc3, 0x7d, 0x96, 0x79,
	0x94, 0x87, 0xf8, 0xd2, 0x68, 0x9f, 0xf1, 0x23, 0xfa, 0x58, 0x65, 0x02, 0x4d, 0x4d, 0x0c, 0xea,
	0xe8, 0xc8, 0xd4, 0x44, 0x65, 0x50, 0x1f, 0xaf, 0x1c, 0x3f, 0xa1, 0x38, 0x54, 0x8d, 0xb7, 0xb7,
	0xc1, 0xbe, 0x8c, 0x93, 0x58, 0x9b, 0x80, 0xdc, 0xf7, 0x95, 0xd2, 0x3c, 0xb4, 0x66, 0xd7, 0x2e,
	0xc5, 0xef, 0xcb, 0x0a, 0x6f, 0x88, 0xb3, 0x78, 0xe6, 0xd9, 0x67, 0x0f, 0x99, 0x4e, 0x79, 0x26,
	0x5b, 0xd8, 0x83, 0x2d, 0xf9, 0xd3, 0x31, 0xaa, 0x58, 0x27, 0x08, 0xff, 0x1f, 0x66, 0xcf, 0x93,
	0x93, 0x0b, 0x5a, 0x32, 0x44, 0x46, 0xfa, 0x44, 0xbe, 0xbe, 0x68, 0xbb, 0x67, 0x95, 0x77, 0xdc,
	0x79, 0x28, 0x32, 0x07, 0x30, 0x95, 0x4d, 0x4f, 0x94, 0xb3, 0xf5, 0x4e, 0xde, 0x90, 0x75, 0x0d,
	0xb6, 0x15, 0xb8, 0x06, 0x6f, 0x8b, 0xd1, 0xcd, 0x96, 0x31, 0xb5, 0x82, 0x5b, 0x90, 0x9f, 0x74,
	0xa5, 0x5c, 0x81, 0x23, 0x27, 0x62, 0x74, 0x14, 0x3e, 0x6a, 0x4d, 0x0a, 0x4c, 0x47, 0x3e, 0x75,
	0x3b, 0xf0, 0xc2, 0x27, 0x29, 0x9f, 0xba, 0x5e, 0x6d, 0x06, 0xa1, 0x1f, 0xe8, 0x7c, 0xa2, 0x14,
	0x7c, 0xa6, 0xee, 0x68, 0xd0, 0x16, 0xd7, 0x75, 0xc6, 0xe7, 0x3a, 0x60, 0xb7, 0x02, 0xd8, 0xab,
	0x53, 0xae, 0xec, 0x71, 0xb8, 0x59, 0x45, 0x99, 0x9a, 0xc0, 0x72, 0x7d, 0x66, 0x68, 0x9f, 0x82,
	0x2d, 0xda, 0x33, 0x86, 0x5a, 0xaa, 0x67, 0xc7, 0xab, 0xe1, 0xf3, 0xdc, 0x1c, 0x65, 0x87, 0x48,
	0x4c, 0x1a, 0xba, 0x54, 0xb9, 0xd1, 0x23, 0x97, 0xf3, 0x45, 0x45, 0xbb, 0xc5, 0x08, 0x94, 0xd5,
	0xfa, 0x95, 0x51, 0x26, 0x49, 0x0b, 0x6d, 0x1e, 0xf6, 0xca, 0xc2, 0xe8, 0x6a, 0xa9, 0xed, 0x5e,
	0x73, 0x4c, 0x3c, 0xa6, 0x91, 0xad, 0xfb, 0x63, 0x64, 0x5a, 0x83, 0x8c, 0xec, 0xa9, 0x37, 0xaa,
	0x3b, 0x38, 0x35, 0x62, 0x65, 0x53, 0x55, 0xfd, 0x4e, 0xfb, 0xcf, 0x85, 0x75, 0x01, 0x3a, 0xb2,
	0x21, 0xb4, 0xfc, 0x42, 0xc3, 0x47, 0x68, 0x5d, 0x80, 0xc2, 0x0b, 0x54, 0x2d, 0x50, 0xc8, 0x15,
	0x4e, 0xfe, 0x36, 0x9c, 0x3e, 0x6f, 0xf3, 0x08, 0x74, 0x11, 0xa7, 0x18, 0x61, 0x6f, 0x90, 0x5d,
	0x56, 0x89, 0x64, 0xfd, 0xb5, 0x54, 0xbd, 0x6a, 0x35, 0x8c, 0x93, 0x9a, 0xb6, 0xd4, 0xfa, 0xa0,
	0x26, 0x56, 0xe0, 0x2f, 0xe6, 0xca, 0x03, 0x8c, 0xdc, 0x12, 0x23, 0x03, 0xea, 0xd6, 0x0d, 0x79,
	0xee, 0xe6, 0x2c, 0xcd, 0x82, 0x4b, 0xbe, 0xdc, 0x06, 0x6f, 0x5d, 0x9b, 0x3d, 0xa4, 0xcd, 0xc0,
	0xb6, 0x80, 0xe7, 0xf3, 0xde, 0xc4, 0x4a, 0x5a, 0x1d, 0x62, 0x87, 0x26, 0x8b, 0x62, 0x97, 0xab,
	0x90, 0x3e, 0xbd, 0xda, 0xe9, 0x41, 0x0a, 0xc1, 0x06, 0x3d, 0xe7, 0x94, 0x41, 0xbf, 0x7c, 0xe7,
	0xc2, 0x18, 0x81, 0x74, 0xae, 0x3d, 0x0e, 0xdb, 0xaa, 0x3e, 0xdb, 0x35, 0x6d, 0xe2, 0x36, 0x32,
	0xf5, 0x90, 0xcf, 0x84, 0xbe, 0xdb, 0x8c, 0xd8, 0x9c, 0xf9, 0x60, 0x62, 0x8c, 0x35, 0xf4, 0x5c,
	0xf5, 0x5d, 0xed, 0x9d, 0x60, 0xc5, 0x30, 0xe9, 0x37, 0xc7, 0xe8, 0x29, 0xeb, 0xc9, 0x7c, 0x11,
	0x87, 0xe4, 0x2c, 0x6b, 0xe5, 0x2b, 0x74, 0x8b, 0x76, 0x58, 0x54, 0xe8, 0x81, 0x7c, 0x4f, 0x76,
	0xa4, 0x4b, 0xca, 0xed, 0xb9, 0x91, 0x47, 0x62, 0x74, 0x08, 0x4e, 0x58, 0x63, 0x79, 0xd2, 0xd0,
	0x98, 0xf1, 0x84, 0x04, 0xe9, 0x60, 0x67, 0x5b, 0x27, 0xbc, 0x93, 0xc6, 0xad, 0xf1, 0x7e, 0x00,
	0xbb, 0xa4, 0xa9, 0xa0, 0x4d, 0xb7, 0x88, 0x1c, 0x01, 0x4a, 0x78, 0x97, 0x12, 0x2b, 0xbf, 0xc2,
	0x7d, 0xc8, 0xb0, 0x30, 0x70, 0x64, 0xe4, 0xa6, 0x18, 0xe9, 0x90, 0xde, 0x68, 0x68, 0xc1, 0x55,
	0x81, 0xbf, 0x68, 0x7c, 0xac, 0x04, 0xb7, 0x16, 0x1d, 0x79, 0x5c, 0x99, 0x1d, 0x77, 0xab, 0x39,
	0x97, 0x2e, 0xd7, 0x9c, 0x8f, 0xc7, 0xe8, 0x08, 0x7c, 0xc4, 0x3a, 0xbc, 0xd2, 0x9c, 0x29, 0x81,
	0xd2, 0xe7, 0x18, 0x3e, 0x5d, 0xf8, 0x72, 0xb9, 0x26, 0x82, 0xdd, 0xf8, 0xcf, 0x00, 0x76, 0xb2,
	0x1f, 0xda, 0x64, 0x91, 0x86, 0x60, 0x76, 0x58, 0x56, 0x4c, 0x27, 0x17, 0x54, 0x8b, 0x8b, 0x61,
	0x4f, 0x67, 0x63, 0x95, 0x84, 0xaa, 0x54, 0x83, 0xdc, 0x12, 0x0d, 0xd0, 0xfa, 0x04, 0x2d, 0xe9,
	0x3e, 0x15, 0x96, 0xb4, 0x02, 0xed, 0x95, 0xb9, 0xfd, 0xb6, 0x52, 0x6a, 0x7a, 0x56, 0x43, 0x70,
	0x03, 0xad, 0xe8, 0x19, 0x38, 0xb9, 0xa9, 0x9d, 0xae, 0x4c, 0xca, 0x3b, 0x5f, 0x62, 0xa5, 0xa8,
	0xb5, 0x4c, 0x3b, 0x03, 0x3c, 0x7b, 0x3a, 0x70, 0x64, 0x4d, 0xe8, 0xd2, 0x25, 0xd5, 0x84, 0x1e,
	0xb9, 0x3d, 0x46, 0x7b, 0x20, 0x2d, 0x90, 0x99, 0x07, 0x3e, 0x5b, 0x12, 0xd5, 0xf8, 0xb7, 0x9b,
	0x60, 0xb7, 0x82, 0x1d, 0xa2, 0x52, 0x55, 0xd4, 0xaa, 0xb4, 0x5a, 0xa7, 0x4a, 0x55, 0x10, 0x4a,
	0x89, 0x36, 0x03, 0xbb, 0xa4, 0x4a, 0xe2, 0x53, 0xcc, 0xaa, 0xb9, 0x3b, 0x63, 0xb4, 0xdf, 0x1a,
	0x2e, 0x56, 0x73, 0x2d, 0xab, 0xf1, 0x57, 0x92, 0x6e, 0xb5, 0xdf, 0x5e, 0x5b, 0xf5, 0x1b, 0x76,
	0xd7, 0xdb, 0x7a, 0x6e, 0xc5, 0xea, 0x37, 0x79, 0xfd, 0xb6, 0xae, 0xba, 0x37, 0xd9, 0x8a, 0x86,
	0x49, 0xb5, 0x9b, 0x2c, 0xa2, 0xb2, 0xd5, 0x6e, 0x5e, 0x06, 0x30, 0x53, 0x7d, 0x9e, 0x57, 0xbb,
	0x79, 0x2b, 0x88, 0xd1, 0x05, 0x6b, 0x11, 0x25, 0x77, 0x4d, 0x70, 0xa4, 0xd7, 0x1d, 0x8f, 0x56,
	0x98, 0x49, 0xbc, 0xaf, 0xe2, 0x0e, 0x27, 0x33, 0xa8, 0x3c, 0x8c, 0x45, 0x90, 0x79, 0xa2, 0x61,
	0xd9, 0x96, 0x51, 0xd6, 0xb4, 0x49, 0xc1, 0xe4, 0x96, 0xd9, 0xd9, 0x59, 0x56, 0x12, 0xf1, 0x4a,
	0x35, 0x8e, 0xa7, 0x54, 0xaa, 0xf9, 0xb5, 0x52, 0xae, 0x30, 0x4f, 0x07, 0x05, 0xf5, 0x03, 0xa5,
	0x18, 0xbd, 0xb7, 0x64, 0xbd, 0xb3, 0x94, 0x01, 0x96, 0x97, 0xc3, 0xb9, 0xe2, 0xc0, 0x4a, 0x72,
	0x31, 0x35, 0x49, 0xfa, 0x15, 0x17, 0x6f, 0xb0, 0x13, 0xcd, 0xe3, 0x40, 0x7f, 0x06, 0x07, 0x3e,
	0x31, 0xc7, 0x93, 0x1a, 0x78, 0xf8, 0x5c, 0xd3, 0x76, 0xc9, 0xa3, 0x39, 0x6a, 0x6a, 0x52, 0x11,
	0xe4, 0xe9, 0xe5, 0x34, 0x29, 0x58, 0xd7, 0xa7, 0xd2, 0x85, 0x7f, 0x24, 0x1f, 0xd0, 0xab, 0x3b,
	0x8d, 0x40, 0x14, 0x3a, 0xf1, 0x1b, 0xd8, 0x1b, 0xc2, 0x5e, 0x4d, 0x46, 0xf6, 0xac, 0xb9, 0xce,
	0x4f, 0xe7, 0x65, 0xad, 0xf3, 0x53, 0x68, 0xaa, 0x5d, 0xce, 0x3a, 0x3f, 0x19, 0x96, 0x2e, 0x76,
	0xfc, 0x7c, 0xbb, 0x3d, 0x46, 0xbf, 0xd7, 0x0e, 0xbf, 0xd1, 0x6e, 0xfd, 0x6e, 0x1b, 0xca, 0x39,
	0x65, 0x95, 0xab, 0x9d, 0x34, 0xfb, 0x14, 0xe9, 0xbd, 0xea, 0xbb, 0xcd, 0xba, 0x17, 0x2a, 0x16,
	0x21, 0x91, 0x38, 0x54, 0xec, 0x90, 0xcd, 0x48, 0x4e, 0x48, 0xc8, 0x3b, 0x24, 0x85, 0x76, 0x8b,
	0xa3, 0x9a, 0x2d, 0x9e, 0x9f, 0xdc, 0x7c, 0x14, 0x6f, 0xd8, 0xd5, 0x41, 0x87, 0x95, 0xf3, 0x3d,
	0x6a, 0x9f, 0xd7, 0x13, 0xb2, 0xab, 0x45, 0x0e, 0x59, 0x52, 0x39, 0xe5, 0x6e, 0xb4, 0x64, 0x63,
	0x51, 0x72, 0x47, 0xa9, 0xde, 0x55, 0xec, 0x81, 0x96, 0x80, 0xaa, 0x16, 0x50, 0xb9, 0x5c, 0x53,
	0xc8, 0x97, 0x2d, 0x01, 0xe6, 0x7b, 0x61, 0x14, 0xd8, 0x8e, 0xc7, 0xc7, 0x48, 0xd3, 0x3a, 0x3b,
	0x22, 0xbd, 0xd1, 0x2a, 0xa6, 0x97, 0xdc, 0x8d, 0x72, 0x22, 0x7a, 0x19, 0x86, 0x7c, 0xcd, 0xb0,
	0xad, 0xe4, 0x52, 0x52, 0xbb, 0x53, 0x2e, 0x98, 0x8b, 0x5e, 0x45, 0x1e, 0xf0, 0x02, 0x72, 0x27,
	0x35, 0x4c, 0x13, 0x95, 0xb1, 0x0c, 0x12, 0xa9, 0x5c, 0x54, 0x58, 0x6e, 0x19, 0x64, 0x44, 0x1c,
	0x79, 0x90, 0x12, 0x24, 0x2d, 0x23, 0x1c, 0x96, 0x41, 0x97, 0x13, 0x4e, 0xb3, 0xa8, 0x33, 0xe3,
	0x7f, 0xeb, 0x84, 0xdd, 0x8a, 0x8b, 0x57, 0x9b, 0xc8, 0xdd, 0xb7, 0x4c, 0x62, 0xc5, 0x57, 0x2d,
	0x1e, 0x99, 0xdc, 0xbe, 0xfc, 0xa1, 0xd0, 0x23, 0xaf, 0x57, 0x4d, 0xfb, 0x61, 0xae, 0x9a, 0xd6,
	0x88, 0x51, 0x1d, 0x9e, 0xb5, 0xf4, 0x22, 0x2b, 0x4f, 0xed, 0x60, 0x95, 0x0a, 0x8f, 0x6b, 0x5f,
	0x77, 0xc6, 0xdb, 0x41, 0xb2, 0xd6, 0x8e, 0x37, 0x23, 0xed, 0x0c, 0xdc, 0x52, 0x70, 0x11, 0x9a,
	0x07, 0x17, 0xf5, 0x99, 0xc9, 0x51, 0x3b, 0x8d, 0x01, 0x63, 0x97, 0xb4, 0x50, 0xf6, 0xe0, 0xcc,
	0xac, 0xf4, 0x67, 0x2f, 0x85, 0x8f, 0x0c, 0xc4, 0x68, 0x07, 0xdc, 0x66, 0x6d, 0x49, 0x8a, 0x62,
	0x34, 0x23, 0x9d, 0x59, 0xae, 0xc6, 0xdb, 0x4b, 0x49, 0x78, 0x13, 0xdf, 0x6a, 0xbd, 0xda, 0x77,
	0xac, 0x9f, 0x58, 0x71, 0xb7, 0xcd, 0x5c, 0x37, 0x93, 0x69, 0x58, 0x32, 0xbb, 0xdd, 0x54, 0x08,
	0x84, 0xba, 0x7d, 0x66, 0xa5, 0x80, 0xad, 0xcc, 0x8c, 0x8d, 0x8f, 0xb7, 0xc1, 0x4e, 0x96, 0xed,
	0x54, 0xfb, 0x1d, 0x00, 0x3b, 0xa8, 0x42, 0xe2, 0x2e, 0xcf, 0xcf, 0x81, 0x18, 0xfd, 0x22, 0xb0,
	0x5e, 0x04, 0xc2, 0x47, 0x3b, 0x2f, 0xd6, 0xb8, 0x38, 0xa8, 0xb4, 0xa9, 0x19, 0x46, 0xcf, 0xc0,
	0xc4, 0xe1, 0xbb, 0x60, 0xe2, 0x59, 0xbc, 0x48, 0x5d, 0x1b, 0xfc, 0xc3, 0x00, 0xeb, 0xf6, 0x82,
	0xed, 0xb8, 0xf6, 0x8c, 0x8b, 0x59, 0xad, 0xb7, 0xa4, 0x30, 0xb7, 0xd2, 0xf0, 0x94, 0xba, 0xd0,
	0x23, 0x5f, 0x1f, 0xda, 0xdf, 0xca, 0x1e, 0xf2, 0xb8, 0xf2, 0x14, 0x17, 0x5f, 0x7f, 0x83, 0x85,
	0x7a, 0xd3, 0x67, 0xda, 0x07, 0x00, 0xec, 0x64, 0x59, 0x5a, 0xf9, 0x61, 0x1e, 0xad, 0xa9, 0x19,
	0x88, 0x79, 0x50, 0x95, 0xc6, 0x92, 0xb8, 0xda, 0x91, 0x70, 0x16, 0xfa, 0x7a, 0x18, 0xd9, 0x41,
	0x24, 0xaa, 0x39, 0xb3, 0xeb, 0x9f, 0x9e, 0xf8, 0xce, 0x9f, 0x4d, 0x4c, 0x33, 0x26, 0x5c, 0xd8,
	0xd7, 0xd2, 0xbd, 0x31, 0xeb, 0x04, 0x61, 0xa4, 0x37, 0xfc, 0x30, 0x74, 0x66, 0x5c, 0x2c, 0x38,
	0x92, 0x02, 0xc5, 0x41, 0x11, 0xa1, 0xb0, 0xbb, 0x1f, 0xc5, 0xb8, 0x41, 0x26, 0xd9, 0x32, 0xa3,
	0xec, 0x32, 0x60, 0xf3, 0x58, 0x06, 0xbc, 0xa9, 0xf1, 0x73, 0xed, 0x70, 0xa3, 0x28, 0xc1, 0xad,
	0xcd, 0x43, 0x48, 0x98, 0x6f, 0xda, 0x76, 0x1d, 0x3b, 0xe4, 0x6c, 0x4a, 0x4f, 0x2b, 0xc7, 0x9d,
	0x24, 0xdb, 0x14, 0xf3, 0x89, 0x38, 0xb6, 0x0c, 0x80, 0x1d, 0x3f, 0x79, 0x44, 0xc1, 0x79, 0xc3,
	0xb5, 0xab, 0x22, 0x0c, 0xd7, 0x51, 0xef, 0x37, 0x9b, 0x95, 0x2e, 0xd2, 0x39, 0x22, 0x4d, 0xb5,
	0x66, 0xfa, 0xbe, 0xf5, 0x74, 0x8c, 0xde, 0x68, 0xbd, 0x21, 0xc5, 0xcd, 0xc5, 0x7e, 0x01, 0xd9,
	0xdd, 0x60, 0x72, 0x73, 0xbc, 0x61, 0x07, 0xa1, 0x72, 0x55, 0x9a, 0xef, 0xf0, 0x19, 0x0c, 0xec,
	0xc0, 0x4b, 0xde, 0x9a, 0xfe, 0xfb, 0x55, 0x72, 0x1d, 0x7f, 0x1b, 0xc4, 0xe8, 0xf7, 0x80, 0xf5,
	0x0d, 0xb0, 0xf6, 0xeb, 0xca, 0xea, 0x8d, 0x61, 0xe5, 0xba, 0x72, 0xe2, 0x2c, 0x9e, 0x75, 0xb0,
	0x5b, 0x4b, 0x80, 0x27, 0xa8, 0x10, 0xa6, 0x1c, 0x44, 0x2b, 0xdd, 0xc8, 0xbf, 0x4c, 0x77, 0xf1,
	0x59, 0xe6, 0x30, 0xce, 0x22, 0xd7, 0xb3, 0xe3, 0xe1, 0x74, 0x1c, 0xf8, 0x09, 0x81, 0xd4, 0x65,
	0xa0, 0xd0, 0x5f, 0xe6, 0xf9, 0x6a, 0xc2, 0xae, 0x53, 0x38, 0x0c, 0x1d, 0xdf, 0x9b, 0x1c, 0xd7,
	0x46, 0x20, 0x0c, 0xd9, 0x8f, 0xc4, 0x63, 0x74, 0x6d, 0x8c, 0x76, 0x5a, 0xdb, 0xa7, 0x92, 0xf3,
	0x15, 0x9d, 0x7f, 0xa2, 0x4f, 0x8e, 0x57, 0xba, 0xf8, 0xdf, 0x93, 0xb5, 0x11, 0xb2, 0x37, 0x87,
	0xb7, 0x59, 0x3b, 0xd3, 0x30, 0x24, 0xdf, 0x2e, 0x03, 0xa5, 0x6f, 0xe3, 0x7b, 0x25, 0xb8, 0x71,
	0x8c, 0x26, 0xf4, 0x79, 0xf4, 0x31, 0xed, 0x08, 0x84, 0x2c, 0xb9, 0x8f, 0x0c, 0x0d, 0x4d, 0x6e,
	0x47, 0xa6, 0xf7, 0xf8, 0xa2, 0x5b, 0xf6, 0x79, 0xc2, 0x30, 0x64, 0x07, 0x4e, 0x3b, 0xc3, 0x4b,
	0xda, 0x13, 0x70, 0x93, 0xd7, 0xac, 0xe3, 0xc0, 0xa9, 0x4e, 0x27, 0x5c, 0x58, 0xe2, 0x9e, 0xaf,
	0xe4, 0x00, 0x5d, 0x49, 0xa7, 0xc6, 0x3f, 0xcf, 0xf5, 0x7a, 0xf8, 0x9a, 0x4a, 0x0f, 0x7f, 0xc7,
	0x72, 0x69, 0x3c, 0x06, 0x7b, 0x18, 0x71, 0xa6, 0xd5, 0x32, 0x53, 0x4c, 0xbe, 0x16, 0xf6, 0x2c,
	0xee, 0xf9, 0xe7, 0x3b, 0xee, 0x66, 0xaf, 0x98, 0xba, 0x99, 0x88, 0xd1, 0x28, 0x7c, 0xd8, 0x32,
	0x32, 0xb8, 0x63, 0x26, 0x87, 0xc8, 0x7b, 0x64, 0xb3, 0x20, 0x08, 0x05, 0x55, 0xcb, 0xa0, 0x87,
	0xff, 0xa0, 0x43, 0x8e, 0xf6, 0xc2, 0xd4, 0x6f, 0xe3, 0xcb, 0x00, 0x0e, 0x1c, 0xc2, 0x11, 0xef,
	0x6f, 0x4c, 0xed, 0xa7, 0x82, 0x43, 0xed, 0xcd, 0x70, 0x73, 0xd2, 0x97, 0xea, 0xbc, 0xec, 0xb6,
	0xba, 0x4c, 0x41, 0x1c, 0x76, 0x63, 0xe6, 0xe6, 0xa9, 0x1c, 0xf2, 0x79, 0x47, 0xc9, 0xa4, 0xc2,
	0x4a, 0x9f, 0x24, 0x02, 0x77, 0xe6, 0x3d, 0x10, 0xa3, 0x11, 0x78, 0xcf, 0xda, 0xe6, 0x95, 0x87,
	0xc5, 0xf8, 0x24, 0x80, 0x5b, 0x27, 0xce, 0x37, 0xfc, 0x80, 0xc6, 0xf2, 0xf3, 0x0b, 0x5e, 0x15,
	0x7c, 0x4e, 0x3b, 0x07, 0x37, 0x24, 0x77, 0x74, 0x89, 0xde, 0x3c, 0x13, 0xa3, 0x29, 0xab, 0x72,
	0x5c, 0x08, 0x0d, 0x97, 0xdb, 0x54, 0xea, 0x25, 0xdd, 0xc8, 0xd7, 0x31, 0xed, 0x6b, 0x50, 0x77,
	0xd8, 0xb1, 0xb4, 0x7a, 0x75, 0x89, 0x7c, 0x11, 0xce, 0x8b, 0x63, 0x6d, 0xf6, 0x21, 0xad, 0xbe,
	0xce, 0xc7, 0x19, 0xb9, 0x21, 0x46, 0xd7, 0xc2, 0x5d, 0xd6, 0x0e, 0x06, 0x4f, 0x98, 0x6d, 0x6c,
	0x7c, 0xa2, 0x18, 0xd6, 0x50, 0x3b, 0x99, 0x86, 0xb5, 0xdb, 0xda, 0xc0, 0x7d, 0x84, 0xfc, 0x0a,
	0x99, 0xea, 0x1e, 0x94, 0xf6, 0xb5, 0xda, 0xbb, 0xf0, 0x19, 0x26, 0xb0, 0xf0, 0xe5, 0xbe, 0xa7,
	0x42, 0x75, 0x60, 0x12, 0x9e, 0x23, 0xc0, 0xd6, 0xcb, 0x65, 0x05, 0x88, 0x72, 0x39, 0xb9, 0xf1,
	0x6b, 0xbc, 0xd8, 0x06, 0xb7, 0x4e, 0xd6, 0x0b, 0x50, 0x7a, 0xac, 0x25, 0x98, 0xec, 0x4e, 0xfe,
	0xd4, 0x7c, 0xc1, 0x15, 0x2e, 0xa9, 0x64, 0xeb, 0x59, 0x7c, 0x69, 0xff, 0x00, 0xe0, 0x26, 0x67,
	0x76, 0xda, 0xf3, 0xa3, 0x69, 0x7c, 0xde, 0x09, 0xa3, 0x90, 0x17, 0x88, 0xfd, 0x2e, 0x88, 0xd1,
	0x77, 0x80, 0xf5, 0x6d, 0xe0, 0xc8, 0xca, 0xab, 0x51, 0xd0, 0xc4, 0xfa, 0xd0, 0x83, 0xfa, 0xb1,
	0xe3, 0xfa, 0x44, 0xa5, 0x72, 0xbc, 0x42, 0xa4, 0xa2, 0x50, 0xef, 0x34, 0xfa, 0x43, 0x1d, 0x98,
	0xdf, 0x00, 0x91, 0xbe, 0x19, 0xb6, 0x15, 0xe7, 0xc5, 0xff, 0xd8, 0x48, 0x99, 0xb0, 0x6b, 0xa6,
	0x91, 0x97, 0x54, 0x59, 0x1e, 0x26, 0xed, 0x89, 0x89, 0x31, 0x79, 0xe8, 0xd8, 0xf1, 0xca, 0xc4,
	0x38, 0xdb, 0xf6, 0xa4, 0x80, 0xd6, 0x1f, 0x78, 0x80, 0x81, 0x27, 0x6e, 0x1e, 0xa9, 0xb7, 0x8c,
	0xd5, 0x41, 0xc9, 0xdc, 0xbb, 0x9d, 0xd9, 0x63, 0x7e, 0x34, 0x41, 0x1b, 0x8e, 0xdc, 0x19, 0xa3,
	0xfd, 0x70, 0xd8, 0xba, 0x49, 0x1c, 0x3d, 0x8a, 0x5d, 0x34, 0x43, 0x55, 0xea, 0xe2, 0xb4, 0x42,
	0x9e, 0xef, 0xc9, 0x9b, 0xe9, 0x14, 0xce, 0x23, 0x8e, 0x77, 0x96, 0xf0, 0xd0, 0x12, 0xdc, 0x9e,
	0xda, 0xdf, 0xba, 0x8e, 0x77, 0x56, 0xb5, 0x36, 0xc7, 0x63, 0x84, 0xac, 0x87, 0xc4, 0xd5, 0x79,
	0x7d, 0x36, 0x70, 0xb0, 0x57, 0x73, 0x97, 0x56, 0x72, 0x8f, 0xd2, 0xe8, 0xa3, 0xf4, 0xfd, 0xed,
	0x2d, 0x76, 0x7a, 0x64, 0x6a, 0xa1, 0x3e, 0x07, 0x32, 0xee, 0xd8, 0x86, 0xed, 0x04, 0x3c, 0x78,
	0x77, 0xab, 0x99, 0x81, 0xf5, 0x84, 0xed, 0x04, 0xfc, 0x86, 0x6e, 0xa1, 0xd7, 0x3b, 0xcd, 0x35,
	0x89, 0x37, 0x23, 0x0b, 0x89, 0xea, 0xb9, 0x25, 0x7d, 0x8a, 0xf8, 0xa7, 0x1d, 0x02, 0x9b, 0x99,
	0x71, 0xc9, 0x8e, 0xa1, 0x10, 0x3f, 0x59, 0xc7, 0x00, 0x01, 0xde, 0x78, 0x57, 0x09, 0x6e, 0x51,
	0x3a, 0x60, 0x07, 0xf9, 0x7e, 0xa0, 0x8d, 0x16, 0x1d, 0x0f, 0xb0, 0x9c, 0x52, 0x53, 0x2d, 0x0e,
	0x8e, 0xc3, 0xec, 0xb9, 0xc0, 0xe1, 0xc2, 0x88, 0x44, 0x56, 0x10, 0xa0, 0x55, 0x27, 0xc5, 0xf7,
	0xdd, 0x6b, 0x31, 0xb2, 0xe1, 0xb4, 0xf5, 0x70, 0x96, 0x81, 0x84, 0xdb, 0x44, 0x38, 0x13, 0xca,
	0x65, 0x41, 0x51, 0x76, 0xf8, 0x3b, 0x97, 0xbe, 0xcf, 0x61, 0x2e, 0x03, 0x75, 0x56, 0xd9, 0xeb,
	0xee, 0xef, 0x6a, 0x4b, 0xe1, 0x42, 0x10, 0x51, 0x7b, 0x37, 0x80, 0x1a, 0xb5, 0x4d, 0xa7, 0x73,
	0xb9, 0x78, 0x32, 0x74, 0x17, 0xe8, 0x63, 0xb1, 0xf8, 0xa3, 0x53, 0xd2, 0xa8, 0xbd, 0x68, 0xea,
	0xf7, 0xd3, 0xf6, 0xea, 0x91, 0xc0, 0x7b, 0x00, 0xdc, 0x12, 0xe2, 0xaa, 0xef, 0xd5, 0xa6, 0x0b,
	0x32, 0x0b, 0x14, 0x83, 0x73, 0x38, 0x46, 0x13, 0xd6, 0x18, 0x4b, 0xc9, 0x41, 0x5a, 0x5e, 0x3c,
	0x3c, 0x9b, 0x59, 0x07, 0x4a, 0x6b, 0x51, 0x78, 0x73, 0x77, 0x96, 0x38, 0xb9, 0xc6, 0xcb, 0xa0,
	0x00, 0x8d, 0xcb, 0xa0, 0x68, 0x36, 0xc6, 0x6f, 0xb5, 0x15, 0x2c, 0xfe, 0x73, 0xff, 0xec, 0x17,
	0xbf, 0x76, 0x0a, 0xc2, 0x70, 0xc9, 0xab, 0x4e, 0xcf, 0x34, 0x1d, 0x57, 0x84, 0x10, 0xb1, 0x73,
	0x9a, 0xc9, 0x94, 0x0e, 0x19, 0xe4, 0xf1, 0x5a, 0xde, 0x59, 0xb6, 0x73, 0xa4, 0xdf, 0xeb, 0x4e,
	0xbd, 0x8e, 0x6b, 0x8e, 0x1d, 0x61, 0x77, 0xa9, 0xd2, 0x45, 0xfa, 0x19, 0x25, 0x8f, 0x45, 0x06,
	0x8d, 0xb5, 0x50, 0x70, 0x3d, 0xb2, 0xe5, 0x3f, 0x01, 0xb8, 0x1d, 0xe5, 0x31, 0xf9, 0xea, 0xd2,
	0x51, 0x04, 0x3c, 0x5e, 0xc2, 0x64, 0x8d, 0x97, 0xdb, 0x20, 0x7c, 0x0c, 0x07, 0x21, 0xb7, 0x1d,
	0x1f, 0x80, 0x1b, 0x16, 0xd8, 0x2f, 0x0e, 0x7d, 0x92, 0xbd, 0x85, 0x3f, 0x4f, 0x40, 0xe6, 0x76,
	0x1f, 0xb1, 0x60, 0xf8, 0x3b, 0xed, 0x00, 0xec, 0x60, 0xd4, 0x2c, 0x65, 0x84, 0x2c, 0xa3, 0x59,
	0x41, 0x53, 0xf6, 0xbd, 0x76, 0x27, 0x6c, 0xaf, 0xfb, 0x35, 0x61, 0x79, 0x27, 0xe7, 0x91, 0xe4,
	0x61, 0x51, 0x33, 0xfa, 0xb5, 0x36, 0x01, 0x21, 0x6d, 0x4e, 0xb6, 0x78, 0x22, 0x01, 0xf5, 0xad,
	0x31, 0xba, 0x89, 0x60, 0x04, 0xeb, 0xb4, 0xd6, 0x7f, 0xbe, 0x2d, 0x83, 0xa5, 0xd2, 0x45, 0xff,
	0x19, 0xb7, 0x23, 0xac, 0x1d, 0x82, 0x9d, 0x55, 0xbf, 0x5e, 0x77, 0x44, 0x22, 0x5e, 0x56, 0x0f,
	0x93, 0x74, 0x31, 0xe7, 0x44, 0x43, 0xec, 0x95, 0xee, 0xd4, 0x5a, 0xf7, 0xc5, 0x9b, 0x8f, 0xbc,
	0x31, 0x46, 0x4f, 0xc0, 0x33, 0xd6, 0xad, 0xc2, 0x80, 0x8b, 0x56, 0x44, 0xdb, 0x32, 0x10, 0x78,
	0x5b, 0x06, 0x0c, 0x0d, 0xcb, 0x80, 0xce, 0x6b, 0x19, 0x28, 0xd3, 0x5a, 0x06, 0xbc, 0x77, 0xe3,
	0x77, 0x4b, 0xb0, 0x57, 0x78, 0x6c, 0x0f, 0x3a, 0x6e, 0x84, 0x03, 0x6d, 0xbc, 0xf5, 0x99, 0xea,
	0xce, 0x18, 0x6d, 0xb3, 0xb6, 0x4c, 0x15, 0xc4, 0xef, 0xe4, 0xce, 0x4f, 0x0f, 0x67, 0xbc, 0x55,
	0x2c, 0x8e, 0x8f, 0x26, 0x69, 0x17, 0x0e, 0x0c, 0x25, 0x30, 0xbc, 0x28, 0x24, 0x48, 0x38, 0xac,
	0x2a, 0xb9, 0xa8, 0xa3, 0xb6, 0xc2, 0xe3, 0xd8, 0x64, 0xf3, 0xa9, 0x9c, 0xb4, 0xe8, 0x3c, 0x49,
	0x71, 0x3a, 0xbe, 0x68, 0xe4, 0xb1, 0x18, 0x9d, 0x82, 0x27, 0x2d, 0x5d, 0xb8, 0x6b, 0xb2, 0xd9,
	0x2a, 0x86, 0xf4, 0x59, 0x8a, 0x8c, 0xf5, 0xa2, 0xf3, 0x3f, 0x76, 0xc1, 0xad, 0x74, 0x2b, 0x4d,
	0x6f, 0x84, 0xb0, 0xcc, 0x62, 0xd4, 0x64, 0xbe, 0x0b, 0x6e, 0xac, 0xfa, 0x5e, 0x64, 0x3b, 0x5e,
	0x98, 0x0a, 0xac, 0x4c, 0xf6, 0xef, 0x21, 0xb6, 0x83, 0xea, 0x3c, 0xc1, 0x46, 0x45, 0x7e, 0xaa,
	0x7d, 0x0c, 0x24, 0xa6, 0x36, 0xc3, 0xe3, 0xdb, 0x41, 0x8c, 0xde, 0x62, 0x5d, 0x90, 0x9e, 0x60,
	0xe9, 0xfe, 0x4d, 0x76, 0x05, 0x49, 0xfc, 0x3e, 0xb7, 0x8b, 0x99, 0x6f, 0x98, 0x83, 0x53, 0xe8,
	0x04, 0xa6, 0x26, 0x30, 0x03, 0x20, 0xac, 0xfa, 0x0d, 0xcc, 0x44, 0x2f, 0xcb, 0x79, 0x85, 0xb3,
	0xfb, 0x17, 0xc5, 0x72, 0xff, 0x38, 0x80, 0x30, 0x93, 0x91, 0x22, 0xe5, 0x4e, 0x64, 0x29, 0xdf,
	0xf2, 0xc0, 0xe6, 0x7d, 0xd5, 0xeb, 0x02, 0x97, 0x01, 0xa4, 0x76, 0x92, 0x73, 0xf5, 0x55, 0xba,
	0xe4, 0xf1, 0x94, 0xf6, 0x9e, 0x12, 0xdc, 0xc0, 0xe8, 0x29, 0xae, 0xe0, 0xf6, 0x99, 0x69, 0xa6,
	0x1f, 0xfd, 0x1e, 0x88, 0xd1, 0x9f, 0x00, 0xeb, 0xbf, 0x48, 0x17, 0x7b, 0x21, 0x3b, 0x84, 0x17,
	0x03, 0xac, 0xe7, 0xab, 0xfe, 0x7a, 0xd6, 0x11, 0x87, 0x77, 0x49, 0xb7, 0x1b, 0x0d, 0xd7, 0xc1,
	0x35, 0x13, 0x4e, 0xa9, 0x27, 0x75, 0xaa, 0x2b, 0x29, 0xf2, 0x45, 0x16, 0xd8, 0x74, 0xb0, 0x0a,
	0x3d, 0x9b, 0xc8, 0x3e, 0xe6, 0xc9, 0x4c, 0x98, 0x6b, 0x8e, 0x3d, 0x91, 0x87, 0x19, 0x66, 0x45,
	0x20, 0x41, 0xc3, 0x10, 0xd6, 0xed, 0xf3, 0xd3, 0x2e, 0x0b, 0x3f, 0xef, 0x48, 0xee, 0x3d, 0x20,
	0xd5, 0x7f, 0x29, 0xce, 0x35, 0xdc, 0x54, 0x40, 0x7a, 0x66, 0xc2, 0x99, 0x8c, 0x70, 0x66, 0xa5,
	0xab, 0x6e, 0x9f, 0x3f, 0xc2, 0xe2, 0xd1, 0x7f, 0x1d, 0xc0, 0xbe, 0xf4, 0xd2, 0x0d, 0x77, 0x6e,
	0xa0, 0x2c, 0x92, 0x5d, 0xbb, 0xef, 0x00, 0x31, 0x7a, 0x2b, 0xb0, 0x7e, 0x34, 0xcf, 0x29, 0xa9,
	0xef, 0x2e, 0x89, 0x5d, 0x72, 0x3d, 0xe5, 0x79, 0xa6, 0x37, 0x25, 0x25, 0x42, 0xed, 0x57, 0x00,
	0xdc, 0x45, 0x2c, 0xe5, 0xe9, 0xf4, 0x2c, 0xa6, 0xc3, 0x86, 0xeb, 0x44, 0x3b, 0x37, 0x52, 0xeb,
	0xe2, 0x47, 0x62, 0xb4, 0x64, 0x2d, 0xd2, 0x00, 0xe5, 0xc8, 0xd7, 0x59, 0xe4, 0x30, 0xa1, 0x0d,
	0xcf, 0x2c, 0x91, 0xc4, 0x85, 0xd3, 0x46, 0x7a, 0xb3, 0x41, 0xc8, 0xde, 0x2a, 0x60, 0x44, 0x44,
	0x8f, 0xb1, 0xa3, 0x34, 0x55, 0x88, 0x10, 0x4c, 0x2b, 0x47, 0xc5, 0x4e, 0xa8, 0xfb, 0xb3, 0xb3,
	0x66, 0x65, 0x3b, 0x01, 0x2f, 0xd5, 0xd7, 0x29, 0x32, 0xcc, 0x08, 0x31, 0xb0, 0xe1, 0xa8, 0x75,
	0x97, 0xd0, 0x1a, 0xb9, 0xce, 0x98, 0x85, 0x55, 0xb7, 0xa3, 0xea, 0xbc, 0x6e, 0xeb, 0x42, 0xe0,
	0xe8, 0x3c, 0x8d, 0xa0, 0x94, 0x40, 0xc6, 0xcf, 0x6c, 0x84, 0xdb, 0x0f, 0xe1, 0x68, 0xca, 0x6f,
	0x1c, 0xcb, 0xca, 0xb4, 0x27, 0x61, 0x5b, 0xe4, 0x37, 0xb8, 0x27, 0x9f, 0x79, 0x87, 0x55, 0xf6,
	0x89, 0xfc, 0xc6, 0xb1, 0x55, 0xb8, 0x25, 0x39, 0x32, 0x4b, 0x4e, 0x74, 0xcc, 0x0a, 0xe9, 0xf5,
	0x75, 0xc9, 0x77, 0x59, 0x24, 0x5f, 0xd1, 0x0a, 0x6c, 0xbf, 0x9a, 0x56, 0xa0, 0x2a, 0xba, 0x3b,
	0x5e, 0x17, 0xdd, 0xe1, 0x08, 0x4b, 0xee, 0x0b, 0xdf, 0x0e, 0xac, 0x66, 0xeb, 0xb5, 0xcd, 0x03,
	0x50, 0x9c, 0x80, 0xc7, 0xc2, 0x73, 0x27, 0x97, 0x3c, 0x9a, 0xd7, 0xc3, 0x74, 0x8e, 0x14, 0x3e,
	0x33, 0x3f, 0xa0, 0x61, 0x18, 0x34, 0x1b, 0xde, 0x2c, 0x99, 0x3c, 0x7f, 0x3e, 0x6f, 0x87, 0x2c,
	0x11, 0x49, 0x88, 0x23, 0x55, 0x36, 0x3c, 0xdf, 0xd9, 0x42, 0x36, 0x84, 0xda, 0xbf, 0x02, 0xb0,
	0x6d, 0x71, 0xde, 0xe7, 0xfe, 0xc1, 0x7e, 0x33, 0xf3, 0xcd, 0x2b, 0xb0, 0x98, 0xfd, 0xea, 0xaa,
	0x8b, 0x99, 0x40, 0xa8, 0x7d, 0x12, 0xc0, 0xf6, 0xc5, 0x79, 0x3b, 0xe2, 0x77, 0x57, 0x5e, 0xa3,
	0xa0, 0x52, 0x10, 0xb5, 0x4f, 0x03, 0xd8, 0xb1, 0x38, 0x8f, 0x03, 0xcc, 0x43, 0x48, 0x5f, 0xa3,
	0xc0, 0x32, 0x18, 0x39, 0x66, 0xb1, 0xc7, 0x6d, 0xae, 0xd7, 0x2e, 0x66, 0xb1, 0x27, 0x92, 0x5d,
	0x5c, 0x9c, 0xbe, 0x34, 0x3e, 0x05, 0xe0, 0x86, 0x13, 0xae, 0x4f, 0xaf, 0x47, 0x5a, 0xb0, 0xab,
	0xe1, 0xfa, 0x91, 0xba, 0x6d, 0xda, 0x16, 0x23, 0xcd, 0xea, 0x3f, 0xa6, 0xec, 0xcd, 0xc9, 0x17,
	0x95, 0x8d, 0xe4, 0xff, 0x74, 0xb3, 0x74, 0x80, 0xb7, 0x79, 0x3a, 0xf4, 0x3d, 0xbe, 0xcd, 0x65,
	0x79, 0xa4, 0x68, 0xea, 0x5c, 0x7a, 0x95, 0x80, 0x37, 0x3c, 0x21, 0x1b, 0x3e, 0x12, 0xfa, 0xde,
	0x88, 0x15, 0xa3, 0x61, 0x38, 0x64, 0xdd, 0x9e, 0x80, 0x4d, 0x3e, 0xe0, 0xf5, 0xf8, 0x55, 0x90,
	0x93, 0x55, 0x6e, 0xfc, 0x54, 0x1b, 0xec, 0x65, 0xa2, 0x93, 0x5f, 0xec, 0x3c, 0xa7, 0x7d, 0x14,
	0x64, 0x0f, 0x49, 0x58, 0xf0, 0xe6, 0xb3, 0xeb, 0x24, 0x8d, 0x7a, 0x09, 0xf6, 0xf2, 0xa9, 0xda,
	0x27, 0x12, 0x15, 0x50, 0x2a, 0x56, 0x01, 0xc9, 0xe9, 0x08, 0x97, 0x58, 0xc9, 0x9e, 0x52, 0xbd,
	0x8b, 0x2a, 0xee, 0x33, 0x27, 0xd2, 0xf4, 0x9d, 0x20, 0x46, 0xef, 0x00, 0xf0, 0x6d, 0xaf, 0x9e,
	0x34, 0x15, 0xa0, 0x18, 0x7f, 0xdd, 0x09, 0xfb, 0xd8, 0x74, 0x70, 0x8d, 0xf1, 0xd2, 0x15, 0xb6,
	0xb0, 0x2a, 0x2a, 0xa3, 0x32, 0xa6, 0x63, 0x79, 0x63, 0xb2, 0x8c, 0x6a, 0xea, 0xd4, 0x17, 0x54,
	0x53, 0x46, 0x96, 0xf9, 0x88, 0x09, 0x83, 0x2a, 0x8c, 0xac, 0x32, 0x52, 0xdb, 0x6b, 0x8e, 0x91,
	0x32, 0x36, 0x5b, 0xfb, 0xd5, 0x63, 0xb3, 0x75, 0x5c, 0x4d, 0x36, 0x9b, 0xb2, 0x5e, 0x3b, 0x2f,
	0xf3, 0x7a, 0x3d, 0x12, 0xa3, 0x49, 0x78, 0xc8, 0xba, 0x43, 0x2c, 0x56, 0xc2, 0x78, 0x4c, 0x3e,
	0x4a, 0x3e, 0xa7, 0x2b, 0xd0, 0x75, 0x68, 0x22, 0x7d, 0xaf, 0xc6, 0xbe, 0x60, 0x2e, 0x58, 0xc2,
	0xf5, 0xcb, 0x20, 0x61, 0x7a, 0xe3, 0xeb, 0x6d, 0x50, 0x4b, 0xcd, 0x8f, 0x26, 0x07, 0xa0, 0x19,
	0xf5, 0x33, 0x1e, 0x27, 0x50, 0xe8, 0x71, 0xa2, 0xe9, 0x44, 0x0e, 0x4d, 0x2a, 0x95, 0x4b, 0xf0,
	0x0a, 0x3b, 0xbb, 0xdc, 0x42, 0x9d, 0xb7, 0x23, 0x7a, 0x3b, 0x69, 0xd6, 0x6f, 0x7a, 0x35, 0x33,
	0x7b, 0x05, 0xee, 0x43, 0x80, 0xc6, 0x26, 0xe4, 0xd2, 0xa1, 0x9d, 0x8b, 0x91, 0x67, 0xb9, 0xc9,
	0xa0, 0x8e, 0x97, 0x04, 0x4d, 0xa9, 0x35, 0xc6, 0xd4, 0x38, 0xcc, 0xa2, 0xe1, 0x87, 0x13, 0x50,
	0x05, 0xa4, 0x4a, 0x95, 0xec, 0x50, 0x85, 0xac, 0xc7, 0x6b, 0xca, 0x8c, 0xc2, 0xe1, 0xc8, 0x07,
	0x40, 0x8c, 0xde, 0x0b, 0xe0, 0x4f, 0x02, 0xcb, 0x11, 0x64, 0xa0, 0xd7, 0xb2, 0x5d, 0x59, 0x9f,
	0xac, 0x20, 0x4b, 0x1b, 0x67, 0xc2, 0xa6, 0x57, 0xd3, 0x69, 0x41, 0x14, 0x26, 0x2d, 0xd7, 0x8c,
	0xac, 0x65, 0x90, 0xa1, 0xc8, 0x32, 0x48, 0x23, 0xc7, 0xf8, 0x48, 0x1b, 0xec, 0xcb, 0xd8, 0x17,
	0xda, 0x11, 0x11, 0x5b, 0xc4, 0xd4, 0x30, 0xbd, 0x60, 0xbf, 0x7f, 0x2a, 0x89, 0x96, 0x7b, 0x4c,
	0x8d, 0x96, 0x6b, 0xb9, 0x32, 0x44, 0xc8, 0xd0, 0xb4, 0x1a, 0x38, 0x57, 0xca, 0x06, 0xce, 0x25,
	0x49, 0xe3, 0xd2, 0x4b, 0x7d, 0xd5, 0xde, 0x93, 0x42, 0x1e, 0x0b, 0x59, 0x82, 0xb3, 0xe4, 0x99,
	0x27, 0x63, 0x74, 0xcc, 0x3a, 0x72, 0xe9, 0x04, 0x6f, 0x49, 0x50, 0x9e, 0x14, 0xff, 0x62, 0x7d,
	0x05, 0xa2, 0xf4, 0x40, 0x97, 0x12, 0xa5, 0x99, 0x21, 0xce, 0x5f, 0x75, 0xc0, 0xee, 0xd7, 0x09,
	0xb3, 0x5e, 0xc2, 0x68, 0x31, 0x80, 0x9b, 0x67, 0x96, 0xa6, 0x73, 0x77, 0x6e, 0x89, 0x4c, 0xdd,
	0x62, 0xe6, 0x25, 0xd7, 0x95, 0x80, 0xa8, 0x6f, 0x66, 0x29, 0x35, 0x90, 0xf6, 0x9b, 0x40, 0x71,
	0x65, 0x77, 0x50, 0x1d, 0xff, 0x71, 0x10, 0xa3, 0x9f, 0x05, 0xd6, 0x8b, 0x00, 0x29, 0x69, 0x12,
	0x5a, 0xde, 0x31, 0x50, 0x0a, 0x28, 0x4b, 0x56, 0xe2, 0x72, 0xfb, 0x1c, 0x8d, 0x42, 0x8b, 0xa4,
	0xa9, 0x94, 0xba, 0x56, 0x2b, 0xab, 0xaf, 0x2c, 0x62, 0xd7, 0xd5, 0xed, 0x50, 0x84, 0xb1, 0xd8,
	0x5e, 0x48, 0x05, 0x16, 0xf6, 0xa8, 0xed, 0x24, 0xac, 0x30, 0x1a, 0x7f, 0x67, 0xbb, 0x42, 0x8b,
	0x98, 0x89, 0x57, 0xfd, 0x15, 0x60, 0xf8, 0xe7, 0xdb, 0x0a, 0xcf, 0x01, 0x42, 0x6d, 0x0a, 0x6a,
	0x2c, 0x2f, 0x12, 0x69, 0x8b, 0xf9, 0x0b, 0x6e, 0xe0, 0xb1, 0x93, 0xff, 0xe4, 0xfe, 0x3f, 0x13,
	0x97, 0x59, 0xe0, 0x78, 0x56, 0xc0, 0x71, 0xa5, 0xbd, 0xf6, 0x05, 0x00, 0x7b, 0x52, 0x1d, 0xca,
	0x3c, 0x0c, 0xaf, 0xb5, 0xdd, 0x56, 0x0a, 0xcc, 0x4b, 0x25, 0x44, 0x01, 0x2a, 0x97, 0x41, 0x6a,
	0x04, 0xe3, 0x39, 0x00, 0x61, 0x05, 0xd3, 0xeb, 0xeb, 0xc4, 0xa0, 0x7e, 0x10, 0x42, 0x7a, 0xf9,
	0x5d, 0xdd, 0x9d, 0xb1, 0x5a, 0x05, 0xaa, 0xd1, 0xcb, 0xee, 0xc7, 0x13, 0x43, 0x9a, 0x9d, 0xea,
	0xd1, 0xdf, 0xf4, 0x70, 0x94, 0xe7, 0x80, 0xd8, 0x7d, 0x2a, 0xb2, 0x83, 0x88, 0x71, 0xa0, 0x3c,
	0x85, 0x64, 0xad, 0x66, 0x96, 0xb8, 0xb5, 0xa1, 0x0c, 0x64, 0x5c, 0x07, 0x07, 0x46, 0x9b, 0xee,
	0x59, 0x99, 0x95, 0x9f, 0x96, 0x91, 0xa2, 0x7d, 0x54, 0xf0, 0x39, 0x63, 0x07, 0xdc, 0x36, 0xda,
	0x74, 0xdc, 0xf4, 0xdb, 0x0a, 0x0e, 0x8d, 0x6b, 0xe1, 0xae, 0x7c, 0x33, 0x16, 0x58, 0x7d, 0xae,
	0xb8, 0xcf, 0x31, 0xd7, 0x0f, 0x71, 0x05, 0x9f, 0x2b, 0x9f, 0x84, 0x9b, 0xd2, 0xcb, 0x76, 0x27,
	0xdc, 0x3a, 0xe9, 0xd1, 0xc4, 0x23, 0xa9, 0xe7, 0xfd, 0xd7, 0x68, 0x1b, 0x60, 0xdb, 0x99, 0x79,
	0xbf, 0x1f, 0x68, 0x1b, 0x61, 0xfb, 0x99, 0x79, 0x3b, 0xea, 0x2f, 0x69, 0x5d, 0xb0, 0xe3, 0x0c,
	0xd9, 0xc2, 0xf7, 0xb7, 0xb1, 0x87, 0xd8, 0xeb, 0x6f, 0x2f, 0xbf, 0xbf, 0x04, 0x37, 0xca, 0xdb,
	0x1a, 0x5b, 0x60, 0x1f, 0xef, 0x4e, 0x3c, 0xea, 0xbf, 0x46, 0xeb, 0x85, 0x70, 0x7c, 0x6a, 0x7a,
	0xd2, 0x8b, 0xf0, 0x1c, 0x0e, 0xfa, 0x81, 0xb6, 0x09, 0x76, 0x8d, 0x4f, 0x4d, 0xb3, 0x12, 0xaf,
	0xfd, 0x25, 0xfe, 0x7a, 0xd4, 0xf7, 0x5d, 0x6c, 0x7b, 0xfd, 0x6d, 0xfc, 0xf7, 0x38, 0xae, 0x3a,
	0x75, 0xdb, 0xed, 0x6f, 0xd7, 0xfa, 0x61, 0xcf, 0xf8, 0xd4, 0xf4, 0x94, 0x53, 0xc7, 0x61, 0x64,
	0xd7, 0x1b, 0xfd, 0x1d, 0x1a, 0x84, 0x9d, 0xe3, 0x53, 0xd3, 0xa7, 0x03, 0xa7, 0xbf, 0x53, 0xeb,
	0x86, 0x1b, 0xc6, 0xa7, 0xa6, 0x1f, 0xf3, 0x9d, 0x5a, 0xff, 0x06, 0xad, 0x07, 0x6e, 0x1c, 0x9f,
	0x9a, 0x3e, 0xe8, 0xfa, 0x76, 0xd4, 0xbf, 0x51, 0xdb, 0x0e, 0x35, 0xf2, 0x99, 0xc7, 0xf2, 0x8a,
	0x88, 0xf1, 0xbb, 0xf8, 0xf8, 0xa3, 0x8e, 0x67, 0x07, 0x4b, 0xfd, 0x90, 0xf7, 0x70, 0xba, 0xe9,
	0xd4, 0xfa, 0xbb, 0xf9, 0x8f, 0x29, 0x7c, 0x3e, 0xea, 0xef, 0xe1, 0x3f, 0x46, 0x5d, 0x7f, 0xa6,
	0x7f, 0x13, 0xff, 0x31, 0x46, 0x7e, 0xf4, 0x6a, 0x3d, 0x14, 0x02, 0xe4, 0x2d, 0xf5, 0xff, 0xdc,
	0x0b, 0x9d, 0x5a, 0x1f, 0xed, 0x70, 0x1c, 0xbb, 0x38, 0xc2, 0xfd, 0x3f, 0xff, 0x42, 0x67, 0xf9,
	0x34, 0xec, 0x4d, 0x5f, 0x7b, 0xd5, 0x76, 0xc1, 0x6d, 0x1c, 0x31, 0xe9, 0x17, 0xfd, 0xd7, 0x10,
	0xa0, 0x8f, 0x27, 0x63, 0xf2, 0x5f, 0x7c, 0x50, 0xfe, 0x8b, 0x8d, 0x5a, 0xbe, 0x01, 0x76, 0x9d,
	0xf2, 0x83, 0xe8, 0x78, 0x50, 0xc3, 0x01, 0xa1, 0x0f, 0x0a, 0xab, 0xfd, 0xd7, 0x10, 0x52, 0x8c,
	0xe3, 0xb0, 0xda, 0x0f, 0xca, 0x37, 0x41, 0x48, 0xdf, 0x1d, 0x74, 0xb0, 0x5b, 0x23, 0x00, 0x8f,
	0xb1, 0x74, 0x13, 0xec, 0x23, 0xc2, 0xa9, 0xfd, 0xc0, 0xfa, 0xfe, 0x27, 0x01, 0xdc, 0xc0, 0x0f,
	0x86, 0xb5, 0xbf, 0x05, 0xb0, 0x83, 0x16, 0xea, 0xd1, 0xba, 0x4c, 0x5e, 0xb0, 0xe7, 0xdc, 0x80,
	0xfc, 0x33, 0x34, 0x96, 0x41, 0x8c, 0xbe, 0x08, 0x60, 0x3b, 0x6a, 0x46, 0xf3, 0x03, 0x9f, 0x06,
	0x53, 0xbe, 0x4e, 0x5f, 0x65, 0x92, 0xab, 0xf0, 0x8b, 0x8d, 0xb6, 0xcc, 0xa4, 0x23, 0x04, 0x82,
	0xcc, 0xcb, 0x42, 0x36, 0xb7, 0x36, 0x2d, 0x4e, 0x33, 0xa8, 0xdb, 0xfa, 0x93, 0x8f, 0x84, 0xbe,
	0xd7, 0xba, 0xf4, 0xcf, 0xf0, 0x5e, 0xfd, 0xc9, 0x3d, 0x95, 0x83, 0x63, 0xfa, 0x81, 0xbb, 0xf6,
	0xdf, 0xbb, 0x37, 0x79, 0x1b, 0xf9, 0xbe, 0x1b, 0x9a, 0x0e, 0x8e, 0x66, 0x4d, 0x3f, 0x98, 0x1b,
	0x9e, 0x8f, 0xea, 0xee, 0x70, 0x30, 0x5b, 0xa5, 0x5f, 0x25, 0xfb, 0x0f, 0xbe, 0xfd, 0x98, 0xb9,
	0xe6, 0xed, 0xbf, 0xff, 0xdf, 0x3f, 0x50, 0xd2, 0x8c, 0x4d, 0xc3, 0x76, 0xc3, 0x19, 0x5e, 0xb0,
	0x86, 0x69, 0x9a, 0xf2, 0x11, 0x50, 0xd6, 0x7e, 0xa3, 0x04, 0x7b, 0x78, 0x31, 0x1e, 0x36, 0xf7,
	0x7e, 0x53, 0xfd, 0x99, 0x41, 0xc1, 0xfb, 0x4b, 0x31, 0xfa, 0x2b, 0x8e, 0x02, 0xb8, 0x81, 0x7f,
	0x38, 0xf0, 0x47, 0xab, 0xe2, 0x22, 0x5d, 0xc5, 0x47, 0x41, 0x08, 0x7f, 0x31, 0x44, 0x5f, 0xe8,
	0xec, 0x76, 0xa7, 0x53, 0x93, 0xe1, 0x81, 0x76, 0x18, 0xfa, 0x55, 0x87, 0xa6, 0xad, 0x7a, 0x75,
	0x51, 0xb7, 0xcb, 0xd8, 0x2a, 0x50, 0xc7, 0x41, 0x96, 0x18, 0xfc, 0x19, 0x00, 0x3b, 0x8f, 0xf8,
	0x73, 0x7e, 0x33, 0xd2, 0xba, 0x4c, 0x5e, 0x48, 0x8a, 0x20, 0x4d, 0xd4, 0x94, 0x32, 0x96, 0x62,
	0xf4, 0x66, 0xce, 0x35, 0x8f, 0xb3, 0x0f, 0xd9, 0x28, 0x55, 0xb2, 0xc6, 0x29, 0x06, 0x70, 0xa0,
	0xd3, 0xbc, 0xfd, 0x01, 0x0e, 0xfd, 0x66, 0x50, 0x95, 0xa5, 0xb3, 0x1c, 0x62, 0x9e, 0x50, 0x8c,
	0xc8, 0xbd, 0x53, 0x88, 0xab, 0xcd, 0xc0, 0x21, 0x4a, 0x85, 0x62, 0x8c, 0xab, 0x7a, 0x93, 0x02,
	0xd9, 0xaf, 0xf5, 0x2a, 0xf4, 0x25, 0x00, 0x35, 0xe1, 0xa6, 0xc7, 0x78, 0x73, 0x8a, 0x22, 0xad,
	0xcb, 0xe4, 0x25, 0x97, 0xce, 0x0d, 0x40, 0x53, 0x06, 0xaa, 0x1b, 0x47, 0x63, 0x74, 0x2b, 0x07,
	0xf1, 0xba, 0xc7, 0x56, 0x18, 0x8f, 0x63, 0xe3, 0x06, 0xed, 0x3a, 0x31, 0xd0, 0xd3, 0x8b, 0xd1,
	0xf0, 0xb3, 0xf4, 0xdd, 0x85, 0x61, 0x01, 0xa9, 0xf6, 0x45, 0x00, 0x37, 0x4f, 0x86, 0x61, 0x13,
	0xab, 0x65, 0x9e, 0x54, 0xec, 0x48, 0x26, 0x13, 0x05, 0xa0, 0x8c, 0xe7, 0x40, 0x8c, 0xde, 0x94,
	0x65, 0xac, 0x47, 0x69, 0x27, 0x61, 0x96, 0x81, 0xa4, 0x0e, 0x66, 0xde, 0x9a, 0xe8, 0xbe, 0x25,
	0xdd, 0x6e, 0x46, 0xf3, 0xd8, 0x8b, 0xa8, 0x4d, 0xc7, 0xd8, 0x87, 0x3c, 0xf1, 0x03, 0xe7, 0x19,
	0xce, 0x3a, 0x82, 0x90, 0xd7, 0x69, 0x03, 0x19, 0x42, 0xd2, 0x2e, 0x87, 0x69, 0x8d, 0x28, 0xad,
	0x01, 0xbb, 0x64, 0x26, 0x77, 0x15, 0xde, 0x4d, 0xa6, 0x9a, 0xe0, 0xdd, 0x98, 0x8c, 0xd1, 0x7e,
	0xd8, 0x41, 0x7f, 0x0e, 0xa4, 0xa2, 0x86, 0x59, 0xf6, 0x26, 0x51, 0x7a, 0x21, 0x9d, 0x47, 0x89,
	0x0e, 0xdf, 0xa7, 0xc9, 0x25, 0xc8, 0x92, 0x39, 0xbd, 0x07, 0xc0, 0x0d, 0xa8, 0x46, 0x0b, 0x03,
	0x68, 0xdd, 0x26, 0xff, 0x2b, 0xc3, 0x40, 0x67, 0x63, 0x74, 0x02, 0x76, 0xd0, 0x04, 0xff, 0x03,
	0x87, 0x50, 0x4d, 0x16, 0x98, 0xca, 0xa6, 0x75, 0x22, 0x4c, 0x53, 0xc1, 0xe7, 0x9a, 0x4e, 0x20,
	0x6e, 0x9e, 0xd4, 0xea, 0x8e, 0x47, 0x81, 0x52, 0x2d, 0xca, 0x68, 0xde, 0x09, 0xcd, 0xac, 0x40,
	0x60, 0x75, 0xa0, 0x40, 0x59, 0xfb, 0x14, 0x80, 0xbd, 0x88, 0xa6, 0x9f, 0x12, 0x09, 0xdf, 0xb5,
	0x1e, 0x53, 0xfc, 0x99, 0x01, 0xec, 0x2d, 0x31, 0x3a, 0x23, 0x00, 0x3b, 0xc6, 0x1a, 0x85, 0xea,
	0x71, 0x8e, 0x18, 0x59, 0x49, 0x61, 0xb6, 0x2e, 0xf8, 0x6e, 0x34, 0x06, 0x52, 0xf0, 0x0d, 0x3f,
	0x4b, 0xfe, 0xb9, 0xc0, 0x50, 0x47, 0x80, 0xfd, 0x22, 0x80, 0xbd, 0x15, 0xbc, 0xe0, 0x9f, 0xc5,
	0xab, 0x03, 0xfb, 0x13, 0x20, 0x46, 0x4f, 0x08, 0x68, 0x4f, 0xb0, 0x56, 0x79, 0x68, 0x59, 0x05,
	0xf8, 0x8b, 0x84, 0x77, 0x4f, 0xf9, 0xd6, 0xd6, 0xf0, 0x0e, 0x3f, 0x4b, 0xfe, 0x31, 0x89, 0xb1,
	0x73, 0x41, 0xfb, 0x75, 0x00, 0xe1, 0x04, 0x3d, 0x07, 0xa7, 0x94, 0xdf, 0x68, 0x16, 0x90, 0xfd,
	0x23, 0x20, 0x46, 0x91, 0x00, 0xf8, 0x2c, 0xfb, 0x3a, 0x54, 0x61, 0x3b, 0xee, 0xb9, 0x4b, 0xfc,
	0x34, 0xbd, 0xc6, 0x2b, 0x3a, 0x24, 0x39, 0xbf, 0x2e, 0x95, 0x37, 0xae, 0xb7, 0xae, 0x2d, 0x9c,
	0x0b, 0x1b, 0x4f, 0xfb, 0x3a, 0x80, 0xdd, 0xe3, 0xec, 0xf8, 0xbe, 0xf5, 0x0c, 0x3e, 0x01, 0x62,
	0x74, 0x41, 0xcc, 0x20, 0xe2, 0x9f, 0xa7, 0xa6, 0x30, 0x25, 0xf3, 0x05, 0xf1, 0x92, 0x19, 0x89,
	0x9a, 0x8c, 0xfc, 0x16, 0xd9, 0xcb, 0xd6, 0x3d, 0x95, 0x1b, 0xac, 0xeb, 0x0a, 0xa7, 0xc2, 0xc3,
	0x0f, 0xb4, 0x5f, 0x06, 0xb0, 0xef, 0x14, 0xa6, 0x11, 0xfc, 0x22, 0xfd, 0xa0, 0xb6, 0xc5, 0xcc,
	0x3c, 0xc9, 0xb3, 0xfe, 0x94, 0x98, 0xd9, 0xa3, 0xa7, 0x70, 0x44, 0x66, 0xe5, 0xe1, 0xc5, 0x24,
	0x7f, 0x5e, 0x26, 0x75, 0xdf, 0xba, 0x00, 0x36, 0x06, 0xae, 0x2f, 0x04, 0x58, 0x74, 0x4e, 0x58,
	0xff, 0x1b, 0x00, 0xf6, 0x8f, 0xcd, 0xdb, 0xde, 0x1c, 0x3e, 0xba, 0x24, 0xa1, 0xd6, 0x4c, 0xf6,
	0xa8, 0x05, 0xd0, 0x1f, 0x02, 0x31, 0x6a, 0x0a, 0xa8, 0xdd, 0x31, 0x65, 0xc3, 0x39, 0xb3, 0x44,
	0x93, 0x42, 0x0a, 0xc4, 0x57, 0x69, 0x2f, 0xba, 0x4f, 0x13, 0xe3, 0x2d, 0x7a, 0x19, 0x5b, 0x86,
	0xe5, 0xef, 0x93, 0xb3, 0xe1, 0x52, 0x38, 0x33, 0x75, 0x5a, 0x86, 0x57, 0x68, 0x0f, 0x36, 0xad,
	0x9d, 0x03, 0x5b, 0xc4, 0xb4, 0xea, 0x4b, 0xa9, 0xc9, 0xfc, 0x01, 0x80, 0x1b, 0x0e, 0x31, 0x7c,
	0x2b, 0x9c, 0x24, 0xfe, 0x0a, 0x8d, 0x2f, 0x80, 0x18, 0x7d, 0x10, 0x08, 0xc8, 0xdf, 0x0d, 0x0e,
	0x61, 0x85, 0x51, 0x94, 0x4c, 0x8d, 0xec, 0x72, 0x02, 0xdd, 0xfa, 0xf2, 0x04, 0x7a, 0x3c, 0x9f,
	0x1e, 0xb7, 0x27, 0x04, 0xa8, 0xb4, 0x2a, 0x48, 0xc1, 0x85, 0xc9, 0x8b, 0x9d, 0xd9, 0x76, 0x6d,
	0x6b, 0x11, 0xc1, 0xb4, 0x17, 0x00, 0xec, 0x39, 0x84, 0xa3, 0xa3, 0x4b, 0x27, 0x02, 0x7f, 0xd6,
	0x71, 0xb1, 0xaa, 0x53, 0x92, 0xd9, 0xcd, 0xc7, 0xe8, 0x51, 0x31, 0xb7, 0x51, 0x35, 0x86, 0x51,
	0x8c, 0x2f, 0xaa, 0xc0, 0xa4, 0xe7, 0xc9, 0xed, 0x03, 0xba, 0x8b, 0x54, 0xd4, 0x0f, 0x83, 0x68,
	0xab, 0xa6, 0xa9, 0xb8, 0xe6, 0xc3, 0x7f, 0x03, 0x40, 0xc8, 0x4c, 0xf3, 0xd6, 0x8b, 0xf6, 0x25,
	0x7a, 0x05, 0x5e, 0xc0, 0x73, 0xa1, 0x82, 0xeb, 0xfe, 0x82, 0x5c, 0xb4, 0x7a, 0xd5, 0xaf, 0x37,
	0x5c, 0x1c, 0xb9, 0xec, 0xb6, 0x60, 0x6e, 0x5d, 0x52, 0x98, 0x88, 0x10, 0xf2, 0xfc, 0x88, 0x32,
	0x97, 0x57, 0xf3, 0x3d, 0x7c, 0x89, 0xc8, 0x2d, 0xb7, 0x40, 0x6e, 0x89, 0x22, 0x57, 0x16, 0x09,
	0x4a, 0x2b, 0x6c, 0xb5, 0x76, 0x90, 0xf1, 0x3d, 0x10, 0xa3, 0xdf, 0x90, 0x73, 0xfa, 0x02, 0x50,
	0x91, 0x1c, 0x15, 0x55, 0x5c, 0xcc, 0x94, 0x1d, 0xd5, 0x6d, 0x4f, 0x2d, 0x53, 0xcd, 0xce, 0xb8,
	0x68, 0xd9, 0x32, 0x2e, 0x7d, 0x6d, 0xea, 0xb4, 0x0d, 0x55, 0x51, 0x9c, 0x3d, 0x04, 0x90, 0xb6,
	0xda, 0x25, 0x21, 0x63, 0x97, 0xb6, 0x23, 0x8d, 0x0c, 0xdb, 0x75, 0x87, 0x29, 0x3c, 0xda, 0xfb,
	0x4a, 0xcc, 0x7a, 0x61, 0x45, 0x86, 0xa0, 0xc9, 0xee, 0x13, 0x27, 0xe6, 0x8b, 0x28, 0x3f, 0x69,
	0xfc, 0x0f, 0x10, 0xa3, 0x6f, 0x4a, 0x6c, 0x7c, 0x05, 0xa8, 0x16, 0x0c, 0x83, 0x5d, 0x5e, 0xd8,
	0x54, 0x69, 0x2b, 0xae, 0x83, 0xb9, 0x4b, 0x49, 0xf6, 0xc3, 0x4c, 0xc5, 0x5d, 0xea, 0x97, 0xc2,
	0x51, 0x75, 0x5e, 0x7f, 0xba, 0x19, 0x46, 0xaa, 0x72, 0x0d, 0x9b, 0x33, 0x43, 0xfc, 0x06, 0x6f,
	0x52, 0x1c, 0x34, 0xf2, 0xf5, 0xb0, 0xd9, 0xa0, 0x17, 0x78, 0x1a, 0xf6, 0x1c, 0x16, 0xf7, 0x7d,
	0x2f, 0x1a, 0x39, 0x8a, 0x75, 0x45, 0x07, 0xd0, 0xbe, 0x0a, 0xe0, 0xa6, 0x54, 0xed, 0x1a, 0x85,
	0xe5, 0x37, 0x9b, 0xd9, 0xaa, 0x36, 0x54, 0x3e, 0x9e, 0x13, 0x78, 0x99, 0x67, 0x68, 0x51, 0x97,
	0x96, 0x5a, 0x58, 0x4a, 0xc9, 0xd0, 0xa9, 0x66, 0x68, 0xbd, 0x58, 0xd0, 0x15, 0xbb, 0x34, 0x6f,
	0x3a, 0x68, 0xcf, 0x40, 0x48, 0xc5, 0x48, 0xce, 0x30, 0x2d, 0x98, 0xc4, 0xb1, 0x18, 0xdd, 0x21,
	0xe6, 0x50, 0x2e, 0x92, 0x26, 0xae, 0x3f, 0x37, 0xc7, 0xce, 0x81, 0x94, 0x12, 0xad, 0xdc, 0x20,
	0xd4, 0xfa, 0x15, 0xa9, 0xc1, 0xc6, 0x5e, 0x84, 0x9b, 0x68, 0x66, 0xde, 0xd3, 0x22, 0x93, 0x69,
	0xa1, 0xd4, 0x38, 0x19, 0xa3, 0x21, 0x31, 0xea, 0xcd, 0xf4, 0xfb, 0x30, 0x95, 0x8c, 0x94, 0x46,
	0xdd, 0x2b, 0x2e, 0x4e, 0x36, 0xde, 0xb5, 0xda, 0x2e, 0x31, 0x5e, 0x95, 0xb4, 0xa1, 0x73, 0x17,
	0xeb, 0xfb, 0x33, 0x80, 0x8f, 0x2c, 0xd5, 0xdb, 0x66, 0x33, 0x93, 0x23, 0x98, 0x20, 0x20, 0x9b,
	0x36, 0xd8, 0x58, 0x88, 0x51, 0x45, 0x80, 0x32, 0x99, 0x06, 0x45, 0x92, 0x41, 0x81, 0x84, 0x55,
	0xd7, 0x0e, 0xc4, 0x1a, 0xd0, 0xc3, 0xaa, 0x1f, 0x50, 0x37, 0x97, 0x13, 0xdd, 0x16, 0xea, 0x22,
	0x3f, 0x2d, 0x87, 0xd7, 0xd8, 0x9e, 0x86, 0x57, 0x55, 0x62, 0x6f, 0x23, 0x1a, 0x99, 0x3a, 0x19,
	0x98, 0x33, 0x8f, 0xfa, 0x3a, 0xb6, 0x9a, 0xd9, 0x47, 0x19, 0xc4, 0x1d, 0x89, 0xd1, 0xed, 0x22,
	0x61, 0x17, 0xf5, 0xbb, 0x0f, 0x5c, 0xc7, 0x5a, 0x08, 0x8b, 0x42, 0xf8, 0x06, 0xd9, 0xe9, 0x0f,
	0x53, 0xa4, 0x86, 0x54, 0xa4, 0xec, 0xdc, 0x96, 0x9e, 0x80, 0x12, 0x18, 0xfe, 0xa9, 0x04, 0xfb,
	0x59, 0x09, 0xf0, 0x14, 0x0c, 0xd9, 0x47, 0x19, 0x18, 0xbe, 0x5e, 0x8a, 0xd1, 0x3f, 0x81, 0x34,
	0x14, 0xff, 0x07, 0x60, 0x8d, 0x42, 0xe5, 0xbe, 0x20, 0x03, 0x61, 0x50, 0xb7, 0x99, 0xf6, 0xad,
	0xfb, 0xb4, 0x2a, 0x74, 0xc4, 0x6f, 0x41, 0xc8, 0x2c, 0x19, 0x84, 0xd6, 0x32, 0x1f, 0x8e, 0x87,
	0x17, 0xa9, 0x83, 0x2f, 0x95, 0xb1, 0xa9, 0xe9, 0x9d, 0x73, 0x9a, 0xc9, 0x37, 0x65, 0xf1, 0x51,
	0x59, 0xea, 0x0e, 0x76, 0xaf, 0x9f, 0x4a, 0xd8, 0x9a, 0xcc, 0xb8, 0x3a, 0xef, 0x44, 0x38, 0x6c,
	0xd8, 0x55, 0x4c, 0x0c, 0x94, 0xc0, 0xae, 0x46, 0x52, 0xeb, 0x14, 0xf6, 0xc1, 0x7d, 0xa1, 0x2c,
	0xdd, 0xb5, 0xef, 0x45, 0x81, 0xef, 0x26, 0x0d, 0x69, 0xda, 0x04, 0xf2, 0x46, 0xe4, 0x43, 0xa7,
	0x98, 0x7d, 0xd8, 0xba, 0xad, 0x00, 0xb3, 0xc3, 0xcf, 0xf2, 0x68, 0x7f, 0x1a, 0xd9, 0x4a, 0x43,
	0xfe, 0x2f, 0x8c, 0x6c, 0x23, 0x03, 0xe6, 0x9e, 0x6b, 0x9f, 0xa5, 0x5b, 0x12, 0x51, 0x2a, 0x8a,
	0xe2, 0xbf, 0xd7, 0x4c, 0x63, 0x3e, 0xfd, 0x3b, 0x34, 0x2e, 0x10, 0xfd, 0x9f, 0x42, 0xfe, 0xfd,
	0xa4, 0x87, 0x54, 0x19, 0x56, 0x91, 0xd1, 0x31, 0xb9, 0x34, 0xdf, 0xf2, 0x62, 0x2b, 0x9d, 0xc8,
	0x5e, 0x6d, 0xad, 0x13, 0xd1, 0x3e, 0x5d, 0x82, 0x7d, 0x74, 0x99, 0x24, 0x35, 0x7c, 0xb5, 0x2d,
	0x66, 0xe6, 0x49, 0x86, 0x63, 0xfe, 0x1e, 0xc4, 0xe8, 0x6b, 0x64, 0xeb, 0xca, 0xdc, 0xd6, 0x03,
	0x47, 0x1f, 0xc3, 0x01, 0xcb, 0x78, 0xe0, 0xe4, 0x52, 0xc1, 0x52, 0xea, 0x3b, 0xa1, 0xb8, 0x60,
	0x47, 0x33, 0x2d, 0x10, 0x56, 0x69, 0x86, 0x38, 0x14, 0xf2, 0x1f, 0xd7, 0x14, 0xca, 0x98, 0x8f,
	0xdc, 0x0d, 0xdb, 0xee, 0xdc, 0x77, 0xaf, 0x36, 0x0c, 0x77, 0x25, 0x10, 0xc8, 0x0b, 0xa2, 0x0e,
	0x15, 0x5c, 0x9a, 0x06, 0xfb, 0x07, 0x32, 0xe5, 0x55, 0x59, 0xbb, 0x7d, 0xa4, 0x1d, 0x77, 0x30,
	0xea, 0x4a, 0x7b, 0x66, 0x3d, 0x15, 0xb5, 0xa3, 0x18, 0xbb, 0x45, 0xbb, 0x29, 0xbd, 0xb6, 0x79,
	0x48, 0x84, 0xc4, 0x19, 0xdb, 0xb9, 0x7d, 0xb9, 0x0d, 0xf6, 0xa8, 0x4b, 0x5a, 0xeb, 0x4f, 0xad,
	0xf0, 0x0c, 0x9e, 0xde, 0xdb, 0x16, 0xa3, 0xbf, 0x29, 0x25, 0x78, 0xfa, 0x47, 0x90, 0x2c, 0x6e,
	0xf5, 0xfa, 0xaf, 0x48, 0x87, 0x95, 0xba, 0x87, 0x9b, 0xac, 0xa1, 0xe2, 0xf5, 0xc3, 0x2e, 0x68,
	0x65, 0x08, 0xa5, 0x57, 0x09, 0x4f, 0x64, 0x0e, 0x93, 0x16, 0x08, 0x75, 0x96, 0xd2, 0xfd, 0x5d,
	0xf4, 0x4a, 0x4b, 0xb5, 0x5e, 0xdf, 0x1a, 0xbb, 0x78, 0xca, 0x0e, 0x31, 0xca, 0xde, 0x0a, 0xfb,
	0x25, 0x65, 0x83, 0xb9, 0x26, 0x3d, 0x29, 0x6d, 0x45, 0xd0, 0xad, 0x46, 0x5f, 0x7a, 0x09, 0x50,
	0x09, 0xf9, 0xdf, 0x4a, 0xb0, 0x47, 0x15, 0x87, 0x5a, 0x7f, 0x4a, 0x3a, 0x66, 0xe8, 0xf7, 0x4b,
	0xa5, 0x18, 0xfd, 0xbd, 0xc2, 0xe7, 0xff, 0x7b, 0x81, 0x54, 0xfc, 0xe1, 0x96, 0x88, 0xfb, 0xac,
	0xeb, 0x33, 0x58, 0x4c, 0x2f, 0x88, 0x91, 0x3e, 0x45, 0x0e, 0x92, 0x27, 0xda, 0xdf, 0x95, 0x60,
	0x0f, 0xdb, 0x64, 0x48, 0x0c, 0xab, 0x3f, 0x33, 0x18, 0xfe, 0x6a, 0x29, 0x46, 0x2f, 0x2a, 0x2b,
	0xe4, 0x7d, 0x25, 0xa4, 0xae, 0x0c, 0x02, 0x39, 0x45, 0xe3, 0x0c, 0xd6, 0x6b, 0xb4, 0x97, 0x1a,
	0x0f, 0x15, 0x4b, 0x1f, 0xd1, 0x52, 0x9b, 0x8c, 0x97, 0xa5, 0x52, 0x1d, 0xcc, 0x4a, 0x57, 0xf3,
	0x76, 0x98, 0x6d, 0x24, 0xea, 0x58, 0xd1, 0xdc, 0x73, 0x55, 0x3b, 0xac, 0xda, 0x35, 0x96, 0xd1,
	0xc9, 0x63, 0xe9, 0xae, 0x68, 0x31, 0x89, 0x28, 0x68, 0xe2, 0x32, 0xfd, 0x84, 0xf2, 0x58, 0x71,
	0xca, 0x1c, 0x8a, 0x70, 0xd9, 0xc3, 0xac, 0x6b, 0xcf, 0x65, 0xd7, 0x60, 0xdd, 0x0e, 0xce, 0xe6,
	0xee, 0xbc, 0xa7, 0x0a, 0x6b, 0xa7, 0x40, 0x0b, 0xc5, 0x74, 0xb9, 0x2b, 0xac, 0xbc, 0x32, 0x19,
	0xb4, 0xf7, 0xd3, 0x53, 0x3c, 0xa1, 0x77, 0x34, 0x68, 0x26, 0xd8, 0x4e, 0xfe, 0xa6, 0xbe, 0xc4,
	0xb1, 0x04, 0xd9, 0xf7, 0xe4, 0xf4, 0xcc, 0x7a, 0x74, 0xcc, 0x8d, 0xda, 0x2a, 0x30, 0x7d, 0x18,
	0xc0, 0x1e, 0xba, 0x07, 0x13, 0x95, 0xdb, 0xfb, 0x4c, 0xe5, 0x27, 0x63, 0x04, 0xb9, 0x47, 0x73,
	0x63, 0x64, 0x25, 0x90, 0xdd, 0xb6, 0xd2, 0x16, 0x4d, 0x39, 0x2e, 0xa5, 0x80, 0xec, 0xd7, 0x86,
	0xb3, 0x80, 0xb4, 0x54, 0x77, 0x7c, 0xb3, 0xf4, 0x3f, 0x00, 0xec, 0x23, 0xa6, 0x73, 0x22, 0x85,
	0x42, 0x6d, 0x97, 0x99, 0x79, 0x92, 0xec, 0xa0, 0xb6, 0x98, 0xf9, 0x02, 0xf7, 0xc6, 0xc7, 0x41,
	0x8c, 0x70, 0x02, 0xf2, 0x1b, 0xe4, 0x3e, 0x2a, 0x97, 0x30, 0x43, 0x96, 0x9d, 0x27, 0xac, 0x72,
	0x82, 0xca, 0x78, 0x91, 0x36, 0x56, 0x66, 0xe6, 0x61, 0x3b, 0xaa, 0x41, 0xb2, 0x13, 0xa2, 0xb9,
	0xd4, 0x14, 0xdd, 0xc8, 0x58, 0xe0, 0x2e, 0xed, 0x8e, 0xb5, 0xcf, 0x92, 0x0e, 0x47, 0x36, 0x87,
	0xda, 0xb7, 0x00, 0xdc, 0xaa, 0xe8, 0x88, 0xe4, 0xfa, 0xe1, 0x4e, 0xb3, 0xe8, 0x71, 0x66, 0x79,
	0xc6, 0x20, 0x46, 0x87, 0x93, 0x39, 0x3e, 0xc0, 0xed, 0x69, 0x99, 0x8a, 0xc5, 0x99, 0x55, 0xf2,
	0x6d, 0x52, 0x56, 0xb7, 0x8b, 0x8a, 0xcf, 0x33, 0x09, 0x48, 0xa7, 0x81, 0xb4, 0x87, 0xd6, 0xa0,
	0x67, 0xf9, 0x53, 0x96, 0x0d, 0x58, 0xbe, 0xe2, 0x16, 0xcb, 0x5b, 0x4b, 0xb0, 0x17, 0xd5, 0xd4,
	0x1b, 0xe4, 0x9a, 0x66, 0xa6, 0x1f, 0x64, 0xa6, 0xf1, 0x4d, 0xe6, 0x40, 0x92, 0xf3, 0x78, 0x17,
	0x60, 0x7e, 0xf4, 0x3c, 0xa0, 0xac, 0x22, 0x19, 0x4d, 0x42, 0xc1, 0x6e, 0x18, 0xc9, 0x9b, 0xff,
	0xbc, 0x26, 0x40, 0x56, 0xe9, 0x4a, 0xcc, 0x31, 0xcd, 0x2b, 0xb5, 0x2d, 0x0b, 0x5e, 0xcb, 0xde,
	0x77, 0x50, 0xf7, 0x41, 0x74, 0x1f, 0xc8, 0x90, 0x32, 0x6c, 0x94, 0x57, 0x5c, 0x4a, 0x29, 0x74,
	0x10, 0x35, 0xf6, 0x9d, 0x12, 0xdc, 0xac, 0xea, 0x2d, 0x86, 0x85, 0x6d, 0x66, 0xee, 0x59, 0x06,
	0x11, 0x2f, 0x96, 0x62, 0xf4, 0x1d, 0x05, 0x11, 0x5f, 0x2b, 0x50, 0x68, 0x02, 0x15, 0xb9, 0x62,
	0x96, 0x29, 0xc1, 0x9a, 0x16, 0x76, 0x84, 0x5d, 0xd5, 0xab, 0xe3, 0x4c, 0x68, 0x64, 0x4b, 0x63,
	0x46, 0x85, 0x59, 0x4f, 0x68, 0x9a, 0x98, 0x05, 0xc7, 0x77, 0xed, 0x08, 0x17, 0x5e, 0xcb, 0x26,
	0x12, 0x89, 0xfc, 0xe6, 0x89, 0x05, 0xe7, 0x68, 0xde, 0xd9, 0xb3, 0x01, 0x63, 0xb6, 0x94, 0x98,
	0x7c, 0x70, 0xe0, 0xde, 0xb5, 0xe3, 0x31, 0xc3, 0x56, 0x04, 0xad, 0x3f, 0x5b, 0x82, 0x9b, 0x55,
	0x65, 0xc5, 0xd0, 0xda, 0x67, 0xb6, 0x46, 0xe8, 0x5f, 0x82, 0x18, 0xbd, 0xac, 0x20, 0xf4, 0x45,
	0xc0, 0xda, 0x53, 0x7c, 0x92, 0x4d, 0x28, 0x9f, 0x04, 0x87, 0xbd, 0x11, 0xe0, 0x05, 0xec, 0x31,
	0x3d, 0xcb, 0x76, 0x77, 0x6b, 0x4a, 0x06, 0x29, 0x58, 0x86, 0xd7, 0x4c, 0x10, 0x7e, 0x4e, 0x66,
	0x36, 0xf1, 0x87, 0xb9, 0xbe, 0x5c, 0x57, 0xb8, 0xe1, 0x44, 0x65, 0x64, 0x86, 0xa4, 0xfb, 0xca,
	0x17, 0x8f, 0x24, 0xed, 0xe7, 0x01, 0xec, 0x4b, 0xf4, 0x4c, 0x4b, 0xfc, 0xf0, 0x3f, 0x43, 0x23,
	0x88, 0x91, 0x99, 0x60, 0xe7, 0xa6, 0x9c, 0xc2, 0x49, 0x25, 0x8b, 0x4d, 0xcc, 0x8e, 0xfb, 0xb4,
	0x4b, 0x80, 0xf1, 0x79, 0x69, 0xa3, 0xb3, 0x00, 0x03, 0x69, 0xa3, 0x8b, 0x64, 0xd9, 0x44, 0x27,
	0x8a, 0xbf, 0x43, 0xe3, 0x0f, 0x4b, 0x31, 0xfa, 0xd5, 0x12, 0xdc, 0xc0, 0x9e, 0x84, 0x03, 0x9f,
	0x29, 0x55, 0xa5, 0x91, 0x2e, 0xb2, 0x7c, 0x63, 0xbd, 0x19, 0x38, 0x22, 0xcb, 0x58, 0xea, 0x5c,
	0x8f, 0x73, 0x31, 0x31, 0x1a, 0x30, 0xe6, 0x3e, 0xb0, 0x66, 0xc3, 0xf5, 0xed, 0x1a, 0x51, 0x04,
	0x76, 0x30, 0xa7, 0x64, 0xb0, 0xa2, 0xd9, 0xd0, 0xca, 0x53, 0x13, 0x8f, 0x4f, 0x95, 0x07, 0xf5,
	0xf2, 0xd8, 0x91, 0xe3, 0xa3, 0xe5, 0x41, 0x62, 0xd2, 0x95, 0x47, 0xc9, 0x9f, 0x94, 0xaa, 0xec,
	0xad, 0xa8, 0xae, 0x21, 0x93, 0x94, 0x29, 0xd9, 0x1e, 0x08, 0xfb, 0xd3, 0xc0, 0x99, 0x24, 0x90,
	0xab, 0x5c, 0x3e, 0xd8, 0x74, 0xdd, 0x29, 0x7c, 0x3e, 0xa2, 0x61, 0x3c, 0xe5, 0x32, 0x91, 0xcb,
	0xdc, 0x37, 0xc9, 0x7a, 0xa5, 0x63, 0xd1, 0x5c, 0x95, 0xcc, 0xe0, 0x8b, 0x70, 0x35, 0xd0, 0x8f,
	0x1c, 0x1f, 0x1d, 0x24, 0xdb, 0x32, 0xde, 0x19, 0x03, 0x96, 0x09, 0x76, 0xda, 0x68, 0x34, 0x69,
	0x34, 0x43, 0x23, 0x44, 0xb2, 0x2d, 0x66, 0x96, 0x22, 0x1c, 0x66, 0x8d, 0x6d, 0x9f, 0xa1, 0x91,
	0x2c, 0xa7, 0x97, 0x00, 0xec, 0x1b, 0x73, 0xb1, 0x1d, 0x24, 0x81, 0x1e, 0x64, 0x6b, 0x99, 0x7e,
	0x92, 0x59, 0x50, 0x61, 0x8c, 0x0e, 0x25, 0xb4, 0xb8, 0x9f, 0x79, 0x94, 0x49, 0x0b, 0x51, 0xa8,
	0xcb, 0x8b, 0xb0, 0x5a, 0x69, 0x9e, 0xd3, 0x47, 0x80, 0xcf, 0x46, 0xd7, 0x67, 0x5c, 0xbf, 0x7a,
	0x96, 0x42, 0x76, 0x93, 0xb5, 0x3b, 0x03, 0xd9, 0xf0, 0xb3, 0x84, 0x0e, 0x17, 0x86, 0x9f, 0xa5,
	0xe9, 0xdd, 0x9b, 0x4e, 0xed, 0x82, 0x76, 0x1f, 0xd4, 0x4e, 0xd1, 0x1a, 0x2e, 0x09, 0x58, 0x93,
	0x9e, 0xb6, 0xdd, 0xcc, 0x3f, 0xcc, 0x40, 0x7b, 0xcd, 0x1e, 0xa0, 0x3d, 0x0a, 0xb7, 0x64, 0xbf,
	0x3b, 0xde, 0x8c, 0xb4, 0x1d, 0x66, 0xc1, 0x53, 0xd2, 0xbc, 0xc5, 0x8b, 0xd0, 0xb8, 0x66, 0x1f,
	0xd0, 0x3e, 0x05, 0x60, 0xff, 0x69, 0xca, 0x3e, 0x0a, 0xce, 0xb6, 0x9a, 0xd9, 0x47, 0x19, 0x30,
	0x9a, 0x31, 0xba, 0x3f, 0x41, 0xda, 0x7e, 0x8a, 0x34, 0x9b, 0xe5, 0xcb, 0x63, 0xe9, 0xed, 0xc8,
	0x78, 0x54, 0x5f, 0x7b, 0x92, 0x2b, 0x73, 0x98, 0xda, 0x37, 0xb0, 0x27, 0x8b, 0x29, 0xc6, 0xc8,
	0x79, 0x84, 0x8d, 0xb4, 0xd7, 0x08, 0x5c, 0x9f, 0x03, 0x50, 0x1b, 0xf7, 0x17, 0xbd, 0x0c, 0xb8,
	0xdb, 0xcd, 0xfc, 0x43, 0x02, 0x70, 0xf1, 0xf3, 0xd0, 0x78, 0x3a, 0x46, 0x77, 0x25, 0xd0, 0x97,
	0x55, 0xe8, 0x23, 0x9f, 0xf2, 0x3b, 0xb5, 0x94, 0x18, 0xbc, 0x35, 0xde, 0x85, 0xde, 0x0c, 0x5c,
	0x0a, 0xf6, 0xa0, 0x56, 0xce, 0x82, 0x2d, 0xbe, 0x29, 0xa0, 0xf4, 0x3f, 0x94, 0x60, 0x2f, 0x13,
	0x06, 0x42, 0x58, 0x6a, 0x9a, 0x99, 0x7e, 0xc0, 0x7c, 0x34, 0x32, 0x6a, 0x6c, 0x9c, 0x80, 0xf8,
	0xef, 0x4b, 0x31, 0x7a, 0xa9, 0x04, 0xbb, 0xa4, 0x84, 0x1d, 0xf8, 0x70, 0x49, 0x1e, 0x76, 0xa8,
	0x59, 0x9d, 0x69, 0x4f, 0xd2, 0x75, 0x97, 0x2a, 0x7b, 0x13, 0xcd, 0x8b, 0x84, 0xa0, 0x64, 0x75,
	0x4d, 0xd8, 0xd5, 0x79, 0xd6, 0xac, 0x48, 0xd6, 0x0b, 0xbf, 0xb8, 0x1d, 0xa6, 0xf3, 0xf9, 0xca,
	0xe8, 0x02, 0xda, 0xc7, 0x41, 0xb2, 0x1d, 0x24, 0xfd, 0x30, 0x09, 0x13, 0x65, 0x93, 0x16, 0x73,
	0xe0, 0x94, 0x3a, 0x2d, 0x89, 0x6b, 0xbf, 0x40, 0x00, 0xdb, 0xa2, 0xf4, 0xd1, 0xa4, 0x27, 0x2f,
	0x75, 0x92, 0xe5, 0xef, 0x44, 0xba, 0xed, 0x86, 0x7e, 0x92, 0x96, 0x22, 0xa2, 0x97, 0x3e, 0x93,
	0xe4, 0xa7, 0xbe, 0x47, 0x15, 0xbe, 0x8b, 0x17, 0xb0, 0xcb, 0x5d, 0xc9, 0xdb, 0x8d, 0xcd, 0x82,
	0x2a, 0x32, 0xe6, 0x93, 0x88, 0x84, 0x87, 0x60, 0x1f, 0xe3, 0xfe, 0x24, 0x86, 0x57, 0x33, 0xd3,
	0x4f, 0x08, 0xfe, 0xb7, 0x66, 0x9e, 0x51, 0x2a, 0xec, 0x01, 0xfb, 0x80, 0xf6, 0xce, 0x76, 0xd8,
	0xcb, 0x6c, 0x16, 0x85, 0x80, 0xe9, 0x07, 0x99, 0xc5, 0xf1, 0x9f, 0xda, 0x62, 0xf4, 0x72, 0x9b,
	0x4a, 0xbb, 0x8f, 0xb4, 0x15, 0xd1, 0xae, 0x49, 0x3b, 0xc9, 0x98, 0x7f, 0x2b, 0x50, 0xf0, 0xb8,
	0xd8, 0xde, 0xb3, 0xe3, 0xd2, 0x9a, 0x20, 0x52, 0x41, 0xce, 0x7b, 0xa6, 0xb0, 0x65, 0x91, 0x10,
	0x16, 0x01, 0x2c, 0xbd, 0x3e, 0xb9, 0xdc, 0x3e, 0xe2, 0x82, 0x52, 0xdd, 0x5f, 0xc0, 0xb5, 0xec,
	0x21, 0xcb, 0x3f, 0x07, 0xee, 0xb9, 0xd9, 0xba, 0x31, 0xc7, 0x3d, 0xc3, 0xcf, 0x2a, 0xf5, 0x57,
	0xa8, 0xb5, 0xf6, 0x4d, 0x00, 0x7b, 0x99, 0xb5, 0x25, 0x59, 0xa1, 0xc7, 0x6c, 0xc1, 0x04, 0xbf,
	0x00, 0x62, 0x74, 0x5e, 0xe5, 0x81, 0xb3, 0xc2, 0x4e, 0x6b, 0x4d, 0x6e, 0xd7, 0x65, 0xe7, 0x58,
	0x74, 0xeb, 0xee, 0x44, 0x8a, 0xb5, 0x39, 0xa8, 0xcf, 0x34, 0x23, 0x6a, 0x5d, 0x31, 0x22, 0x91,
	0xb7, 0x12, 0x37, 0x0d, 0x1c, 0x84, 0x0e, 0xeb, 0x46, 0x77, 0xed, 0x25, 0x1c, 0xb0, 0x39, 0xed,
	0x2e, 0xaf, 0x36, 0x27, 0xed, 0xed, 0x00, 0xf6, 0x10, 0x0b, 0xa9, 0xc5, 0x74, 0xd4, 0x5f, 0xa1,
	0xf1, 0x58, 0x8c, 0x06, 0xd5, 0x09, 0xdd, 0xa8, 0xd8, 0x56, 0xca, 0x34, 0x6a, 0x4e, 0x80, 0xab,
	0x91, 0xcb, 0xcf, 0x99, 0x76, 0x6b, 0xab, 0x02, 0xf1, 0xa7, 0x00, 0x6e, 0x49, 0x2c, 0xbc, 0x64,
	0x99, 0xee, 0x30, 0x0b, 0x9e, 0x32, 0x7d, 0x56, 0xf8, 0x22, 0x34, 0x7e, 0x06, 0xc4, 0x68, 0x2e,
	0x31, 0xfe, 0xde, 0xc8, 0x01, 0x2c, 0xdc, 0x1a, 0xe4, 0x37, 0x1a, 0x67, 0xc4, 0xf2, 0xc8, 0x6c,
	0x91, 0xc5, 0x59, 0x61, 0xc1, 0x16, 0x39, 0xe7, 0xf5, 0xce, 0x5a, 0x8d, 0x72, 0xce, 0xda, 0x5f,
	0x02, 0xd8, 0xc3, 0x2d, 0x38, 0x1a, 0x85, 0xae, 0x6d, 0x30, 0x69, 0xf1, 0xb9, 0x73, 0x03, 0xfc,
	0x8f, 0xd0, 0xf8, 0x06, 0x88, 0xd1, 0xbf, 0x06, 0xb0, 0x83, 0xbe, 0x1f, 0xf8, 0x04, 0x38, 0x85,
	0xbd, 0x5a, 0xc8, 0x34, 0xa8, 0xda, 0xf2, 0x88, 0xed, 0xcd, 0x35, 0x6d, 0x6a, 0x39, 0xd9, 0x11,
	0x8d, 0xa9, 0x66, 0x26, 0x17, 0x2b, 0xc2, 0x46, 0x17, 0x73, 0x80, 0xa3, 0x80, 0x95, 0x96, 0x4a,
	0x1f, 0xe1, 0x4f, 0x1e, 0x3b, 0x35, 0x51, 0x99, 0x1a, 0xd4, 0x4f, 0x9f, 0x18, 0xa7, 0xf5, 0xf1,
	0xc6, 0x27, 0x8e, 0x4c, 0x90, 0x7f, 0x45, 0xbd, 0xbc, 0xf1, 0xca, 0xf1, 0x13, 0x83, 0xba, 0x69,
	0x9a, 0xd4, 0xbf, 0x45, 0x9d, 0x52, 0xd2, 0x5f, 0x6e, 0x73, 0x3f, 0x63, 0xc3, 0x77, 0xf8, 0x85,
	0x4b, 0x47, 0x6c, 0xb1, 0x95, 0xb8, 0x2e, 0x7a, 0x5d, 0x80, 0xac, 0x95, 0xaf, 0x02, 0xd8, 0xa7,
	0x54, 0x29, 0x3d, 0x86, 0xcf, 0x47, 0x5a, 0x9f, 0x99, 0xaa, 0x5b, 0x7a, 0x6e, 0x20, 0xf3, 0x20,
	0x34, 0xde, 0x0b, 0x62, 0x34, 0x23, 0x30, 0xf0, 0x04, 0xa3, 0x9f, 0xac, 0xd8, 0x14, 0x8a, 0x68,
	0xa9, 0x8a, 0x52, 0xf5, 0x4e, 0x7a, 0xc3, 0xd2, 0x27, 0xc4, 0x54, 0x54, 0xd1, 0x42, 0xa3, 0x2c,
	0xe0, 0x71, 0x88, 0x06, 0x3c, 0x8a, 0x53, 0x5f, 0xb6, 0xe6, 0x35, 0x23, 0x05, 0x35, 0xd1, 0xda,
	0x4a, 0xe5, 0xbe, 0x0b, 0xc3, 0x1e, 0x81, 0xf9, 0x65, 0x00, 0xfb, 0x15, 0x20, 0x69, 0x34, 0xb7,
	0xd6, 0xcb, 0xe0, 0x16, 0xa1, 0xdd, 0x99, 0xe8, 0xcb, 0x47, 0xc5, 0x04, 0x46, 0xe9, 0x07, 0xc5,
	0x00, 0x8b, 0x38, 0xa4, 0xd9, 0x00, 0xb3, 0x98, 0x7c, 0x51, 0x3c, 0xcf, 0xae, 0xce, 0x2b, 0x91,
	0x99, 0xd9, 0xa3, 0x82, 0x62, 0x48, 0xab, 0x14, 0xaa, 0x3f, 0x02, 0x70, 0x8b, 0x02, 0x2a, 0x53,
	0x68, 0xb8, 0x96, 0x47, 0xbb, 0x52, 0x20, 0x96, 0x3a, 0x95, 0x22, 0x01, 0xf0, 0xd9, 0xb5, 0x60,
	0x9c, 0x71, 0x64, 0xc8, 0x7b, 0xd7, 0x17, 0xed, 0xa5, 0x8b, 0xa7, 0xc1, 0xad, 0xda, 0xcd, 0x2b,
	0xcf, 0x8c, 0x0d, 0xb3, 0x0f, 0x68, 0x5f, 0x11, 0x6e, 0x25, 0x25, 0x1b, 0xbb, 0xea, 0x56, 0xca,
	0x3c, 0xce, 0x50, 0xe5, 0x79, 0x10, 0xa3, 0xd3, 0x70, 0xa3, 0xf8, 0x28, 0x55, 0xf2, 0x61, 0xe0,
	0xfe, 0xb5, 0x39, 0x99, 0x72, 0xf5, 0x0b, 0x12, 0x1f, 0xd3, 0x1e, 0xed, 0xd6, 0xb4, 0x8f, 0x49,
	0x54, 0x39, 0x1c, 0x3e, 0x8b, 0x97, 0xc2, 0xe1, 0x67, 0x45, 0x76, 0xf9, 0x0b, 0xda, 0x47, 0x01,
	0xdc, 0xcc, 0xac, 0x3f, 0xb5, 0xe8, 0xc4, 0x36, 0x33, 0xf7, 0x2c, 0x33, 0x81, 0x5a, 0x8c, 0x50,
	0x2b, 0xf8, 0xf7, 0x8c, 0x09, 0x23, 0x30, 0x0b, 0x61, 0xb2, 0xc9, 0xa5, 0x24, 0xa2, 0xb0, 0x0e,
	0x18, 0xdb, 0xe4, 0x99, 0xbb, 0x0a, 0x25, 0x59, 0xb4, 0x1f, 0xe3, 0x9b, 0x6d, 0x15, 0xb6, 0x24,
	0x0f, 0x3f, 0x87, 0x2a, 0xf3, 0x80, 0xc6, 0x13, 0x3d, 0xd0, 0x0a, 0xb6, 0x9b, 0x19, 0x47, 0x15,
	0x95, 0x7f, 0xc8, 0xec, 0xc0, 0x0d, 0x4d, 0x2f, 0x84, 0x4b, 0xc5, 0xde, 0xdf, 0xb5, 0x09, 0x2f,
	0x54, 0x1a, 0x7b, 0xb9, 0x67, 0x19, 0xec, 0xfd, 0x5a, 0x5b, 0x8c, 0x7e, 0xb2, 0xad, 0x15, 0x8c,
	0x7f, 0x5b, 0x62, 0xc7, 0x17, 0xf4, 0xe8, 0x22, 0x93, 0xa8, 0xff, 0x51, 0xbc, 0x24, 0x7d, 0x21,
	0xcc, 0xea, 0xca, 0x95, 0x88, 0x91, 0x7b, 0xe6, 0x16, 0xdf, 0xd5, 0xd3, 0x75, 0x60, 0x5a, 0x7c,
	0xe5, 0xca, 0x3b, 0x40, 0xf9, 0x8a, 0x76, 0x61, 0xe2, 0xc1, 0xf3, 0x1b, 0x51, 0x36, 0xb4, 0x87,
	0x96, 0x4e, 0xe3, 0xb6, 0x24, 0x0f, 0x5d, 0xcc, 0xa2, 0x9a, 0xa7, 0x46, 0x76, 0xb1, 0xcd, 0x03,
	0x48, 0x98, 0xf7, 0x8b, 0xe7, 0xab, 0x23, 0x16, 0x9b, 0x3a, 0xdf, 0x21, 0x66, 0xa0, 0xb1, 0x40,
	0x05, 0x4c, 0xcf, 0x20, 0x9c, 0x50, 0x0f, 0x6c, 0x87, 0x46, 0x2f, 0x34, 0x3d, 0x17, 0x87, 0xe1,
	0x5a, 0x7c, 0x72, 0xb2, 0xd4, 0x4c, 0xd5, 0x0e, 0xb1, 0xbe, 0xc8, 0xef, 0x21, 0xd5, 0x7c, 0x7d,
	0x6a, 0x74, 0x9c, 0xc9, 0x35, 0x6b, 0x55, 0x92, 0x13, 0xae, 0xfc, 0x2b, 0x20, 0x9c, 0x64, 0x69,
	0xaa, 0xe7, 0x9e, 0x65, 0xa8, 0xfe, 0x45, 0x10, 0xa3, 0x9f, 0x00, 0xad, 0xa8, 0x7e, 0x8e, 0x35,
	0x2f, 0x58, 0xd8, 0x02, 0xad, 0xa9, 0x13, 0x9a, 0x9c, 0xb7, 0xb1, 0xc9, 0xea, 0x0c, 0xcb, 0x14,
	0x5c, 0x69, 0x8c, 0x13, 0xfd, 0x29, 0xce, 0x8f, 0x52, 0x41, 0xf3, 0x46, 0x79, 0x75, 0x36, 0xff,
	0x59, 0x22, 0x24, 0xfc, 0xa6, 0x17, 0xa9, 0xb5, 0xc7, 0xd3, 0xd1, 0xfe, 0xf2, 0x18, 0x23, 0x8a,
	0xd1, 0x23, 0xad, 0xa6, 0xb8, 0x5f, 0x3d, 0xd4, 0x48, 0x8e, 0x33, 0xd4, 0x5e, 0x8b, 0x82, 0xc6,
	0x15, 0x9b, 0x2d, 0x0d, 0x62, 0x12, 0xfb, 0xf5, 0xfb, 0x00, 0xf6, 0x1f, 0x71, 0xc2, 0x34, 0x80,
	0x5b, 0xcd, 0xec, 0x23, 0xb6, 0xb3, 0x52, 0x9e, 0xc8, 0xb3, 0x8c, 0x18, 0xc4, 0x28, 0x68, 0x05,
	0xf7, 0x13, 0x47, 0x68, 0xf2, 0x66, 0x82, 0xe5, 0x15, 0x60, 0x95, 0x4b, 0x27, 0x6b, 0xaf, 0x29,
	0x8e, 0x08, 0x61, 0xba, 0x71, 0x33, 0x86, 0x91, 0x60, 0x87, 0x56, 0x2c, 0x01, 0xb5, 0x6f, 0x00,
	0xb8, 0x05, 0xd5, 0xa4, 0x35, 0x2c, 0xc6, 0xd6, 0x76, 0x98, 0x05, 0x4f, 0x33, 0xcc, 0xf6, 0x1e,
	0x10, 0xa3, 0xc7, 0x95, 0x09, 0x69, 0x49, 0x2e, 0x0a, 0xf1, 0x6c, 0xe0, 0x1e, 0x1e, 0x4c, 0x9f,
	0x63, 0x16, 0xaf, 0x46, 0x8f, 0xe4, 0xf8, 0xb6, 0x89, 0x1d, 0x09, 0xa8, 0x46, 0x35, 0x05, 0x7b,
	0xc8, 0xd8, 0x93, 0x03, 0x7b, 0x85, 0xcd, 0xca, 0x9f, 0x01, 0xb8, 0x9d, 0x05, 0x53, 0x16, 0xcc,
	0x27, 0xfb, 0x28, 0xbf, 0x78, 0x5e, 0x02, 0x31, 0xaa, 0xae, 0x32, 0x9f, 0xb1, 0x24, 0x58, 0xb3,
	0x68, 0x4a, 0x65, 0xdb, 0x75, 0xcb, 0xea, 0xc4, 0x98, 0x31, 0x51, 0x30, 0xb5, 0x91, 0xf2, 0x3d,
	0x6b, 0x9d, 0x5a, 0x6e, 0xb1, 0xfc, 0x59, 0x09, 0xee, 0x2c, 0x20, 0x0f, 0xcb, 0xf8, 0x7f, 0x9d,
	0xd9, 0xea, 0x55, 0x66, 0xba, 0x3f, 0x5b, 0x8a, 0xd1, 0xb7, 0xc1, 0x2a, 0xf3, 0xfd, 0x9c, 0x3c,
	0xc5, 0x51, 0x52, 0x50, 0xf1, 0xcd, 0xac, 0x9f, 0xa9, 0xc4, 0x63, 0xeb, 0x0d, 0x3b, 0x88, 0x9c,
	0x6a, 0xd3, 0xb5, 0x83, 0x1c, 0x76, 0x5c, 0xc7, 0x3b, 0xcb, 0x63, 0xf9, 0x52, 0xd8, 0x50, 0x0f,
	0x3c, 0x58, 0xbf, 0x5c, 0x72, 0x8b, 0x88, 0x85, 0x19, 0xe9, 0x0d, 0xce, 0x5c, 0xea, 0x1d, 0xa4,
	0xfb, 0x4a, 0x29, 0xab, 0xc5, 0x51, 0x31, 0xc5, 0xee, 0xb8, 0xf1, 0xd0, 0xc5, 0x62, 0x77, 0x98,
	0xf5, 0x4e, 0xf9, 0xa9, 0x04, 0xaf, 0x2d, 0xe6, 0x27, 0x81, 0xea, 0x02, 0xa6, 0x2a, 0x42, 0xf5,
	0x8b, 0xa5, 0x18, 0x7d, 0x7d, 0x35, 0x54, 0xbf, 0x0c, 0x24, 0x6f, 0x29, 0xfb, 0x65, 0x86, 0x13,
	0xb9, 0xf1, 0xbd, 0xec, 0xd8, 0xe6, 0x27, 0xf1, 0xeb, 0x47, 0xf1, 0x64, 0xf9, 0xd0, 0x25, 0xa2,
	0x78, 0xf8, 0x59, 0xfa, 0xef, 0x05, 0xed, 0xdd, 0x25, 0xb8, 0xeb, 0x10, 0x8e, 0x0a, 0x91, 0x1c,
	0xb6, 0x5e, 0xba, 0x03, 0x66, 0x41, 0x23, 0x6e, 0xa0, 0xfd, 0x1b, 0x1a, 0x87, 0xbf, 0x32, 0xc2,
	0x4f, 0x67, 0xab, 0x11, 0x64, 0x52, 0xc1, 0xce, 0x39, 0x0b, 0xd8, 0x5b, 0x01, 0xb5, 0xe2, 0x9b,
	0x74, 0x15, 0x45, 0xb6, 0xba, 0xb5, 0x8b, 0x5f, 0xdd, 0x7f, 0x01, 0xe0, 0x2e, 0xaa, 0xeb, 0x0a,
	0xa6, 0x16, 0xe6, 0xbc, 0x2f, 0x52, 0x2b, 0x7e, 0x9e, 0x46, 0xd6, 0xae, 0x3c, 0xe3, 0x93, 0xc5,
	0xda, 0x31, 0x35, 0xc5, 0xe4, 0xc2, 0x33, 0x0f, 0xc2, 0x15, 0xd7, 0x03, 0x15, 0x5f, 0x5a, 0x46,
	0x96, 0xdd, 0xab, 0x1d, 0x58, 0xdf, 0x6c, 0x13, 0xad, 0xfa, 0xee, 0x12, 0xbc, 0xa1, 0xd5, 0x64,
	0x57, 0xa3, 0xbf, 0x32, 0xf9, 0xaf, 0x80, 0x18, 0x35, 0x56, 0x99, 0xfc, 0x89, 0xe2, 0xc9, 0x73,
	0xa2, 0x13, 0x63, 0x87, 0x5d, 0x28, 0x29, 0x26, 0xbb, 0x34, 0x7a, 0x32, 0x73, 0x7f, 0x54, 0x9b,
	0xbc, 0xd4, 0x65, 0x90, 0x60, 0xe3, 0x4f, 0x01, 0xdc, 0x4a, 0x0c, 0x81, 0x9c, 0xfa, 0x4a, 0x53,
	0x7d, 0xa7, 0x59, 0xf4, 0x91, 0x70, 0xc1, 0x3d, 0xbd, 0x0a, 0x1e, 0x1e, 0x51, 0xd9, 0x3e, 0x47,
	0xfa, 0x56, 0x92, 0x43, 0x29, 0xf3, 0x41, 0x50, 0xc5, 0x40, 0x67, 0x07, 0xeb, 0xda, 0xd0, 0xba,
	0x30, 0xa0, 0x7d, 0xaa, 0x04, 0x6f, 0x50, 0x74, 0x94, 0xe2, 0xe5, 0x94, 0xf3, 0x35, 0xcc, 0x95,
	0x3f, 0xc8, 0xc8, 0xd7, 0xef, 0xb2, 0x74, 0x84, 0xc9, 0xbc, 0x6f, 0x4c, 0xe6, 0x9d, 0x2a, 0xa2,
	0x21, 0x91, 0xf0, 0xf8, 0xda, 0xed, 0x92, 0x94, 0x2f, 0x6d, 0x0c, 0xbb, 0xd4, 0x7d, 0x2c, 0x4a,
	0x3b, 0xe6, 0xdc, 0xb4, 0x4c, 0x36, 0x1a, 0xe3, 0x6b, 0x46, 0xc9, 0x2a, 0xc7, 0xe5, 0x5f, 0x2f,
	0xc1, 0xdd, 0x69, 0x1d, 0x54, 0x8c, 0xaf, 0x15, 0xde, 0xe6, 0x2d, 0x9d, 0xff, 0x09, 0x62, 0xf4,
	0x53, 0xeb, 0xc2, 0xd7, 0xdc, 0x45, 0xd9, 0x3d, 0xb2, 0x50, 0xe6, 0xfa, 0xd0, 0xf7, 0x58, 0x79,
	0xea, 0x72, 0xa0, 0x2f, 0x27, 0x59, 0xbf, 0xd2, 0x06, 0x6f, 0x5a, 0x99, 0xaf, 0x98, 0x5e, 0xbf,
	0xcd, 0x5c, 0xc3, 0x57, 0x19, 0x94, 0x7e, 0xbf, 0x14, 0xa3, 0x7f, 0x5c, 0x17, 0x4a, 0xbf, 0x75,
	0x05, 0x4c, 0xab, 0x02, 0x5e, 0x6d, 0x8d, 0xeb, 0x2b, 0x63, 0x7a, 0xbd, 0xd9, 0x78, 0xf2, 0x4a,
	0x10, 0x4f, 0x31, 0xcb, 0x7e, 0xab, 0x0d, 0xde, 0xba, 0xea, 0x92, 0x60, 0x94, 0xbc, 0xd9, 0x5c,
	0x27, 0x19, 0xff, 0xac, 0x14, 0xa3, 0xff, 0xb5, 0x2e, 0x32, 0x7e, 0xed, 0xca, 0x98, 0x6d, 0x97,
	0x48, 0xc9, 0x8b, 0x36, 0xeb, 0x70, 0xb9, 0x7a, 0x05, 0xc9, 0x27, 0x4d, 0xbe, 0xb8, 0x04, 0x77,
	0x28, 0x8b, 0x8c, 0x4c, 0x50, 0x0a, 0xb3, 0x6b, 0xcd, 0x16, 0x6f, 0x0a, 0x22, 0xce, 0x66, 0x14,
	0x52, 0xed, 0x4c, 0x48, 0x45, 0x11, 0x96, 0xd0, 0xe8, 0xfe, 0x8b, 0xdb, 0x85, 0x8e, 0xd1, 0x5a,
	0xd9, 0x14, 0x2d, 0x55, 0xe3, 0x4d, 0x97, 0x05, 0x2d, 0x22, 0xf0, 0x97, 0x23, 0x62, 0x5a, 0xfc,
	0xa6, 0xb2, 0xfe, 0x33, 0x25, 0x38, 0x90, 0x66, 0xec, 0x0c, 0x5e, 0x8a, 0x1e, 0xe7, 0xa5, 0xfb,
	0x9f, 0x83, 0x18, 0xd5, 0xd7, 0x84, 0x97, 0x43, 0x97, 0xbc, 0x9b, 0x55, 0x50, 0xd4, 0x28, 0x7b,
	0x57, 0x16, 0x45, 0x39, 0x79, 0xfe, 0x99, 0x36, 0x78, 0x5d, 0x0b, 0x56, 0x61, 0xcb, 0x5f, 0x37,
	0x57, 0x7a, 0x9d, 0x41, 0xdb, 0x7f, 0x2b, 0xc5, 0xe8, 0xbf, 0x80, 0x35, 0xe1, 0xed, 0xff, 0x77,
	0x85, 0x77, 0xc5, 0x14, 0xab, 0x57, 0x46, 0x3c, 0x3f, 0x63, 0x34, 0x5f, 0x59, 0x2a, 0x29, 0x82,
	0xfb, 0x33, 0x6d, 0xf0, 0xc6, 0xd6, 0xfc, 0x2d, 0x48, 0xd6, 0x82, 0xc9, 0x8b, 0x48, 0xf6, 0xc7,
	0xa5, 0x18, 0xfd, 0xfe, 0xda, 0x48, 0xf6, 0x8b, 0x57, 0x7e, 0x77, 0xdd, 0x82, 0x6a, 0x17, 0x2d,
	0x8a, 0xdf, 0x52, 0xbe, 0xf0, 0xaa, 0x90, 0x4a, 0x0a, 0xe9, 0x3f, 0x2c, 0xc1, 0xeb, 0x95, 0x2d,
	0x76, 0x8e, 0x58, 0xe1, 0xca, 0x22, 0xe9, 0x06, 0xb3, 0x45, 0x63, 0xbe, 0x47, 0xff, 0xbf, 0x40,
	0x8c, 0xde, 0xb2, 0x26, 0xe2, 0x3d, 0x71, 0xf9, 0x77, 0xea, 0x4c, 0x70, 0x31, 0x44, 0x37, 0xb4,
	0x57, 0x5a, 0x72, 0x7d, 0xa9, 0x04, 0xaf, 0x4f, 0x6d, 0x7b, 0x33, 0xe8, 0x09, 0xb5, 0x9d, 0x66,
	0x6b, 0x0d, 0x28, 0xb7, 0xbd, 0x7f, 0x07, 0x62, 0xf4, 0xec, 0x9a, 0x30, 0x78, 0xfa, 0x32, 0xef,
	0xfc, 0x15, 0xb9, 0xef, 0x6b, 0xf5, 0x57, 0x02, 0x7b, 0xc9, 0x2e, 0xf9, 0x3b, 0x25, 0x68, 0xac,
	0x84, 0xbc, 0xb5, 0xf0, 0xa6, 0x82, 0xc4, 0x1f, 0x2b, 0xc5, 0xe8, 0x99, 0x35, 0x21, 0x71, 0xea,
	0xf2, 0x7a, 0x10, 0x14, 0x1c, 0xbe, 0x0d, 0x68, 0x6f, 0x79, 0x75, 0xd6, 0x7a, 0x82, 0xd6, 0xcf,
	0x97, 0xe0, 0x4e, 0xd5, 0xaf, 0x90, 0xb2, 0x3d, 0x5a, 0xb3, 0xe3, 0x75, 0x66, 0xab, 0x46, 0x04,
	0xb9, 0x7f, 0x92, 0x71, 0xcc, 0xb4, 0x46, 0xee, 0xe5, 0x76, 0x4b, 0x60, 0xad, 0xfa, 0x0a, 0x60,
	0x54, 0x7b, 0x09, 0xc0, 0x1d, 0x2d, 0x2a, 0xd6, 0xaa, 0xc7, 0x57, 0xd7, 0x9a, 0xad, 0xcb, 0xda,
	0x1a, 0xd5, 0x18, 0x3d, 0x02, 0x3b, 0xd9, 0xe3, 0x81, 0x87, 0xd3, 0x78, 0x48, 0x0a, 0x72, 0xa5,
	0x8b, 0xd8, 0x26, 0xf1, 0x66, 0x67, 0xf1, 0xd2, 0xc8, 0x08, 0x53, 0x35, 0x0d, 0xdb, 0x09, 0xc2,
	0x6c, 0xa2, 0x2a, 0xd6, 0x4e, 0xfb, 0x69, 0x00, 0x37, 0xe7, 0xca, 0xbd, 0x6a, 0xdb, 0xcc, 0xa2,
	0x72, 0xb5, 0x03, 0x85, 0x8f, 0x43, 0x63, 0x2a, 0x46, 0xb7, 0x40, 0x78, 0x8a, 0x56, 0x29, 0x3d,
	0xea, 0x45, 0x73, 0x03, 0xad, 0x8a, 0xcb, 0xb2, 0x48, 0x07, 0x43, 0x86, 0x05, 0xb3, 0xc2, 0xa6,
	0xc3, 0xac, 0xdc, 0x2b, 0xbd, 0x82, 0xae, 0xdc, 0x17, 0x7c, 0x37, 0x80, 0x9b, 0x73, 0x15, 0x5e,
	0xb5, 0x6d, 0x66, 0x51, 0xd5, 0x57, 0x55, 0xfb, 0xe7, 0xa1, 0x61, 0x2d, 0xd6, 0x0a, 0x0d, 0x2b,
	0x6c, 0x9a, 0x85, 0xe6, 0xa7, 0x01, 0xdc, 0x38, 0x1e, 0xf8, 0x0d, 0xca, 0xf6, 0xc5, 0xe9, 0xc6,
	0x9a, 0x31, 0x3a, 0x93, 0x1a, 0x78, 0x92, 0x34, 0x08, 0xf5, 0x32, 0x31, 0x98, 0x69, 0x22, 0xe8,
	0x72, 0xd9, 0x24, 0x00, 0x44, 0x11, 0xf6, 0x48, 0xc7, 0x23, 0xe5, 0xb2, 0x2e, 0x2a, 0xd9, 0x51,
	0xfe, 0x75, 0x82, 0x00, 0xd3, 0x92, 0x5e, 0x33, 0x2e, 0xe1, 0x61, 0xbf, 0x81, 0x19, 0x59, 0x77,
	0x53, 0x50, 0xb7, 0x95, 0xb7, 0x64, 0x40, 0xa5, 0xa1, 0xc0, 0x3f, 0x0a, 0x37, 0x27, 0x4c, 0xc4,
	0x2b, 0xdb, 0xa9, 0x10, 0x76, 0x9b, 0x49, 0xb9, 0x3b, 0xe3, 0x64, 0x8c, 0xf6, 0xa5, 0x60, 0x34,
	0x44, 0x46, 0x97, 0xd6, 0x65, 0xdb, 0xd8, 0xcd, 0x77, 0x6d, 0x7b, 0x66, 0x70, 0x51, 0x02, 0xef,
	0x63, 0x00, 0x6e, 0x53, 0x2f, 0xe2, 0xca, 0x8a, 0x7d, 0xda, 0x16, 0x33, 0x5f, 0x05, 0x32, 0x13,
	0xca, 0x31, 0x9a, 0x04, 0xa9, 0x1d, 0x18, 0x17, 0x05, 0x41, 0xc9, 0xa7, 0xfa, 0x0c, 0x8e, 0x16,
	0x31, 0xf6, 0x52, 0x29, 0x40, 0x17, 0x1c, 0x3b, 0x7f, 0x5b, 0x26, 0x9b, 0x26, 0x4e, 0xc4, 0x9f,
	0x11, 0xd9, 0x40, 0x28, 0xf7, 0x65, 0x00, 0xb5, 0x43, 0x38, 0xca, 0x02, 0xb7, 0xc3, 0x2c, 0x2e,
	0x6f, 0x38, 0x50, 0x00, 0x35, 0x0d, 0x66, 0x42, 0x09, 0xa8, 0x77, 0xf3, 0x78, 0xba, 0x8b, 0x81,
	0x54, 0xf1, 0x8b, 0xaa, 0x90, 0xa6, 0xe5, 0x4b, 0x52, 0xaf, 0xf0, 0x82, 0xf6, 0x3f, 0x01, 0xdc,
	0x9c, 0x4b, 0xd7, 0xaa, 0x6d, 0x33, 0x8b, 0x4a, 0xb9, 0x0d, 0x14, 0x3e, 0x0e, 0x8d, 0xcf, 0x51,
	0x9b, 0xaa, 0x47, 0x7d, 0x3c, 0xe0, 0x17, 0x45, 0xe2, 0xb2, 0x24, 0xb7, 0xb9, 0x54, 0xa7, 0x33,
	0x3c, 0x66, 0x56, 0x26, 0x39, 0xb5, 0xbd, 0x5a, 0x2a, 0x64, 0x35, 0x95, 0xa7, 0x44, 0x64, 0xc8,
	0x65, 0x71, 0xa7, 0x8e, 0xeb, 0x44, 0x8e, 0xc8, 0x73, 0xb1, 0xc7, 0x90, 0x01, 0x5c, 0x6a, 0x2a,
	0x54, 0x1e, 0xf3, 0x24, 0x93, 0xe0, 0x82, 0xb2, 0xf6, 0x03, 0x00, 0xb7, 0x14, 0xd4, 0x6f, 0xd1,
	0x76, 0x98, 0xc5, 0x15, 0x9f, 0x06, 0x5a, 0xbc, 0x60, 0xde, 0xef, 0x1f, 0xc9, 0x4c, 0xde, 0x2d,
	0x9a, 0x3c, 0x4b, 0xa0, 0xc2, 0x8b, 0x17, 0xe8, 0xc7, 0xf2, 0x68, 0xa0, 0x1f, 0x3a, 0x5e, 0x3a,
	0x88, 0x72, 0x8d, 0x33, 0xbf, 0xde, 0xd8, 0x59, 0x38, 0xf3, 0xc8, 0x6f, 0x90, 0xe9, 0x7e, 0x10,
	0xc0, 0xad, 0x7c, 0xc5, 0x89, 0x42, 0x0b, 0x2c, 0x3a, 0xb2, 0xcf, 0x4c, 0xd7, 0xc3, 0x48, 0xa2,
	0x24, 0xab, 0x31, 0x7a, 0x48, 0xc4, 0xab, 0xdd, 0xad, 0x84, 0x48, 0xce, 0xf2, 0xf6, 0x49, 0x58,
	0xa4, 0x1a, 0x09, 0x59, 0x2e, 0x3b, 0x09, 0xec, 0xd9, 0xdc, 0x1a, 0x8c, 0x0c, 0xa2, 0x03, 0x9e,
	0x5b, 0x63, 0x03, 0xcf, 0x51, 0xab, 0x75, 0x9b, 0x49, 0xb6, 0x5a, 0x75, 0x1d, 0xbf, 0x29, 0x46,
	0x43, 0xb0, 0xfb, 0xa8, 0xed, 0x78, 0x11, 0xf6, 0x48, 0xcf, 0x03, 0x37, 0x28, 0x39, 0x68, 0x03,
	0x2c, 0xb3, 0xd0, 0xb2, 0x64, 0x3e, 0xf8, 0x7c, 0x36, 0x54, 0xac, 0x9e, 0x34, 0x1d, 0xa6, 0x1f,
	0x10, 0x45, 0x2c, 0x12, 0xd4, 0x5e, 0xd0, 0x3e, 0x09, 0xe0, 0x96, 0x0c, 0x6e, 0x4e, 0xb8, 0x7e,
	0xa4, 0xf5, 0x9b, 0x99, 0x9a, 0x14, 0x03, 0x1b, 0x4d, 0x5e, 0xe9, 0xc4, 0x58, 0x88, 0xd1, 0xc3,
	0xb0, 0x83, 0xfc, 0x0a, 0x07, 0x0e, 0xac, 0x19, 0x39, 0x49, 0xca, 0xfe, 0xa7, 0x43, 0x1e, 0x8d,
	0xa5, 0x04, 0x1b, 0x90, 0xb7, 0xa1, 0xc4, 0xce, 0xf0, 0xb3, 0x91, 0xdf, 0xb8, 0x30, 0xfc, 0xac,
	0x4c, 0xd9, 0x7f, 0x61, 0x04, 0x94, 0x07, 0x36, 0xc7, 0xa8, 0x57, 0xeb, 0x39, 0x35, 0x51, 0x79,
	0x6c, 0x72, 0x6c, 0x42, 0x1f, 0x9f, 0x38, 0x35, 0x36, 0xfa, 0x37, 0x30, 0x46, 0xbf, 0x0b, 0x61,
	0x9b, 0x65, 0xee, 0xd3, 0xfe, 0xa8, 0x04, 0xbb, 0xc5, 0xf5, 0x25, 0x74, 0x62, 0x52, 0xb3, 0x84,
	0xfc, 0x27, 0x98, 0x7a, 0x52, 0x79, 0x93, 0x64, 0xcd, 0xb4, 0x1b, 0x8e, 0x59, 0xe3, 0x81, 0x1e,
	0x55, 0xbf, 0xbe, 0xd7, 0x78, 0x04, 0xf6, 0x8d, 0x2f, 0x79, 0x4c, 0x5c, 0x38, 0xcf, 0x60, 0xfd,
	0xd8, 0x63, 0xda, 0x4e, 0xf1, 0x71, 0x4d, 0x79, 0x41, 0xbe, 0x1e, 0xb8, 0xde, 0x6e, 0x38, 0x43,
	0x3c, 0xcd, 0x74, 0xf8, 0x70, 0xf6, 0xb5, 0x45, 0x80, 0x1a, 0xf9, 0x2a, 0x80, 0x9d, 0xe7, 0x87,
	0x5c, 0x7f, 0xce, 0xd7, 0xbe, 0x04, 0xca, 0xbf, 0x02, 0xe0, 0xc3, 0xb0, 0xad, 0x19, 0xb8, 0xda,
	0xbd, 0x03, 0x07, 0x44, 0xbf, 0x0b, 0x73, 0x35, 0x15, 0x88, 0x61, 0xbb, 0xd1, 0x18, 0xb6, 0xc3,
	0x10, 0x47, 0xe1, 0xb0, 0x53, 0x9f, 0x1b, 0x16, 0xaf, 0x48, 0x1f, 0x66, 0xb8, 0x30, 0x07, 0x77,
	0xc1, 0xbe, 0x19, 0xbb, 0x7a, 0x76, 0x2e, 0xf0, 0x9b, 0x5e, 0x6d, 0xcc, 0x77, 0xfd, 0x40, 0xeb,
	0x1c, 0x68, 0xbf, 0xe9, 0xe0, 0xc1, 0x83, 0xf0, 0x2e, 0xb8, 0xc1, 0x76, 0xa3, 0x29, 0x7c, 0x3e,
	0xd2, 0xca, 0x03, 0x7b, 0xf8, 0x94, 0x07, 0x75, 0x5a, 0x96, 0x87, 0xaa, 0xe8, 0x25, 0xbf, 0x19,
	0x30, 0x22, 0x54, 0xfd, 0x20, 0xc0, 0xae, 0x1d, 0xe1, 0xd0, 0x84, 0xbb, 0x61, 0xfb, 0x7c, 0x80,
	0x67, 0xb5, 0x5d, 0x03, 0x3b, 0x04, 0x50, 0x8b, 0x8b, 0x8b, 0x2a, 0x50, 0x03, 0x7d, 0x19, 0x54,
	0x19, 0x60, 0xb8, 0x0c, 0x4a, 0x56, 0x3f, 0x2d, 0x86, 0x55, 0xa5, 0x9a, 0x74, 0x98, 0xd0, 0x75,
	0x24, 0xf7, 0xa4, 0x72, 0x37, 0x6c, 0xbb, 0x8b, 0xe5, 0xaf, 0x38, 0xed, 0xe1, 0xf3, 0x0d, 0x56,
	0x32, 0x85, 0x30, 0x65, 0x40, 0x56, 0x35, 0xdd, 0x89, 0x17, 0xa5, 0x3b, 0xa8, 0x98, 0xb0, 0xed,
	0xce, 0x7d, 0xfb, 0xb5, 0xdb, 0xe0, 0xe6, 0xd3, 0x9e, 0x92, 0xf8, 0xb2, 0x6a, 0xbb, 0x6e, 0xd1,
	0xf7, 0x6f, 0xb8, 0x0e, 0x0e, 0xc0, 0xb6, 0x47, 0xce, 0x4c, 0x69, 0x5b, 0x36, 0x96, 0x06, 0x36,
	0x89, 0x16, 0xcc, 0x76, 0x2b, 0xcd, 0x74, 0xc1, 0x0d, 0xec, 0xed, 0x35, 0xcf, 0x7c, 0xb4, 0x13,
	0x76, 0x9f, 0x1f, 0x8a, 0xec, 0xb9, 0x43, 0x81, 0xdf, 0x6c, 0x84, 0xda, 0xbb, 0x3b, 0xad, 0x77,
	0x76, 0xc2, 0x63, 0xe5, 0x23, 0x70, 0x17, 0x6c, 0xa7, 0xb7, 0xfd, 0x37, 0x0f, 0xf4, 0x11, 0x23,
	0x48, 0x3f, 0x6a, 0x7b, 0xf6, 0x1c, 0xe5, 0x64, 0x38, 0x0c, 0xdb, 0x23, 0x7b, 0x2e, 0xd4, 0x6e,
	0xb3, 0x6e, 0x81, 0x9d, 0x03, 0x3c, 0xa7, 0xe7, 0x00, 0xcb, 0xc8, 0x43, 0xfe, 0xa0, 0xa9, 0x8a,
	0x60, 0xd7, 0x80, 0xc8, 0xf3, 0x09, 0xef, 0x2f, 0x8f, 0x40, 0x83, 0xf7, 0x37, 0x30, 0xb0, 0x33,
	0x65, 0x82, 0xaa, 0x1d, 0x6f, 0xe5, 0x1d, 0xf7, 0x58, 0x10, 0x6e, 0x1c, 0xe0, 0x36, 0x29, 0xbc,
	0xb7, 0x7c, 0x00, 0x5e, 0xcb, 0x5b, 0x6f, 0x19, 0xd8, 0xcc, 0xac, 0x0a, 0xb5, 0xd9, 0x4e, 0xde,
	0xac, 0xdf, 0xea, 0x85, 0x3d, 0x03, 0x8a, 0xd9, 0x01, 0xef, 0x2c, 0x5b, 0x70, 0x1b, 0x6f, 0xba,
	0x69, 0x40, 0x4d, 0xc1, 0x42, 0xe6, 0x47, 0x1b, 0x6d, 0xb6, 0xfa, 0x60, 0xe6, 0xd5, 0x60, 0xb9,
	0x0c, 0x37, 0xf3, 0x56, 0x5d, 0x03, 0x42, 0x1d, 0x93, 0x8e, 0x68, 0x8b, 0x4d, 0x56, 0x37, 0x54,
	0x1e, 0xef, 0x2b, 0x9b, 0x70, 0x0b, 0xff, 0xba, 0x7b, 0x20, 0x89, 0xd7, 0x87, 0x3b, 0xf8, 0xf7,
	0x7d, 0xd6, 0x26, 0x98, 0x7a, 0xf1, 0xe3, 0xa0, 0xfc, 0x0e, 0x00, 0x35, 0xde, 0x06, 0x0e, 0x24,
	0x1b, 0x14, 0x8f, 0x37, 0x99, 0xb5, 0x6a, 0x04, 0x28, 0x65, 0x1b, 0x02, 0xb7, 0x0e, 0x14, 0x1c,
	0xa7, 0xc2, 0x81, 0x81, 0x96, 0x7b, 0x1a, 0xb8, 0x7b, 0x60, 0xb5, 0xe3, 0x03, 0xb8, 0xa7, 0x7c,
	0x2b, 0xec, 0xe3, 0x70, 0x6c, 0x18, 0x60, 0x42, 0x9e, 0x4c, 0x86, 0x02, 0xd1, 0x6d, 0x75, 0x41,
	0xf9, 0xf0, 0xee, 0xf2, 0x9d, 0x70, 0x3b, 0xff, 0xb2, 0x77, 0x20, 0xa5, 0xe5, 0xe0, 0x00, 0x6f,
	0xa0, 0x59, 0xfd, 0x30, 0xfb, 0x6e, 0xa8, 0x7c, 0x3b, 0x21, 0x2b, 0x6d, 0x47, 0x68, 0x13, 0xd9,
	0x91, 0x13, 0x46, 0x4e, 0x35, 0xcc, 0x0e, 0x43, 0xde, 0xe4, 0x50, 0xcf, 0xaf, 0x8c, 0x65, 0x51,
	0x2f, 0x1e, 0x67, 0xc8, 0xab, 0xa8, 0x86, 0x2c, 0x79, 0xd5, 0x57, 0x99, 0x49, 0x53, 0xe1, 0x9d,
	0x85, 0x86, 0x3e, 0x7c, 0xc3, 0x8d, 0x73, 0x4e, 0x34, 0xdf, 0x9c, 0xa1, 0xa2, 0x48, 0x95, 0x69,
	0x42, 0x10, 0xcd, 0x74, 0x36, 0x02, 0x3f, 0xf2, 0xef, 0xf8, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xa8, 0x04, 0x3d, 0x20, 0xd7, 0x42, 0x01, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DynizerClient is the client API for Dynizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DynizerClient interface {
	//Login
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error)
	//Service Login
	ServiceLogin(ctx context.Context, in *ServiceLoginReq, opts ...grpc.CallOption) (*LoginRes, error)
	//Logout
	Logout(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Validate Token
	ValidateToken(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*SessionID, error)
	//Issue ServiceToken
	IssueServiceToken(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ServiceTokenRes, error)
	//List Roles
	ListRoles(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ListRolesRes, error)
	//Add User
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Assign User Role
	AssignUserRole(ctx context.Context, in *UserRoleReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Revoke User Role
	RevokeUserRole(ctx context.Context, in *UserRoleReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Enable User
	EnableUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Disable User
	DisableUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Set User Password
	SetUserPassword(ctx context.Context, in *SetUserPasswordReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Change My Password
	ChangeMyPassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Get User
	GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error)
	//Get My Profile
	GetMyProfile(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*UserRes, error)
	//Delete User
	DeleteUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Get User Count
	GetUserCount(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*UserCountRes, error)
	//List Users
	ListUsers(ctx context.Context, in *WindowReq, opts ...grpc.CallOption) (*ListUsersRes, error)
	//List User Roles
	ListUserRoles(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*ListUserRolesRes, error)
	//Get My Roles
	GetMyRoles(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ListUserRolesRes, error)
	//Check User Name
	CheckUserName(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Check Password
	CheckPassword(ctx context.Context, in *CheckPasswordReq, opts ...grpc.CallOption) (*CheckPasswordRes, error)
	//Create ActionType
	CreateActionType(ctx context.Context, in *CreateActionTypeReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Update ActionType
	UpdateActionType(ctx context.Context, in *UpdateActionTypeReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read ActionType
	ReadActionType(ctx context.Context, in *ActionTypeReq, opts ...grpc.CallOption) (*ActionTypeRes, error)
	//Check Action Name
	CheckActionName(ctx context.Context, in *CheckActionNameReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Create Action
	CreateAction(ctx context.Context, in *CreateActionReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Update Action
	UpdateAction(ctx context.Context, in *UpdateActionReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Delete Action
	DeleteAction(ctx context.Context, in *DeleteActionReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read Action
	ReadAction(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionRes, error)
	//Count Actions
	CountActions(ctx context.Context, in *CountActionReq, opts ...grpc.CallOption) (*CountRes, error)
	//List Action Names
	ListActionNames(ctx context.Context, in *ListActionNamesWindowReq, opts ...grpc.CallOption) (*ActionNameArrayRes, error)
	//Check ActionLabel Name
	CheckActionLabelName(ctx context.Context, in *CheckActionLabelNameReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Add ActionLabel
	AddActionLabel(ctx context.Context, in *AddActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Update ActionLabel
	UpdateActionLabel(ctx context.Context, in *UpdateActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Delete ActionLabel
	DeleteActionLabel(ctx context.Context, in *ActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read ActionLabel
	ReadActionLabel(ctx context.Context, in *ActionLabelReq, opts ...grpc.CallOption) (*LabelRes, error)
	//Create Object
	CreateObject(ctx context.Context, in *CreateObjectReq, opts ...grpc.CallOption) (*ObjectRes, error)
	//Clear Object Data
	ClearObjectData(ctx context.Context, in *ClearObjectDataReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Stream Object Data IN
	StreamObjectDataIn(ctx context.Context, opts ...grpc.CallOption) (Dynizer_StreamObjectDataInClient, error)
	//Stream Object Data OUT
	StreamObjectDataOut(ctx context.Context, in *StreamObjectDataOutReq, opts ...grpc.CallOption) (Dynizer_StreamObjectDataOutClient, error)
	//Upload Object Data
	UploadObjectData(ctx context.Context, in *UploadObjectDataReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Download Object Data
	DownloadObjectData(ctx context.Context, in *DownloadObjectDataReq, opts ...grpc.CallOption) (*DownloadObjectDataRes, error)
	//Create Instance
	CreateInstance(ctx context.Context, in *CreateInstanceReq, opts ...grpc.CallOption) (*InstanceIDRes, error)
	StreamInstances(ctx context.Context, opts ...grpc.CallOption) (Dynizer_StreamInstancesClient, error)
	//Update Instance
	UpdateInstance(ctx context.Context, in *UpdateInstanceReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Delete Instance
	DeleteInstance(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read Instance
	ReadInstance(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*InstanceRes, error)
	//Read Action Instances
	ReadActionInstances(ctx context.Context, in *ReadActionInstancesReq, opts ...grpc.CallOption) (*ReadActionInstancesRes, error)
	//Dynizer Query
	DynizerQuery(ctx context.Context, in *DQLReq, opts ...grpc.CallOption) (*DQLRes, error)
	//Query Result Next
	QueryResultNext(ctx context.Context, in *QueryResultReq, opts ...grpc.CallOption) (*QueryResultRes, error)
	//QueryResultClose
	QueryResultClose(ctx context.Context, in *QueryCloseReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Query Result Streamed
	QueryResultStreamed(ctx context.Context, in *QueryResultReq, opts ...grpc.CallOption) (Dynizer_QueryResultStreamedClient, error)
	//Check MetaDataKey Name
	CheckMetaDataKeyName(ctx context.Context, in *CheckMetaDataKeyNameReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Create MetaDataKey
	CreateMetaDataKey(ctx context.Context, in *CreateMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read MetaDataKey
	ReadMetaDataKey(ctx context.Context, in *MetaDataKeyReq, opts ...grpc.CallOption) (*MetaDataKeyRes, error)
	//Update MetaDataKey
	UpdateMetaDataKey(ctx context.Context, in *UpdateMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Delete MetaDataKey
	DeleteMetaDataKey(ctx context.Context, in *DeleteMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Count MetaDataKeys
	CountMetaDataKeys(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*CountRes, error)
	//List MetaDataKeys
	ListMetaDataKeys(ctx context.Context, in *ListMetaDataKeysReq, opts ...grpc.CallOption) (*MetaDataKeyArrayRes, error)
	//Add Instance MetaData
	AddInstanceMetaData(ctx context.Context, in *AddInstanceMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove Instance MetaData
	RemoveInstanceMetaData(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Add Instance MetaData Value
	AddInstanceMetaDataValue(ctx context.Context, in *AddInstanceMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove Instance MetaData Value
	RemoveInstanceMetaDataValue(ctx context.Context, in *InstanceMetaDataKeyValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Get Instance MetaData Values
	GetInstanceMetaDataValues(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*GetInstanceMetaDataKeyRes, error)
	//Count Instance MetaDataKeys
	CountInstanceMetaDataKeys(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*CountRes, error)
	//Count Instance MetaDataKey Values
	CountInstanceMetaDataKeyValues(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*CountRes, error)
	//List Instance MetaData
	ListInstanceMetaData(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*ListInstanceMetaDataRes, error)
	//Add Instance ActionLabel MetaData
	AddInstanceActionLabelMetaData(ctx context.Context, in *AddInstanceActionLabelMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove Instance ActionLabel MetaData
	RemoveInstanceActionLabelMetaData(ctx context.Context, in *InstanceActionLabelMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Add Instance ActionLabel MetaData Value
	AddInstanceActionLabelMetaDataValue(ctx context.Context, in *AddInstanceActionLabelMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove Instance ActionLabel MetaData Value
	RemoveInstanceActionLabelMetaDataValue(ctx context.Context, in *InstanceActionLabelMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Add InstanceCell MetaData
	AddInstanceCellMetaData(ctx context.Context, in *AddInstanceCellMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove InstanceCell MetaData
	RemoveInstanceCellMetaData(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Add InstanceCell MetaData Value
	AddInstanceCellMetaDataValue(ctx context.Context, in *AddInstanceCellMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Remove InstanceCell MetaData Value
	RemoveInstanceCellMetaDataValue(ctx context.Context, in *InstanceCellMetaDataKeyValueReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Get InstanceCell MetaData
	GetInstanceCellMetaDataValues(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*GetInstanceCellMetaDataKeyRes, error)
	//Count InstanceCell MetaDataKeys
	CountInstanceCellMetaDataKeys(ctx context.Context, in *InstanceCellMetaDataReq, opts ...grpc.CallOption) (*CountRes, error)
	//Count InstanceCell MetaDataKey Values
	CountInstanceCellMetaDataKeyValues(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*CountRes, error)
	//List InstanceCell MetaData
	ListInstanceCellMetaData(ctx context.Context, in *InstanceCellMetaDataReq, opts ...grpc.CallOption) (*ListInstanceCellMetaDataRes, error)
	GetDynizerConfiguration(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetDynizerConfigurationRes, error)
	ExportUserActions(ctx context.Context, in *ExportUserActionsReq, opts ...grpc.CallOption) (*ExportUserActionsRes, error)
	ImportUserActions(ctx context.Context, in *ImportUserActionsReq, opts ...grpc.CallOption) (*EmptyRes, error)
	DropData(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Get Dynizer Version
	GetDynizerVersion(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*VersionRes, error)
	//Create a new Link via Action Label
	CreateActionLabelLink(ctx context.Context, in *ActionLabelLinkReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Read a Link via Action Label
	GetActionLabelLink(ctx context.Context, in *ActionLabelLinkNameReq, opts ...grpc.CallOption) (*ActionLabelLinkRes, error)
	//Query DataElements Contains
	QueryDataElements(ctx context.Context, in *QueryDataElementsReq, opts ...grpc.CallOption) (*QueryDataElementsRes, error)
	//Query DataElements TopN
	GetTopNDataElements(ctx context.Context, in *GetTopNDataElementsReq, opts ...grpc.CallOption) (*GetTopNDataElementsRes, error)
	//Dynizer Filtered Query
	DynizerFilteredQuery(ctx context.Context, in *FilterQueryReq, opts ...grpc.CallOption) (*DQLRes, error)
	//Dynizer Index rebuild
	ReIndex(ctx context.Context, in *ReIndexReq, opts ...grpc.CallOption) (*EmptyRes, error)
	//Dynizer Filtered Plot
	DynizerFilteredPlot(ctx context.Context, in *FilteredPlotReq, opts ...grpc.CallOption) (*PlotRes, error)
}

type dynizerClient struct {
	cc *grpc.ClientConn
}

func NewDynizerClient(cc *grpc.ClientConn) DynizerClient {
	return &dynizerClient{cc}
}

func (c *dynizerClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/Dynizer/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ServiceLogin(ctx context.Context, in *ServiceLoginReq, opts ...grpc.CallOption) (*LoginRes, error) {
	out := new(LoginRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ServiceLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) Logout(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ValidateToken(ctx context.Context, in *TokenReq, opts ...grpc.CallOption) (*SessionID, error) {
	out := new(SessionID)
	err := c.cc.Invoke(ctx, "/Dynizer/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) IssueServiceToken(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ServiceTokenRes, error) {
	out := new(ServiceTokenRes)
	err := c.cc.Invoke(ctx, "/Dynizer/IssueServiceToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListRoles(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ListRolesRes, error) {
	out := new(ListRolesRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AssignUserRole(ctx context.Context, in *UserRoleReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AssignUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RevokeUserRole(ctx context.Context, in *UserRoleReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RevokeUserRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) EnableUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/EnableUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DisableUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DisableUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) SetUserPassword(ctx context.Context, in *SetUserPasswordReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/SetUserPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ChangeMyPassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ChangeMyPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserRes, error) {
	out := new(UserRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetMyProfile(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*UserRes, error) {
	out := new(UserRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetMyProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DeleteUser(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetUserCount(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*UserCountRes, error) {
	out := new(UserCountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetUserCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListUsers(ctx context.Context, in *WindowReq, opts ...grpc.CallOption) (*ListUsersRes, error) {
	out := new(ListUsersRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListUserRoles(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*ListUserRolesRes, error) {
	out := new(ListUserRolesRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListUserRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetMyRoles(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ListUserRolesRes, error) {
	out := new(ListUserRolesRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetMyRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CheckUserName(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CheckUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CheckPassword(ctx context.Context, in *CheckPasswordReq, opts ...grpc.CallOption) (*CheckPasswordRes, error) {
	out := new(CheckPasswordRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CheckPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateActionType(ctx context.Context, in *CreateActionTypeReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateActionType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) UpdateActionType(ctx context.Context, in *UpdateActionTypeReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UpdateActionType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadActionType(ctx context.Context, in *ActionTypeReq, opts ...grpc.CallOption) (*ActionTypeRes, error) {
	out := new(ActionTypeRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadActionType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CheckActionName(ctx context.Context, in *CheckActionNameReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CheckActionName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateAction(ctx context.Context, in *CreateActionReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) UpdateAction(ctx context.Context, in *UpdateActionReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UpdateAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DeleteAction(ctx context.Context, in *DeleteActionReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DeleteAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadAction(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionRes, error) {
	out := new(ActionRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountActions(ctx context.Context, in *CountActionReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListActionNames(ctx context.Context, in *ListActionNamesWindowReq, opts ...grpc.CallOption) (*ActionNameArrayRes, error) {
	out := new(ActionNameArrayRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListActionNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CheckActionLabelName(ctx context.Context, in *CheckActionLabelNameReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CheckActionLabelName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddActionLabel(ctx context.Context, in *AddActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddActionLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) UpdateActionLabel(ctx context.Context, in *UpdateActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UpdateActionLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DeleteActionLabel(ctx context.Context, in *ActionLabelReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DeleteActionLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadActionLabel(ctx context.Context, in *ActionLabelReq, opts ...grpc.CallOption) (*LabelRes, error) {
	out := new(LabelRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadActionLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateObject(ctx context.Context, in *CreateObjectReq, opts ...grpc.CallOption) (*ObjectRes, error) {
	out := new(ObjectRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ClearObjectData(ctx context.Context, in *ClearObjectDataReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ClearObjectData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) StreamObjectDataIn(ctx context.Context, opts ...grpc.CallOption) (Dynizer_StreamObjectDataInClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dynizer_serviceDesc.Streams[0], "/Dynizer/StreamObjectDataIn", opts...)
	if err != nil {
		return nil, err
	}
	x := &dynizerStreamObjectDataInClient{stream}
	return x, nil
}

type Dynizer_StreamObjectDataInClient interface {
	Send(*StreamObjectDataInReq) error
	CloseAndRecv() (*EmptyRes, error)
	grpc.ClientStream
}

type dynizerStreamObjectDataInClient struct {
	grpc.ClientStream
}

func (x *dynizerStreamObjectDataInClient) Send(m *StreamObjectDataInReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dynizerStreamObjectDataInClient) CloseAndRecv() (*EmptyRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(EmptyRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dynizerClient) StreamObjectDataOut(ctx context.Context, in *StreamObjectDataOutReq, opts ...grpc.CallOption) (Dynizer_StreamObjectDataOutClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dynizer_serviceDesc.Streams[1], "/Dynizer/StreamObjectDataOut", opts...)
	if err != nil {
		return nil, err
	}
	x := &dynizerStreamObjectDataOutClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Dynizer_StreamObjectDataOutClient interface {
	Recv() (*StreamObjectDataOutRes, error)
	grpc.ClientStream
}

type dynizerStreamObjectDataOutClient struct {
	grpc.ClientStream
}

func (x *dynizerStreamObjectDataOutClient) Recv() (*StreamObjectDataOutRes, error) {
	m := new(StreamObjectDataOutRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dynizerClient) UploadObjectData(ctx context.Context, in *UploadObjectDataReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UploadObjectData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DownloadObjectData(ctx context.Context, in *DownloadObjectDataReq, opts ...grpc.CallOption) (*DownloadObjectDataRes, error) {
	out := new(DownloadObjectDataRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DownloadObjectData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateInstance(ctx context.Context, in *CreateInstanceReq, opts ...grpc.CallOption) (*InstanceIDRes, error) {
	out := new(InstanceIDRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) StreamInstances(ctx context.Context, opts ...grpc.CallOption) (Dynizer_StreamInstancesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dynizer_serviceDesc.Streams[2], "/Dynizer/StreamInstances", opts...)
	if err != nil {
		return nil, err
	}
	x := &dynizerStreamInstancesClient{stream}
	return x, nil
}

type Dynizer_StreamInstancesClient interface {
	Send(*StreamInstanceReq) error
	Recv() (*StreamInstanceIDRes, error)
	grpc.ClientStream
}

type dynizerStreamInstancesClient struct {
	grpc.ClientStream
}

func (x *dynizerStreamInstancesClient) Send(m *StreamInstanceReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dynizerStreamInstancesClient) Recv() (*StreamInstanceIDRes, error) {
	m := new(StreamInstanceIDRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dynizerClient) UpdateInstance(ctx context.Context, in *UpdateInstanceReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UpdateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DeleteInstance(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DeleteInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadInstance(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*InstanceRes, error) {
	out := new(InstanceRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadActionInstances(ctx context.Context, in *ReadActionInstancesReq, opts ...grpc.CallOption) (*ReadActionInstancesRes, error) {
	out := new(ReadActionInstancesRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadActionInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DynizerQuery(ctx context.Context, in *DQLReq, opts ...grpc.CallOption) (*DQLRes, error) {
	out := new(DQLRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DynizerQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) QueryResultNext(ctx context.Context, in *QueryResultReq, opts ...grpc.CallOption) (*QueryResultRes, error) {
	out := new(QueryResultRes)
	err := c.cc.Invoke(ctx, "/Dynizer/QueryResultNext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) QueryResultClose(ctx context.Context, in *QueryCloseReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/QueryResultClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) QueryResultStreamed(ctx context.Context, in *QueryResultReq, opts ...grpc.CallOption) (Dynizer_QueryResultStreamedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dynizer_serviceDesc.Streams[3], "/Dynizer/QueryResultStreamed", opts...)
	if err != nil {
		return nil, err
	}
	x := &dynizerQueryResultStreamedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Dynizer_QueryResultStreamedClient interface {
	Recv() (*ResultRow, error)
	grpc.ClientStream
}

type dynizerQueryResultStreamedClient struct {
	grpc.ClientStream
}

func (x *dynizerQueryResultStreamedClient) Recv() (*ResultRow, error) {
	m := new(ResultRow)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dynizerClient) CheckMetaDataKeyName(ctx context.Context, in *CheckMetaDataKeyNameReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CheckMetaDataKeyName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateMetaDataKey(ctx context.Context, in *CreateMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateMetaDataKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReadMetaDataKey(ctx context.Context, in *MetaDataKeyReq, opts ...grpc.CallOption) (*MetaDataKeyRes, error) {
	out := new(MetaDataKeyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReadMetaDataKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) UpdateMetaDataKey(ctx context.Context, in *UpdateMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/UpdateMetaDataKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DeleteMetaDataKey(ctx context.Context, in *DeleteMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DeleteMetaDataKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountMetaDataKeys(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountMetaDataKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListMetaDataKeys(ctx context.Context, in *ListMetaDataKeysReq, opts ...grpc.CallOption) (*MetaDataKeyArrayRes, error) {
	out := new(MetaDataKeyArrayRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListMetaDataKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceMetaData(ctx context.Context, in *AddInstanceMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceMetaData(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceMetaDataValue(ctx context.Context, in *AddInstanceMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceMetaDataValue(ctx context.Context, in *InstanceMetaDataKeyValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetInstanceMetaDataValues(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*GetInstanceMetaDataKeyRes, error) {
	out := new(GetInstanceMetaDataKeyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetInstanceMetaDataValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountInstanceMetaDataKeys(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountInstanceMetaDataKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountInstanceMetaDataKeyValues(ctx context.Context, in *InstanceMetaDataKeyReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountInstanceMetaDataKeyValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListInstanceMetaData(ctx context.Context, in *InstanceReq, opts ...grpc.CallOption) (*ListInstanceMetaDataRes, error) {
	out := new(ListInstanceMetaDataRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListInstanceMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceActionLabelMetaData(ctx context.Context, in *AddInstanceActionLabelMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceActionLabelMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceActionLabelMetaData(ctx context.Context, in *InstanceActionLabelMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceActionLabelMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceActionLabelMetaDataValue(ctx context.Context, in *AddInstanceActionLabelMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceActionLabelMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceActionLabelMetaDataValue(ctx context.Context, in *InstanceActionLabelMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceActionLabelMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceCellMetaData(ctx context.Context, in *AddInstanceCellMetaDataReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceCellMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceCellMetaData(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceCellMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) AddInstanceCellMetaDataValue(ctx context.Context, in *AddInstanceCellMetaDataValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/AddInstanceCellMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) RemoveInstanceCellMetaDataValue(ctx context.Context, in *InstanceCellMetaDataKeyValueReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/RemoveInstanceCellMetaDataValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetInstanceCellMetaDataValues(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*GetInstanceCellMetaDataKeyRes, error) {
	out := new(GetInstanceCellMetaDataKeyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetInstanceCellMetaDataValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountInstanceCellMetaDataKeys(ctx context.Context, in *InstanceCellMetaDataReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountInstanceCellMetaDataKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CountInstanceCellMetaDataKeyValues(ctx context.Context, in *InstanceCellMetaDataKeyReq, opts ...grpc.CallOption) (*CountRes, error) {
	out := new(CountRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CountInstanceCellMetaDataKeyValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ListInstanceCellMetaData(ctx context.Context, in *InstanceCellMetaDataReq, opts ...grpc.CallOption) (*ListInstanceCellMetaDataRes, error) {
	out := new(ListInstanceCellMetaDataRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ListInstanceCellMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetDynizerConfiguration(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetDynizerConfigurationRes, error) {
	out := new(GetDynizerConfigurationRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetDynizerConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ExportUserActions(ctx context.Context, in *ExportUserActionsReq, opts ...grpc.CallOption) (*ExportUserActionsRes, error) {
	out := new(ExportUserActionsRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ExportUserActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ImportUserActions(ctx context.Context, in *ImportUserActionsReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ImportUserActions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DropData(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DropData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetDynizerVersion(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*VersionRes, error) {
	out := new(VersionRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetDynizerVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) CreateActionLabelLink(ctx context.Context, in *ActionLabelLinkReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/CreateActionLabelLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetActionLabelLink(ctx context.Context, in *ActionLabelLinkNameReq, opts ...grpc.CallOption) (*ActionLabelLinkRes, error) {
	out := new(ActionLabelLinkRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetActionLabelLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) QueryDataElements(ctx context.Context, in *QueryDataElementsReq, opts ...grpc.CallOption) (*QueryDataElementsRes, error) {
	out := new(QueryDataElementsRes)
	err := c.cc.Invoke(ctx, "/Dynizer/QueryDataElements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) GetTopNDataElements(ctx context.Context, in *GetTopNDataElementsReq, opts ...grpc.CallOption) (*GetTopNDataElementsRes, error) {
	out := new(GetTopNDataElementsRes)
	err := c.cc.Invoke(ctx, "/Dynizer/GetTopNDataElements", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DynizerFilteredQuery(ctx context.Context, in *FilterQueryReq, opts ...grpc.CallOption) (*DQLRes, error) {
	out := new(DQLRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DynizerFilteredQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) ReIndex(ctx context.Context, in *ReIndexReq, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/Dynizer/ReIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynizerClient) DynizerFilteredPlot(ctx context.Context, in *FilteredPlotReq, opts ...grpc.CallOption) (*PlotRes, error) {
	out := new(PlotRes)
	err := c.cc.Invoke(ctx, "/Dynizer/DynizerFilteredPlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynizerServer is the server API for Dynizer service.
type DynizerServer interface {
	//Login
	Login(context.Context, *LoginReq) (*LoginRes, error)
	//Service Login
	ServiceLogin(context.Context, *ServiceLoginReq) (*LoginRes, error)
	//Logout
	Logout(context.Context, *EmptyReq) (*EmptyRes, error)
	//Validate Token
	ValidateToken(context.Context, *TokenReq) (*SessionID, error)
	//Issue ServiceToken
	IssueServiceToken(context.Context, *EmptyReq) (*ServiceTokenRes, error)
	//List Roles
	ListRoles(context.Context, *EmptyReq) (*ListRolesRes, error)
	//Add User
	AddUser(context.Context, *AddUserReq) (*EmptyRes, error)
	//Assign User Role
	AssignUserRole(context.Context, *UserRoleReq) (*EmptyRes, error)
	//Revoke User Role
	RevokeUserRole(context.Context, *UserRoleReq) (*EmptyRes, error)
	//Enable User
	EnableUser(context.Context, *UserReq) (*EmptyRes, error)
	//Disable User
	DisableUser(context.Context, *UserReq) (*EmptyRes, error)
	//Set User Password
	SetUserPassword(context.Context, *SetUserPasswordReq) (*EmptyRes, error)
	//Change My Password
	ChangeMyPassword(context.Context, *ChangePasswordReq) (*EmptyRes, error)
	//Get User
	GetUser(context.Context, *UserReq) (*UserRes, error)
	//Get My Profile
	GetMyProfile(context.Context, *EmptyReq) (*UserRes, error)
	//Delete User
	DeleteUser(context.Context, *UserReq) (*EmptyRes, error)
	//Get User Count
	GetUserCount(context.Context, *EmptyReq) (*UserCountRes, error)
	//List Users
	ListUsers(context.Context, *WindowReq) (*ListUsersRes, error)
	//List User Roles
	ListUserRoles(context.Context, *UserReq) (*ListUserRolesRes, error)
	//Get My Roles
	GetMyRoles(context.Context, *EmptyReq) (*ListUserRolesRes, error)
	//Check User Name
	CheckUserName(context.Context, *UserReq) (*EmptyRes, error)
	//Check Password
	CheckPassword(context.Context, *CheckPasswordReq) (*CheckPasswordRes, error)
	//Create ActionType
	CreateActionType(context.Context, *CreateActionTypeReq) (*EmptyRes, error)
	//Update ActionType
	UpdateActionType(context.Context, *UpdateActionTypeReq) (*EmptyRes, error)
	//Read ActionType
	ReadActionType(context.Context, *ActionTypeReq) (*ActionTypeRes, error)
	//Check Action Name
	CheckActionName(context.Context, *CheckActionNameReq) (*EmptyRes, error)
	//Create Action
	CreateAction(context.Context, *CreateActionReq) (*EmptyRes, error)
	//Update Action
	UpdateAction(context.Context, *UpdateActionReq) (*EmptyRes, error)
	//Delete Action
	DeleteAction(context.Context, *DeleteActionReq) (*EmptyRes, error)
	//Read Action
	ReadAction(context.Context, *ActionReq) (*ActionRes, error)
	//Count Actions
	CountActions(context.Context, *CountActionReq) (*CountRes, error)
	//List Action Names
	ListActionNames(context.Context, *ListActionNamesWindowReq) (*ActionNameArrayRes, error)
	//Check ActionLabel Name
	CheckActionLabelName(context.Context, *CheckActionLabelNameReq) (*EmptyRes, error)
	//Add ActionLabel
	AddActionLabel(context.Context, *AddActionLabelReq) (*EmptyRes, error)
	//Update ActionLabel
	UpdateActionLabel(context.Context, *UpdateActionLabelReq) (*EmptyRes, error)
	//Delete ActionLabel
	DeleteActionLabel(context.Context, *ActionLabelReq) (*EmptyRes, error)
	//Read ActionLabel
	ReadActionLabel(context.Context, *ActionLabelReq) (*LabelRes, error)
	//Create Object
	CreateObject(context.Context, *CreateObjectReq) (*ObjectRes, error)
	//Clear Object Data
	ClearObjectData(context.Context, *ClearObjectDataReq) (*EmptyRes, error)
	//Stream Object Data IN
	StreamObjectDataIn(Dynizer_StreamObjectDataInServer) error
	//Stream Object Data OUT
	StreamObjectDataOut(*StreamObjectDataOutReq, Dynizer_StreamObjectDataOutServer) error
	//Upload Object Data
	UploadObjectData(context.Context, *UploadObjectDataReq) (*EmptyRes, error)
	//Download Object Data
	DownloadObjectData(context.Context, *DownloadObjectDataReq) (*DownloadObjectDataRes, error)
	//Create Instance
	CreateInstance(context.Context, *CreateInstanceReq) (*InstanceIDRes, error)
	StreamInstances(Dynizer_StreamInstancesServer) error
	//Update Instance
	UpdateInstance(context.Context, *UpdateInstanceReq) (*EmptyRes, error)
	//Delete Instance
	DeleteInstance(context.Context, *InstanceReq) (*EmptyRes, error)
	//Read Instance
	ReadInstance(context.Context, *InstanceReq) (*InstanceRes, error)
	//Read Action Instances
	ReadActionInstances(context.Context, *ReadActionInstancesReq) (*ReadActionInstancesRes, error)
	//Dynizer Query
	DynizerQuery(context.Context, *DQLReq) (*DQLRes, error)
	//Query Result Next
	QueryResultNext(context.Context, *QueryResultReq) (*QueryResultRes, error)
	//QueryResultClose
	QueryResultClose(context.Context, *QueryCloseReq) (*EmptyRes, error)
	//Query Result Streamed
	QueryResultStreamed(*QueryResultReq, Dynizer_QueryResultStreamedServer) error
	//Check MetaDataKey Name
	CheckMetaDataKeyName(context.Context, *CheckMetaDataKeyNameReq) (*EmptyRes, error)
	//Create MetaDataKey
	CreateMetaDataKey(context.Context, *CreateMetaDataKeyReq) (*EmptyRes, error)
	//Read MetaDataKey
	ReadMetaDataKey(context.Context, *MetaDataKeyReq) (*MetaDataKeyRes, error)
	//Update MetaDataKey
	UpdateMetaDataKey(context.Context, *UpdateMetaDataKeyReq) (*EmptyRes, error)
	//Delete MetaDataKey
	DeleteMetaDataKey(context.Context, *DeleteMetaDataKeyReq) (*EmptyRes, error)
	//Count MetaDataKeys
	CountMetaDataKeys(context.Context, *EmptyReq) (*CountRes, error)
	//List MetaDataKeys
	ListMetaDataKeys(context.Context, *ListMetaDataKeysReq) (*MetaDataKeyArrayRes, error)
	//Add Instance MetaData
	AddInstanceMetaData(context.Context, *AddInstanceMetaDataReq) (*EmptyRes, error)
	//Remove Instance MetaData
	RemoveInstanceMetaData(context.Context, *InstanceMetaDataKeyReq) (*EmptyRes, error)
	//Add Instance MetaData Value
	AddInstanceMetaDataValue(context.Context, *AddInstanceMetaDataValueReq) (*EmptyRes, error)
	//Remove Instance MetaData Value
	RemoveInstanceMetaDataValue(context.Context, *InstanceMetaDataKeyValueReq) (*EmptyRes, error)
	//Get Instance MetaData Values
	GetInstanceMetaDataValues(context.Context, *InstanceMetaDataKeyReq) (*GetInstanceMetaDataKeyRes, error)
	//Count Instance MetaDataKeys
	CountInstanceMetaDataKeys(context.Context, *InstanceReq) (*CountRes, error)
	//Count Instance MetaDataKey Values
	CountInstanceMetaDataKeyValues(context.Context, *InstanceMetaDataKeyReq) (*CountRes, error)
	//List Instance MetaData
	ListInstanceMetaData(context.Context, *InstanceReq) (*ListInstanceMetaDataRes, error)
	//Add Instance ActionLabel MetaData
	AddInstanceActionLabelMetaData(context.Context, *AddInstanceActionLabelMetaDataReq) (*EmptyRes, error)
	//Remove Instance ActionLabel MetaData
	RemoveInstanceActionLabelMetaData(context.Context, *InstanceActionLabelMetaDataKeyReq) (*EmptyRes, error)
	//Add Instance ActionLabel MetaData Value
	AddInstanceActionLabelMetaDataValue(context.Context, *AddInstanceActionLabelMetaDataValueReq) (*EmptyRes, error)
	//Remove Instance ActionLabel MetaData Value
	RemoveInstanceActionLabelMetaDataValue(context.Context, *InstanceActionLabelMetaDataValueReq) (*EmptyRes, error)
	//Add InstanceCell MetaData
	AddInstanceCellMetaData(context.Context, *AddInstanceCellMetaDataReq) (*EmptyRes, error)
	//Remove InstanceCell MetaData
	RemoveInstanceCellMetaData(context.Context, *InstanceCellMetaDataKeyReq) (*EmptyRes, error)
	//Add InstanceCell MetaData Value
	AddInstanceCellMetaDataValue(context.Context, *AddInstanceCellMetaDataValueReq) (*EmptyRes, error)
	//Remove InstanceCell MetaData Value
	RemoveInstanceCellMetaDataValue(context.Context, *InstanceCellMetaDataKeyValueReq) (*EmptyRes, error)
	//Get InstanceCell MetaData
	GetInstanceCellMetaDataValues(context.Context, *InstanceCellMetaDataKeyReq) (*GetInstanceCellMetaDataKeyRes, error)
	//Count InstanceCell MetaDataKeys
	CountInstanceCellMetaDataKeys(context.Context, *InstanceCellMetaDataReq) (*CountRes, error)
	//Count InstanceCell MetaDataKey Values
	CountInstanceCellMetaDataKeyValues(context.Context, *InstanceCellMetaDataKeyReq) (*CountRes, error)
	//List InstanceCell MetaData
	ListInstanceCellMetaData(context.Context, *InstanceCellMetaDataReq) (*ListInstanceCellMetaDataRes, error)
	GetDynizerConfiguration(context.Context, *EmptyReq) (*GetDynizerConfigurationRes, error)
	ExportUserActions(context.Context, *ExportUserActionsReq) (*ExportUserActionsRes, error)
	ImportUserActions(context.Context, *ImportUserActionsReq) (*EmptyRes, error)
	DropData(context.Context, *EmptyReq) (*EmptyRes, error)
	//Get Dynizer Version
	GetDynizerVersion(context.Context, *EmptyReq) (*VersionRes, error)
	//Create a new Link via Action Label
	CreateActionLabelLink(context.Context, *ActionLabelLinkReq) (*EmptyRes, error)
	//Read a Link via Action Label
	GetActionLabelLink(context.Context, *ActionLabelLinkNameReq) (*ActionLabelLinkRes, error)
	//Query DataElements Contains
	QueryDataElements(context.Context, *QueryDataElementsReq) (*QueryDataElementsRes, error)
	//Query DataElements TopN
	GetTopNDataElements(context.Context, *GetTopNDataElementsReq) (*GetTopNDataElementsRes, error)
	//Dynizer Filtered Query
	DynizerFilteredQuery(context.Context, *FilterQueryReq) (*DQLRes, error)
	//Dynizer Index rebuild
	ReIndex(context.Context, *ReIndexReq) (*EmptyRes, error)
	//Dynizer Filtered Plot
	DynizerFilteredPlot(context.Context, *FilteredPlotReq) (*PlotRes, error)
}

// UnimplementedDynizerServer can be embedded to have forward compatible implementations.
type UnimplementedDynizerServer struct {
}

func (*UnimplementedDynizerServer) Login(ctx context.Context, req *LoginReq) (*LoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedDynizerServer) ServiceLogin(ctx context.Context, req *ServiceLoginReq) (*LoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceLogin not implemented")
}
func (*UnimplementedDynizerServer) Logout(ctx context.Context, req *EmptyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedDynizerServer) ValidateToken(ctx context.Context, req *TokenReq) (*SessionID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateToken not implemented")
}
func (*UnimplementedDynizerServer) IssueServiceToken(ctx context.Context, req *EmptyReq) (*ServiceTokenRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IssueServiceToken not implemented")
}
func (*UnimplementedDynizerServer) ListRoles(ctx context.Context, req *EmptyReq) (*ListRolesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoles not implemented")
}
func (*UnimplementedDynizerServer) AddUser(ctx context.Context, req *AddUserReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedDynizerServer) AssignUserRole(ctx context.Context, req *UserRoleReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignUserRole not implemented")
}
func (*UnimplementedDynizerServer) RevokeUserRole(ctx context.Context, req *UserRoleReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeUserRole not implemented")
}
func (*UnimplementedDynizerServer) EnableUser(ctx context.Context, req *UserReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableUser not implemented")
}
func (*UnimplementedDynizerServer) DisableUser(ctx context.Context, req *UserReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableUser not implemented")
}
func (*UnimplementedDynizerServer) SetUserPassword(ctx context.Context, req *SetUserPasswordReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPassword not implemented")
}
func (*UnimplementedDynizerServer) ChangeMyPassword(ctx context.Context, req *ChangePasswordReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeMyPassword not implemented")
}
func (*UnimplementedDynizerServer) GetUser(ctx context.Context, req *UserReq) (*UserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedDynizerServer) GetMyProfile(ctx context.Context, req *EmptyReq) (*UserRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyProfile not implemented")
}
func (*UnimplementedDynizerServer) DeleteUser(ctx context.Context, req *UserReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedDynizerServer) GetUserCount(ctx context.Context, req *EmptyReq) (*UserCountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserCount not implemented")
}
func (*UnimplementedDynizerServer) ListUsers(ctx context.Context, req *WindowReq) (*ListUsersRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedDynizerServer) ListUserRoles(ctx context.Context, req *UserReq) (*ListUserRolesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserRoles not implemented")
}
func (*UnimplementedDynizerServer) GetMyRoles(ctx context.Context, req *EmptyReq) (*ListUserRolesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyRoles not implemented")
}
func (*UnimplementedDynizerServer) CheckUserName(ctx context.Context, req *UserReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserName not implemented")
}
func (*UnimplementedDynizerServer) CheckPassword(ctx context.Context, req *CheckPasswordReq) (*CheckPasswordRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPassword not implemented")
}
func (*UnimplementedDynizerServer) CreateActionType(ctx context.Context, req *CreateActionTypeReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActionType not implemented")
}
func (*UnimplementedDynizerServer) UpdateActionType(ctx context.Context, req *UpdateActionTypeReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActionType not implemented")
}
func (*UnimplementedDynizerServer) ReadActionType(ctx context.Context, req *ActionTypeReq) (*ActionTypeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadActionType not implemented")
}
func (*UnimplementedDynizerServer) CheckActionName(ctx context.Context, req *CheckActionNameReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckActionName not implemented")
}
func (*UnimplementedDynizerServer) CreateAction(ctx context.Context, req *CreateActionReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAction not implemented")
}
func (*UnimplementedDynizerServer) UpdateAction(ctx context.Context, req *UpdateActionReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAction not implemented")
}
func (*UnimplementedDynizerServer) DeleteAction(ctx context.Context, req *DeleteActionReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAction not implemented")
}
func (*UnimplementedDynizerServer) ReadAction(ctx context.Context, req *ActionReq) (*ActionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAction not implemented")
}
func (*UnimplementedDynizerServer) CountActions(ctx context.Context, req *CountActionReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountActions not implemented")
}
func (*UnimplementedDynizerServer) ListActionNames(ctx context.Context, req *ListActionNamesWindowReq) (*ActionNameArrayRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListActionNames not implemented")
}
func (*UnimplementedDynizerServer) CheckActionLabelName(ctx context.Context, req *CheckActionLabelNameReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckActionLabelName not implemented")
}
func (*UnimplementedDynizerServer) AddActionLabel(ctx context.Context, req *AddActionLabelReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddActionLabel not implemented")
}
func (*UnimplementedDynizerServer) UpdateActionLabel(ctx context.Context, req *UpdateActionLabelReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateActionLabel not implemented")
}
func (*UnimplementedDynizerServer) DeleteActionLabel(ctx context.Context, req *ActionLabelReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteActionLabel not implemented")
}
func (*UnimplementedDynizerServer) ReadActionLabel(ctx context.Context, req *ActionLabelReq) (*LabelRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadActionLabel not implemented")
}
func (*UnimplementedDynizerServer) CreateObject(ctx context.Context, req *CreateObjectReq) (*ObjectRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObject not implemented")
}
func (*UnimplementedDynizerServer) ClearObjectData(ctx context.Context, req *ClearObjectDataReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearObjectData not implemented")
}
func (*UnimplementedDynizerServer) StreamObjectDataIn(srv Dynizer_StreamObjectDataInServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamObjectDataIn not implemented")
}
func (*UnimplementedDynizerServer) StreamObjectDataOut(req *StreamObjectDataOutReq, srv Dynizer_StreamObjectDataOutServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamObjectDataOut not implemented")
}
func (*UnimplementedDynizerServer) UploadObjectData(ctx context.Context, req *UploadObjectDataReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadObjectData not implemented")
}
func (*UnimplementedDynizerServer) DownloadObjectData(ctx context.Context, req *DownloadObjectDataReq) (*DownloadObjectDataRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadObjectData not implemented")
}
func (*UnimplementedDynizerServer) CreateInstance(ctx context.Context, req *CreateInstanceReq) (*InstanceIDRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInstance not implemented")
}
func (*UnimplementedDynizerServer) StreamInstances(srv Dynizer_StreamInstancesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamInstances not implemented")
}
func (*UnimplementedDynizerServer) UpdateInstance(ctx context.Context, req *UpdateInstanceReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInstance not implemented")
}
func (*UnimplementedDynizerServer) DeleteInstance(ctx context.Context, req *InstanceReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInstance not implemented")
}
func (*UnimplementedDynizerServer) ReadInstance(ctx context.Context, req *InstanceReq) (*InstanceRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadInstance not implemented")
}
func (*UnimplementedDynizerServer) ReadActionInstances(ctx context.Context, req *ReadActionInstancesReq) (*ReadActionInstancesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadActionInstances not implemented")
}
func (*UnimplementedDynizerServer) DynizerQuery(ctx context.Context, req *DQLReq) (*DQLRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynizerQuery not implemented")
}
func (*UnimplementedDynizerServer) QueryResultNext(ctx context.Context, req *QueryResultReq) (*QueryResultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryResultNext not implemented")
}
func (*UnimplementedDynizerServer) QueryResultClose(ctx context.Context, req *QueryCloseReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryResultClose not implemented")
}
func (*UnimplementedDynizerServer) QueryResultStreamed(req *QueryResultReq, srv Dynizer_QueryResultStreamedServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryResultStreamed not implemented")
}
func (*UnimplementedDynizerServer) CheckMetaDataKeyName(ctx context.Context, req *CheckMetaDataKeyNameReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckMetaDataKeyName not implemented")
}
func (*UnimplementedDynizerServer) CreateMetaDataKey(ctx context.Context, req *CreateMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetaDataKey not implemented")
}
func (*UnimplementedDynizerServer) ReadMetaDataKey(ctx context.Context, req *MetaDataKeyReq) (*MetaDataKeyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMetaDataKey not implemented")
}
func (*UnimplementedDynizerServer) UpdateMetaDataKey(ctx context.Context, req *UpdateMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMetaDataKey not implemented")
}
func (*UnimplementedDynizerServer) DeleteMetaDataKey(ctx context.Context, req *DeleteMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMetaDataKey not implemented")
}
func (*UnimplementedDynizerServer) CountMetaDataKeys(ctx context.Context, req *EmptyReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountMetaDataKeys not implemented")
}
func (*UnimplementedDynizerServer) ListMetaDataKeys(ctx context.Context, req *ListMetaDataKeysReq) (*MetaDataKeyArrayRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetaDataKeys not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceMetaData(ctx context.Context, req *AddInstanceMetaDataReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceMetaData not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceMetaData(ctx context.Context, req *InstanceMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceMetaData not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceMetaDataValue(ctx context.Context, req *AddInstanceMetaDataValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceMetaDataValue(ctx context.Context, req *InstanceMetaDataKeyValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) GetInstanceMetaDataValues(ctx context.Context, req *InstanceMetaDataKeyReq) (*GetInstanceMetaDataKeyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstanceMetaDataValues not implemented")
}
func (*UnimplementedDynizerServer) CountInstanceMetaDataKeys(ctx context.Context, req *InstanceReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountInstanceMetaDataKeys not implemented")
}
func (*UnimplementedDynizerServer) CountInstanceMetaDataKeyValues(ctx context.Context, req *InstanceMetaDataKeyReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountInstanceMetaDataKeyValues not implemented")
}
func (*UnimplementedDynizerServer) ListInstanceMetaData(ctx context.Context, req *InstanceReq) (*ListInstanceMetaDataRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInstanceMetaData not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceActionLabelMetaData(ctx context.Context, req *AddInstanceActionLabelMetaDataReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceActionLabelMetaData not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceActionLabelMetaData(ctx context.Context, req *InstanceActionLabelMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceActionLabelMetaData not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceActionLabelMetaDataValue(ctx context.Context, req *AddInstanceActionLabelMetaDataValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceActionLabelMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceActionLabelMetaDataValue(ctx context.Context, req *InstanceActionLabelMetaDataValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceActionLabelMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceCellMetaData(ctx context.Context, req *AddInstanceCellMetaDataReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceCellMetaData not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceCellMetaData(ctx context.Context, req *InstanceCellMetaDataKeyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceCellMetaData not implemented")
}
func (*UnimplementedDynizerServer) AddInstanceCellMetaDataValue(ctx context.Context, req *AddInstanceCellMetaDataValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddInstanceCellMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) RemoveInstanceCellMetaDataValue(ctx context.Context, req *InstanceCellMetaDataKeyValueReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveInstanceCellMetaDataValue not implemented")
}
func (*UnimplementedDynizerServer) GetInstanceCellMetaDataValues(ctx context.Context, req *InstanceCellMetaDataKeyReq) (*GetInstanceCellMetaDataKeyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstanceCellMetaDataValues not implemented")
}
func (*UnimplementedDynizerServer) CountInstanceCellMetaDataKeys(ctx context.Context, req *InstanceCellMetaDataReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountInstanceCellMetaDataKeys not implemented")
}
func (*UnimplementedDynizerServer) CountInstanceCellMetaDataKeyValues(ctx context.Context, req *InstanceCellMetaDataKeyReq) (*CountRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountInstanceCellMetaDataKeyValues not implemented")
}
func (*UnimplementedDynizerServer) ListInstanceCellMetaData(ctx context.Context, req *InstanceCellMetaDataReq) (*ListInstanceCellMetaDataRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInstanceCellMetaData not implemented")
}
func (*UnimplementedDynizerServer) GetDynizerConfiguration(ctx context.Context, req *EmptyReq) (*GetDynizerConfigurationRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDynizerConfiguration not implemented")
}
func (*UnimplementedDynizerServer) ExportUserActions(ctx context.Context, req *ExportUserActionsReq) (*ExportUserActionsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportUserActions not implemented")
}
func (*UnimplementedDynizerServer) ImportUserActions(ctx context.Context, req *ImportUserActionsReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportUserActions not implemented")
}
func (*UnimplementedDynizerServer) DropData(ctx context.Context, req *EmptyReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropData not implemented")
}
func (*UnimplementedDynizerServer) GetDynizerVersion(ctx context.Context, req *EmptyReq) (*VersionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDynizerVersion not implemented")
}
func (*UnimplementedDynizerServer) CreateActionLabelLink(ctx context.Context, req *ActionLabelLinkReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateActionLabelLink not implemented")
}
func (*UnimplementedDynizerServer) GetActionLabelLink(ctx context.Context, req *ActionLabelLinkNameReq) (*ActionLabelLinkRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActionLabelLink not implemented")
}
func (*UnimplementedDynizerServer) QueryDataElements(ctx context.Context, req *QueryDataElementsReq) (*QueryDataElementsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDataElements not implemented")
}
func (*UnimplementedDynizerServer) GetTopNDataElements(ctx context.Context, req *GetTopNDataElementsReq) (*GetTopNDataElementsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopNDataElements not implemented")
}
func (*UnimplementedDynizerServer) DynizerFilteredQuery(ctx context.Context, req *FilterQueryReq) (*DQLRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynizerFilteredQuery not implemented")
}
func (*UnimplementedDynizerServer) ReIndex(ctx context.Context, req *ReIndexReq) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReIndex not implemented")
}
func (*UnimplementedDynizerServer) DynizerFilteredPlot(ctx context.Context, req *FilteredPlotReq) (*PlotRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DynizerFilteredPlot not implemented")
}

func RegisterDynizerServer(s *grpc.Server, srv DynizerServer) {
	s.RegisterService(&_Dynizer_serviceDesc, srv)
}

func _Dynizer_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ServiceLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ServiceLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ServiceLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ServiceLogin(ctx, req.(*ServiceLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).Logout(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ValidateToken(ctx, req.(*TokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_IssueServiceToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).IssueServiceToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/IssueServiceToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).IssueServiceToken(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListRoles(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AssignUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AssignUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AssignUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AssignUserRole(ctx, req.(*UserRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RevokeUserRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RevokeUserRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RevokeUserRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RevokeUserRole(ctx, req.(*UserRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_EnableUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).EnableUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/EnableUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).EnableUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DisableUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DisableUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DisableUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DisableUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_SetUserPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).SetUserPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/SetUserPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).SetUserPassword(ctx, req.(*SetUserPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ChangeMyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ChangeMyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ChangeMyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ChangeMyPassword(ctx, req.(*ChangePasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetMyProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetMyProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetMyProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetMyProfile(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DeleteUser(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetUserCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetUserCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetUserCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetUserCount(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WindowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListUsers(ctx, req.(*WindowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListUserRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListUserRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListUserRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListUserRoles(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetMyRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetMyRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetMyRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetMyRoles(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CheckUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CheckUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CheckUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CheckUserName(ctx, req.(*UserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CheckPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckPasswordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CheckPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CheckPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CheckPassword(ctx, req.(*CheckPasswordReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateActionType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActionTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateActionType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateActionType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateActionType(ctx, req.(*CreateActionTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_UpdateActionType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActionTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UpdateActionType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UpdateActionType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UpdateActionType(ctx, req.(*UpdateActionTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadActionType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadActionType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadActionType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadActionType(ctx, req.(*ActionTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CheckActionName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckActionNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CheckActionName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CheckActionName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CheckActionName(ctx, req.(*CheckActionNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateAction(ctx, req.(*CreateActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_UpdateAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UpdateAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UpdateAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UpdateAction(ctx, req.(*UpdateActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DeleteAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DeleteAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DeleteAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DeleteAction(ctx, req.(*DeleteActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadAction(ctx, req.(*ActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountActionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountActions(ctx, req.(*CountActionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListActionNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActionNamesWindowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListActionNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListActionNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListActionNames(ctx, req.(*ListActionNamesWindowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CheckActionLabelName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckActionLabelNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CheckActionLabelName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CheckActionLabelName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CheckActionLabelName(ctx, req.(*CheckActionLabelNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddActionLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddActionLabelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddActionLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddActionLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddActionLabel(ctx, req.(*AddActionLabelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_UpdateActionLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateActionLabelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UpdateActionLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UpdateActionLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UpdateActionLabel(ctx, req.(*UpdateActionLabelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DeleteActionLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionLabelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DeleteActionLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DeleteActionLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DeleteActionLabel(ctx, req.(*ActionLabelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadActionLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionLabelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadActionLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadActionLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadActionLabel(ctx, req.(*ActionLabelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateObject(ctx, req.(*CreateObjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ClearObjectData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearObjectDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ClearObjectData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ClearObjectData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ClearObjectData(ctx, req.(*ClearObjectDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_StreamObjectDataIn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DynizerServer).StreamObjectDataIn(&dynizerStreamObjectDataInServer{stream})
}

type Dynizer_StreamObjectDataInServer interface {
	SendAndClose(*EmptyRes) error
	Recv() (*StreamObjectDataInReq, error)
	grpc.ServerStream
}

type dynizerStreamObjectDataInServer struct {
	grpc.ServerStream
}

func (x *dynizerStreamObjectDataInServer) SendAndClose(m *EmptyRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dynizerStreamObjectDataInServer) Recv() (*StreamObjectDataInReq, error) {
	m := new(StreamObjectDataInReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dynizer_StreamObjectDataOut_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamObjectDataOutReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DynizerServer).StreamObjectDataOut(m, &dynizerStreamObjectDataOutServer{stream})
}

type Dynizer_StreamObjectDataOutServer interface {
	Send(*StreamObjectDataOutRes) error
	grpc.ServerStream
}

type dynizerStreamObjectDataOutServer struct {
	grpc.ServerStream
}

func (x *dynizerStreamObjectDataOutServer) Send(m *StreamObjectDataOutRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Dynizer_UploadObjectData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadObjectDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UploadObjectData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UploadObjectData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UploadObjectData(ctx, req.(*UploadObjectDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DownloadObjectData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadObjectDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DownloadObjectData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DownloadObjectData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DownloadObjectData(ctx, req.(*DownloadObjectDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateInstance(ctx, req.(*CreateInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_StreamInstances_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DynizerServer).StreamInstances(&dynizerStreamInstancesServer{stream})
}

type Dynizer_StreamInstancesServer interface {
	Send(*StreamInstanceIDRes) error
	Recv() (*StreamInstanceReq, error)
	grpc.ServerStream
}

type dynizerStreamInstancesServer struct {
	grpc.ServerStream
}

func (x *dynizerStreamInstancesServer) Send(m *StreamInstanceIDRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dynizerStreamInstancesServer) Recv() (*StreamInstanceReq, error) {
	m := new(StreamInstanceReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dynizer_UpdateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UpdateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UpdateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UpdateInstance(ctx, req.(*UpdateInstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DeleteInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DeleteInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DeleteInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DeleteInstance(ctx, req.(*InstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadInstance(ctx, req.(*InstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadActionInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadActionInstancesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadActionInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadActionInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadActionInstances(ctx, req.(*ReadActionInstancesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DynizerQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DQLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DynizerQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DynizerQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DynizerQuery(ctx, req.(*DQLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_QueryResultNext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).QueryResultNext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/QueryResultNext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).QueryResultNext(ctx, req.(*QueryResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_QueryResultClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryCloseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).QueryResultClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/QueryResultClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).QueryResultClose(ctx, req.(*QueryCloseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_QueryResultStreamed_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryResultReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DynizerServer).QueryResultStreamed(m, &dynizerQueryResultStreamedServer{stream})
}

type Dynizer_QueryResultStreamedServer interface {
	Send(*ResultRow) error
	grpc.ServerStream
}

type dynizerQueryResultStreamedServer struct {
	grpc.ServerStream
}

func (x *dynizerQueryResultStreamedServer) Send(m *ResultRow) error {
	return x.ServerStream.SendMsg(m)
}

func _Dynizer_CheckMetaDataKeyName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckMetaDataKeyNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CheckMetaDataKeyName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CheckMetaDataKeyName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CheckMetaDataKeyName(ctx, req.(*CheckMetaDataKeyNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateMetaDataKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateMetaDataKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateMetaDataKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateMetaDataKey(ctx, req.(*CreateMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReadMetaDataKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReadMetaDataKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReadMetaDataKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReadMetaDataKey(ctx, req.(*MetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_UpdateMetaDataKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).UpdateMetaDataKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/UpdateMetaDataKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).UpdateMetaDataKey(ctx, req.(*UpdateMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DeleteMetaDataKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DeleteMetaDataKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DeleteMetaDataKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DeleteMetaDataKey(ctx, req.(*DeleteMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountMetaDataKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountMetaDataKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountMetaDataKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountMetaDataKeys(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListMetaDataKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetaDataKeysReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListMetaDataKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListMetaDataKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListMetaDataKeys(ctx, req.(*ListMetaDataKeysReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceMetaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceMetaData(ctx, req.(*AddInstanceMetaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceMetaData(ctx, req.(*InstanceMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceMetaDataValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceMetaDataValue(ctx, req.(*AddInstanceMetaDataValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceMetaDataKeyValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceMetaDataValue(ctx, req.(*InstanceMetaDataKeyValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetInstanceMetaDataValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetInstanceMetaDataValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetInstanceMetaDataValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetInstanceMetaDataValues(ctx, req.(*InstanceMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountInstanceMetaDataKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountInstanceMetaDataKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountInstanceMetaDataKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountInstanceMetaDataKeys(ctx, req.(*InstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountInstanceMetaDataKeyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountInstanceMetaDataKeyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountInstanceMetaDataKeyValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountInstanceMetaDataKeyValues(ctx, req.(*InstanceMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListInstanceMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListInstanceMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListInstanceMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListInstanceMetaData(ctx, req.(*InstanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceActionLabelMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceActionLabelMetaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceActionLabelMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceActionLabelMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceActionLabelMetaData(ctx, req.(*AddInstanceActionLabelMetaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceActionLabelMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceActionLabelMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceActionLabelMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceActionLabelMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceActionLabelMetaData(ctx, req.(*InstanceActionLabelMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceActionLabelMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceActionLabelMetaDataValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceActionLabelMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceActionLabelMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceActionLabelMetaDataValue(ctx, req.(*AddInstanceActionLabelMetaDataValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceActionLabelMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceActionLabelMetaDataValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceActionLabelMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceActionLabelMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceActionLabelMetaDataValue(ctx, req.(*InstanceActionLabelMetaDataValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceCellMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceCellMetaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceCellMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceCellMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceCellMetaData(ctx, req.(*AddInstanceCellMetaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceCellMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceCellMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceCellMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceCellMetaData(ctx, req.(*InstanceCellMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_AddInstanceCellMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInstanceCellMetaDataValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).AddInstanceCellMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/AddInstanceCellMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).AddInstanceCellMetaDataValue(ctx, req.(*AddInstanceCellMetaDataValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_RemoveInstanceCellMetaDataValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataKeyValueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).RemoveInstanceCellMetaDataValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/RemoveInstanceCellMetaDataValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).RemoveInstanceCellMetaDataValue(ctx, req.(*InstanceCellMetaDataKeyValueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetInstanceCellMetaDataValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetInstanceCellMetaDataValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetInstanceCellMetaDataValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetInstanceCellMetaDataValues(ctx, req.(*InstanceCellMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountInstanceCellMetaDataKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountInstanceCellMetaDataKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountInstanceCellMetaDataKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountInstanceCellMetaDataKeys(ctx, req.(*InstanceCellMetaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CountInstanceCellMetaDataKeyValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CountInstanceCellMetaDataKeyValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CountInstanceCellMetaDataKeyValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CountInstanceCellMetaDataKeyValues(ctx, req.(*InstanceCellMetaDataKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ListInstanceCellMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstanceCellMetaDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ListInstanceCellMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ListInstanceCellMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ListInstanceCellMetaData(ctx, req.(*InstanceCellMetaDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetDynizerConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetDynizerConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetDynizerConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetDynizerConfiguration(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ExportUserActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportUserActionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ExportUserActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ExportUserActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ExportUserActions(ctx, req.(*ExportUserActionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ImportUserActions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportUserActionsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ImportUserActions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ImportUserActions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ImportUserActions(ctx, req.(*ImportUserActionsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DropData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DropData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DropData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DropData(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetDynizerVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetDynizerVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetDynizerVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetDynizerVersion(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_CreateActionLabelLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionLabelLinkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).CreateActionLabelLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/CreateActionLabelLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).CreateActionLabelLink(ctx, req.(*ActionLabelLinkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetActionLabelLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionLabelLinkNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetActionLabelLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetActionLabelLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetActionLabelLink(ctx, req.(*ActionLabelLinkNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_QueryDataElements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDataElementsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).QueryDataElements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/QueryDataElements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).QueryDataElements(ctx, req.(*QueryDataElementsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_GetTopNDataElements_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopNDataElementsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).GetTopNDataElements(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/GetTopNDataElements",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).GetTopNDataElements(ctx, req.(*GetTopNDataElementsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DynizerFilteredQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterQueryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DynizerFilteredQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DynizerFilteredQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DynizerFilteredQuery(ctx, req.(*FilterQueryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_ReIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).ReIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/ReIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).ReIndex(ctx, req.(*ReIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dynizer_DynizerFilteredPlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilteredPlotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynizerServer).DynizerFilteredPlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Dynizer/DynizerFilteredPlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynizerServer).DynizerFilteredPlot(ctx, req.(*FilteredPlotReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dynizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Dynizer",
	HandlerType: (*DynizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Dynizer_Login_Handler,
		},
		{
			MethodName: "ServiceLogin",
			Handler:    _Dynizer_ServiceLogin_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Dynizer_Logout_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _Dynizer_ValidateToken_Handler,
		},
		{
			MethodName: "IssueServiceToken",
			Handler:    _Dynizer_IssueServiceToken_Handler,
		},
		{
			MethodName: "ListRoles",
			Handler:    _Dynizer_ListRoles_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _Dynizer_AddUser_Handler,
		},
		{
			MethodName: "AssignUserRole",
			Handler:    _Dynizer_AssignUserRole_Handler,
		},
		{
			MethodName: "RevokeUserRole",
			Handler:    _Dynizer_RevokeUserRole_Handler,
		},
		{
			MethodName: "EnableUser",
			Handler:    _Dynizer_EnableUser_Handler,
		},
		{
			MethodName: "DisableUser",
			Handler:    _Dynizer_DisableUser_Handler,
		},
		{
			MethodName: "SetUserPassword",
			Handler:    _Dynizer_SetUserPassword_Handler,
		},
		{
			MethodName: "ChangeMyPassword",
			Handler:    _Dynizer_ChangeMyPassword_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Dynizer_GetUser_Handler,
		},
		{
			MethodName: "GetMyProfile",
			Handler:    _Dynizer_GetMyProfile_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Dynizer_DeleteUser_Handler,
		},
		{
			MethodName: "GetUserCount",
			Handler:    _Dynizer_GetUserCount_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _Dynizer_ListUsers_Handler,
		},
		{
			MethodName: "ListUserRoles",
			Handler:    _Dynizer_ListUserRoles_Handler,
		},
		{
			MethodName: "GetMyRoles",
			Handler:    _Dynizer_GetMyRoles_Handler,
		},
		{
			MethodName: "CheckUserName",
			Handler:    _Dynizer_CheckUserName_Handler,
		},
		{
			MethodName: "CheckPassword",
			Handler:    _Dynizer_CheckPassword_Handler,
		},
		{
			MethodName: "CreateActionType",
			Handler:    _Dynizer_CreateActionType_Handler,
		},
		{
			MethodName: "UpdateActionType",
			Handler:    _Dynizer_UpdateActionType_Handler,
		},
		{
			MethodName: "ReadActionType",
			Handler:    _Dynizer_ReadActionType_Handler,
		},
		{
			MethodName: "CheckActionName",
			Handler:    _Dynizer_CheckActionName_Handler,
		},
		{
			MethodName: "CreateAction",
			Handler:    _Dynizer_CreateAction_Handler,
		},
		{
			MethodName: "UpdateAction",
			Handler:    _Dynizer_UpdateAction_Handler,
		},
		{
			MethodName: "DeleteAction",
			Handler:    _Dynizer_DeleteAction_Handler,
		},
		{
			MethodName: "ReadAction",
			Handler:    _Dynizer_ReadAction_Handler,
		},
		{
			MethodName: "CountActions",
			Handler:    _Dynizer_CountActions_Handler,
		},
		{
			MethodName: "ListActionNames",
			Handler:    _Dynizer_ListActionNames_Handler,
		},
		{
			MethodName: "CheckActionLabelName",
			Handler:    _Dynizer_CheckActionLabelName_Handler,
		},
		{
			MethodName: "AddActionLabel",
			Handler:    _Dynizer_AddActionLabel_Handler,
		},
		{
			MethodName: "UpdateActionLabel",
			Handler:    _Dynizer_UpdateActionLabel_Handler,
		},
		{
			MethodName: "DeleteActionLabel",
			Handler:    _Dynizer_DeleteActionLabel_Handler,
		},
		{
			MethodName: "ReadActionLabel",
			Handler:    _Dynizer_ReadActionLabel_Handler,
		},
		{
			MethodName: "CreateObject",
			Handler:    _Dynizer_CreateObject_Handler,
		},
		{
			MethodName: "ClearObjectData",
			Handler:    _Dynizer_ClearObjectData_Handler,
		},
		{
			MethodName: "UploadObjectData",
			Handler:    _Dynizer_UploadObjectData_Handler,
		},
		{
			MethodName: "DownloadObjectData",
			Handler:    _Dynizer_DownloadObjectData_Handler,
		},
		{
			MethodName: "CreateInstance",
			Handler:    _Dynizer_CreateInstance_Handler,
		},
		{
			MethodName: "UpdateInstance",
			Handler:    _Dynizer_UpdateInstance_Handler,
		},
		{
			MethodName: "DeleteInstance",
			Handler:    _Dynizer_DeleteInstance_Handler,
		},
		{
			MethodName: "ReadInstance",
			Handler:    _Dynizer_ReadInstance_Handler,
		},
		{
			MethodName: "ReadActionInstances",
			Handler:    _Dynizer_ReadActionInstances_Handler,
		},
		{
			MethodName: "DynizerQuery",
			Handler:    _Dynizer_DynizerQuery_Handler,
		},
		{
			MethodName: "QueryResultNext",
			Handler:    _Dynizer_QueryResultNext_Handler,
		},
		{
			MethodName: "QueryResultClose",
			Handler:    _Dynizer_QueryResultClose_Handler,
		},
		{
			MethodName: "CheckMetaDataKeyName",
			Handler:    _Dynizer_CheckMetaDataKeyName_Handler,
		},
		{
			MethodName: "CreateMetaDataKey",
			Handler:    _Dynizer_CreateMetaDataKey_Handler,
		},
		{
			MethodName: "ReadMetaDataKey",
			Handler:    _Dynizer_ReadMetaDataKey_Handler,
		},
		{
			MethodName: "UpdateMetaDataKey",
			Handler:    _Dynizer_UpdateMetaDataKey_Handler,
		},
		{
			MethodName: "DeleteMetaDataKey",
			Handler:    _Dynizer_DeleteMetaDataKey_Handler,
		},
		{
			MethodName: "CountMetaDataKeys",
			Handler:    _Dynizer_CountMetaDataKeys_Handler,
		},
		{
			MethodName: "ListMetaDataKeys",
			Handler:    _Dynizer_ListMetaDataKeys_Handler,
		},
		{
			MethodName: "AddInstanceMetaData",
			Handler:    _Dynizer_AddInstanceMetaData_Handler,
		},
		{
			MethodName: "RemoveInstanceMetaData",
			Handler:    _Dynizer_RemoveInstanceMetaData_Handler,
		},
		{
			MethodName: "AddInstanceMetaDataValue",
			Handler:    _Dynizer_AddInstanceMetaDataValue_Handler,
		},
		{
			MethodName: "RemoveInstanceMetaDataValue",
			Handler:    _Dynizer_RemoveInstanceMetaDataValue_Handler,
		},
		{
			MethodName: "GetInstanceMetaDataValues",
			Handler:    _Dynizer_GetInstanceMetaDataValues_Handler,
		},
		{
			MethodName: "CountInstanceMetaDataKeys",
			Handler:    _Dynizer_CountInstanceMetaDataKeys_Handler,
		},
		{
			MethodName: "CountInstanceMetaDataKeyValues",
			Handler:    _Dynizer_CountInstanceMetaDataKeyValues_Handler,
		},
		{
			MethodName: "ListInstanceMetaData",
			Handler:    _Dynizer_ListInstanceMetaData_Handler,
		},
		{
			MethodName: "AddInstanceActionLabelMetaData",
			Handler:    _Dynizer_AddInstanceActionLabelMetaData_Handler,
		},
		{
			MethodName: "RemoveInstanceActionLabelMetaData",
			Handler:    _Dynizer_RemoveInstanceActionLabelMetaData_Handler,
		},
		{
			MethodName: "AddInstanceActionLabelMetaDataValue",
			Handler:    _Dynizer_AddInstanceActionLabelMetaDataValue_Handler,
		},
		{
			MethodName: "RemoveInstanceActionLabelMetaDataValue",
			Handler:    _Dynizer_RemoveInstanceActionLabelMetaDataValue_Handler,
		},
		{
			MethodName: "AddInstanceCellMetaData",
			Handler:    _Dynizer_AddInstanceCellMetaData_Handler,
		},
		{
			MethodName: "RemoveInstanceCellMetaData",
			Handler:    _Dynizer_RemoveInstanceCellMetaData_Handler,
		},
		{
			MethodName: "AddInstanceCellMetaDataValue",
			Handler:    _Dynizer_AddInstanceCellMetaDataValue_Handler,
		},
		{
			MethodName: "RemoveInstanceCellMetaDataValue",
			Handler:    _Dynizer_RemoveInstanceCellMetaDataValue_Handler,
		},
		{
			MethodName: "GetInstanceCellMetaDataValues",
			Handler:    _Dynizer_GetInstanceCellMetaDataValues_Handler,
		},
		{
			MethodName: "CountInstanceCellMetaDataKeys",
			Handler:    _Dynizer_CountInstanceCellMetaDataKeys_Handler,
		},
		{
			MethodName: "CountInstanceCellMetaDataKeyValues",
			Handler:    _Dynizer_CountInstanceCellMetaDataKeyValues_Handler,
		},
		{
			MethodName: "ListInstanceCellMetaData",
			Handler:    _Dynizer_ListInstanceCellMetaData_Handler,
		},
		{
			MethodName: "GetDynizerConfiguration",
			Handler:    _Dynizer_GetDynizerConfiguration_Handler,
		},
		{
			MethodName: "ExportUserActions",
			Handler:    _Dynizer_ExportUserActions_Handler,
		},
		{
			MethodName: "ImportUserActions",
			Handler:    _Dynizer_ImportUserActions_Handler,
		},
		{
			MethodName: "DropData",
			Handler:    _Dynizer_DropData_Handler,
		},
		{
			MethodName: "GetDynizerVersion",
			Handler:    _Dynizer_GetDynizerVersion_Handler,
		},
		{
			MethodName: "CreateActionLabelLink",
			Handler:    _Dynizer_CreateActionLabelLink_Handler,
		},
		{
			MethodName: "GetActionLabelLink",
			Handler:    _Dynizer_GetActionLabelLink_Handler,
		},
		{
			MethodName: "QueryDataElements",
			Handler:    _Dynizer_QueryDataElements_Handler,
		},
		{
			MethodName: "GetTopNDataElements",
			Handler:    _Dynizer_GetTopNDataElements_Handler,
		},
		{
			MethodName: "DynizerFilteredQuery",
			Handler:    _Dynizer_DynizerFilteredQuery_Handler,
		},
		{
			MethodName: "ReIndex",
			Handler:    _Dynizer_ReIndex_Handler,
		},
		{
			MethodName: "DynizerFilteredPlot",
			Handler:    _Dynizer_DynizerFilteredPlot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamObjectDataIn",
			Handler:       _Dynizer_StreamObjectDataIn_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamObjectDataOut",
			Handler:       _Dynizer_StreamObjectDataOut_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StreamInstances",
			Handler:       _Dynizer_StreamInstances_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "QueryResultStreamed",
			Handler:       _Dynizer_QueryResultStreamed_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dynizer.proto",
}
